[2021-01-08T12:06:17.185085+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:06:17.187620+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:06:17.189455+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:06:17.190450+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:06:17.191061+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:06:17.194460+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:06:17.195425+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:06:17.196392+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:06:17.197096+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:06:17.199133+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:06:17.200276+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:06:17.201140+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:06:17.201734+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:06:17.203054+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:06:17.203847+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:06:17.204770+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:06:17.205403+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:06:17.206773+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:06:17.207555+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:06:17.208335+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:06:17.208881+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:06:17.210409+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:06:17.215616+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:06:17.219836+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:06:17.225093+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:06:17.229770+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:06:17.233963+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:06:17.238595+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:06:17.242794+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:06:17.249330+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:06:17.261337+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:06:17.279659+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:06:17.290268+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:06:17.302407+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:06:17.312403+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:06:17.334870+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:06:17.356819+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:06:17.386318+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:06:17.389211+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:06:17.389656+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:06:17.390346+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:06:17.403555+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:06:17.415153+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:06:17.426793+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:06:17.440691+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:06:17.452334+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:06:17.476931+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:06:17.490451+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:06:17.490769+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:06:17.491045+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:06:17.495035+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"354133f7-7018-4fb5-a13a-60 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:06:17+00:00","6":"2021-01-08T12:06:17+00:00"} []
[2021-01-08T12:06:17.496110+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"e176cae6-1734-4f66-9cf3-60 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:06:17+00:00","6":"2021-01-08T12:06:17+00:00"} []
[2021-01-08T12:06:17.496326+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:06:17.497679+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:06:17.497691+00:00] app.INFO: Done. [] []
[2021-01-08T12:06:17.497702+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:06:17.499921+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:06:17.513323+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:06:17.529580+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:06:17.534412+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:06:17.534427+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.534455+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.538169+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.539454+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:06:17.540528+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.540873+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.540880+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:06:17.595619+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:06:17.597593+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:00.174435+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:07:00.176162+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:00.177705+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:00.178740+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:00.179436+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:07:00.181159+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:00.181909+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:00.182793+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:00.183491+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:07:00.185202+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:00.186048+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:00.186819+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:00.187439+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:07:00.188922+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:00.189699+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:00.190531+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:00.191164+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:07:00.192602+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:00.193495+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:00.194295+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:00.194874+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:07:00.196438+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:07:00.202192+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:07:00.207483+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:07:00.213781+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:07:00.219301+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:07:00.224077+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:07:00.229055+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:07:00.233864+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:07:00.240980+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:00.251822+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:00.264246+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:00.275480+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:00.286568+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:00.297176+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:07:00.326997+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:00.349702+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:00.380125+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:07:00.382950+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:07:00.383464+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:07:00.384378+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:07:00.397467+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:07:00.408816+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:07:00.420143+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:07:00.433672+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:07:00.445355+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:07:00.469888+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:07:00.483449+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:07:00.483764+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:07:00.484040+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:07:00.487946+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"11265e25-ef6e-4fd4-958c-b4 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:07:00+00:00","6":"2021-01-08T12:07:00+00:00"} []
[2021-01-08T12:07:00.488959+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"291bc093-b42b-4f6e-959c-81 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:07:00+00:00","6":"2021-01-08T12:07:00+00:00"} []
[2021-01-08T12:07:00.489367+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:07:00.490685+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:07:00.490693+00:00] app.INFO: Done. [] []
[2021-01-08T12:07:00.490701+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:07:00.492695+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:07:00.506113+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:00.521482+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:07:00.525508+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:07:00.525542+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.525568+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.527568+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.528879+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:00.529898+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.530051+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.530058+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:00.540167+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:00.541835+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:08.036159+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:07:08.038105+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:08.039820+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:08.040827+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:08.041508+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:07:08.043026+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:08.043691+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:08.044664+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:08.045424+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:07:08.046816+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:08.047593+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:08.048481+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:08.049149+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:07:08.050545+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:08.051237+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:08.052104+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:08.052865+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:07:08.054269+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:08.054963+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:08.055730+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:08.056394+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:07:08.058095+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:07:08.063676+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:07:08.068220+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:07:08.073401+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:07:08.078417+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:07:08.082675+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:07:08.087448+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:07:08.092793+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:07:08.099802+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:08.109664+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:08.122124+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:08.135041+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:08.149545+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:08.159399+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:07:08.181925+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:08.204088+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:08.235582+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:07:08.238545+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:07:08.238986+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:07:08.239623+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:07:08.254184+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:07:08.265979+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:07:08.277872+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:07:08.292360+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:07:08.304232+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:07:08.327312+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:07:08.340851+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:07:08.341198+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:07:08.341452+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:07:08.345395+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"854dc212-9efd-4f29-888c-b1 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:07:08+00:00","6":"2021-01-08T12:07:08+00:00"} []
[2021-01-08T12:07:08.346457+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"79939008-8a2b-4f5f-aa44-17 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:07:08+00:00","6":"2021-01-08T12:07:08+00:00"} []
[2021-01-08T12:07:08.346656+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:07:08.348165+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:07:08.348172+00:00] app.INFO: Done. [] []
[2021-01-08T12:07:08.348180+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:07:08.350157+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:07:08.362603+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:08.378180+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:07:08.382579+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:07:08.382594+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.382629+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.385484+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.386908+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:08.387847+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.388006+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.388013+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:08.398070+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:08.399803+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:32.163838+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:07:32.166123+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:32.167677+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:32.168511+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:32.169134+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:07:32.170587+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:32.171235+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:32.172122+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:32.172872+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:07:32.174365+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:32.175136+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:32.175939+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:32.176557+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:07:32.177852+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:32.178560+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:32.179368+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:32.180083+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:07:32.181511+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:32.182294+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:32.183267+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:32.184011+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:07:32.185638+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:07:32.193818+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:07:32.198825+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:07:32.204207+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:07:32.209130+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:07:32.214707+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:07:32.219402+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:07:32.224556+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:07:32.231937+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:32.243711+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:32.255417+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:32.264841+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:32.275212+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:32.284096+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:07:32.307208+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:32.329242+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:32.357406+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:07:32.360285+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:07:32.360722+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:07:32.361444+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:07:32.376108+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:07:32.387722+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:07:32.399015+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:07:32.412774+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:07:32.424473+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:07:32.447140+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:07:32.460476+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:07:32.460779+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:07:32.461051+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:07:32.465023+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"1b904f99-564b-4f93-a180-c4 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:07:32+00:00","6":"2021-01-08T12:07:32+00:00"} []
[2021-01-08T12:07:32.465993+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"98c3851e-c994-4f23-99ef-db [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:07:32+00:00","6":"2021-01-08T12:07:32+00:00"} []
[2021-01-08T12:07:32.466181+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:07:32.467958+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:07:32.467967+00:00] app.INFO: Done. [] []
[2021-01-08T12:07:32.467977+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:07:32.470037+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:07:32.482732+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:32.497632+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:07:32.501759+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:07:32.501774+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.501802+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.503882+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.505242+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:32.506099+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.506275+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.506283+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:32.516591+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:32.518242+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:44.154018+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:07:44.155277+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:44.156830+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:44.157663+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:44.158613+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:07:44.160176+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:44.160833+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:44.161702+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:44.162843+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:07:44.164281+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:44.164986+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:44.165743+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:44.166285+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:07:44.167346+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:44.168075+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:44.168953+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:44.169611+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:07:44.170902+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:44.171700+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:44.172532+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:44.173128+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:07:44.174520+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:07:44.180133+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:07:44.184316+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:07:44.190324+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:07:44.197176+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:07:44.201881+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:07:44.207304+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:07:44.211510+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:07:44.219430+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:44.230543+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:44.242129+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:44.251620+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:44.262986+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:44.272869+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:07:44.295331+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:44.317455+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:44.354488+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:07:44.357395+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:07:44.357836+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:07:44.358495+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:07:44.372543+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:07:44.383453+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:07:44.394424+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:07:44.409350+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:07:44.420878+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:07:44.444132+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:07:44.456717+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:07:44.456991+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:07:44.457234+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:07:44.461203+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0c489056-63ce-4f15-99e3-56 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:07:44+00:00","6":"2021-01-08T12:07:44+00:00"} []
[2021-01-08T12:07:44.462207+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"4ad6d656-f1fd-4fd9-826a-43 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:07:44+00:00","6":"2021-01-08T12:07:44+00:00"} []
[2021-01-08T12:07:44.462565+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:07:44.464902+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:07:44.464910+00:00] app.INFO: Done. [] []
[2021-01-08T12:07:44.464918+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:07:44.466948+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:07:44.479785+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:44.495118+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:07:44.499055+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:07:44.499069+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.499095+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.501261+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.502525+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:44.503432+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.503587+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.503594+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:44.513440+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:44.515142+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:48.810472+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:07:48.813270+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:48.815397+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:48.816455+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:48.817116+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:07:48.818817+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:48.819780+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:48.821067+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:48.821941+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:07:48.824416+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:48.825553+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:48.826693+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:48.827588+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:07:48.829401+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:48.830446+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:48.831847+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:48.832721+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:07:48.834285+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:07:48.835250+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:07:48.836388+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:07:48.837126+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:07:48.838773+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:07:48.846104+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:07:48.858389+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:07:48.864306+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:07:48.870006+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:07:48.874553+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:07:48.879068+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:07:48.883345+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:07:48.890979+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:48.900656+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:48.912674+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:48.922962+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:48.934253+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:07:48.946540+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:07:48.966819+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:48.988655+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:07:49.018032+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:07:49.020997+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:07:49.021403+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:07:49.022173+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:07:49.037067+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:07:49.048542+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:07:49.059178+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:07:49.074942+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:07:49.086241+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:07:49.109998+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:07:49.123172+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:07:49.123506+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:07:49.123790+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:07:49.127866+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"5b39ffbd-efba-4f7b-926c-94 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:07:49+00:00","6":"2021-01-08T12:07:49+00:00"} []
[2021-01-08T12:07:49.129095+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c006e089-b5be-4fc2-9cde-c8 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:07:49+00:00","6":"2021-01-08T12:07:49+00:00"} []
[2021-01-08T12:07:49.129462+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:07:49.130962+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:07:49.130970+00:00] app.INFO: Done. [] []
[2021-01-08T12:07:49.130978+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:07:49.132967+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:07:49.145904+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:49.160601+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:07:49.164628+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:07:49.164641+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.164667+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.166551+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.167879+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:07:49.168712+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.168947+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.168954+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:07:49.178760+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:07:49.181715+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:09:49.299552+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:09:49.301870+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:09:49.303771+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:09:49.304667+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:09:49.305393+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:09:49.307098+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:09:49.307938+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:09:49.308831+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:09:49.309580+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:09:49.310886+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:09:49.311605+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:09:49.312381+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:09:49.312973+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:09:49.314345+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:09:49.315046+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:09:49.315967+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:09:49.316705+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:09:49.318242+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:09:49.318987+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:09:49.319705+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:09:49.320251+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:09:49.322101+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:09:49.327324+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:09:49.332261+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:09:49.337453+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:09:49.342346+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:09:49.346974+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:09:49.351116+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:09:49.357495+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:09:49.364394+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:09:49.374549+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:09:49.386127+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:09:49.396127+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:09:49.407496+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:09:49.417463+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:09:49.440448+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:09:49.468077+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:09:49.497617+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:09:49.500560+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:09:49.500958+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:09:49.501602+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:09:49.514545+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:09:49.525342+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:09:49.536547+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:09:49.550247+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:09:49.561719+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:09:49.584724+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:09:49.597409+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:09:49.597692+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:09:49.597939+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:09:49.601662+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"d5233ae9-3cbb-4f9a-99ed-eb [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:09:49+00:00","6":"2021-01-08T12:09:49+00:00"} []
[2021-01-08T12:09:49.602643+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a1a6d9f0-ee8a-4f8a-8f5e-21 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:09:49+00:00","6":"2021-01-08T12:09:49+00:00"} []
[2021-01-08T12:09:49.602900+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:09:49.604392+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:09:49.604401+00:00] app.INFO: Done. [] []
[2021-01-08T12:09:49.604409+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:09:49.606369+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:09:49.619148+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:09:49.633723+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:09:49.637577+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:09:49.637590+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.637614+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.639601+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.640974+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:09:49.641843+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.642015+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.642023+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:09:49.652347+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:09:49.654007+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:11:57.631850+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:11:57.633781+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:11:57.635901+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:11:57.636668+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:11:57.637286+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:11:57.639248+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:11:57.640190+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:11:57.640990+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:11:57.641609+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:11:57.642936+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:11:57.644129+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:11:57.645122+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:11:57.645829+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:11:57.647313+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:11:57.648062+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:11:57.648904+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:11:57.649554+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:11:57.651126+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:11:57.651895+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:11:57.652708+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:11:57.653238+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:11:57.654985+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:11:57.660986+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:11:57.666071+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:11:57.670539+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:11:57.675224+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:11:57.680598+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:11:57.685093+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:11:57.689178+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:11:57.695667+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:11:57.705952+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:11:57.718439+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:11:57.728993+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:11:57.741810+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:11:57.752472+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:11:57.784711+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:11:57.815897+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:11:57.846651+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:11:57.849514+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:11:57.849950+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:11:57.850589+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:11:57.864521+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:11:57.877187+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:11:57.889878+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:11:57.902574+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:11:57.915316+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:11:57.937662+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:11:57.951133+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:11:57.951457+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:11:57.951731+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:11:57.955509+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b329effb-f3ed-4f2e-a8da-52 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:11:57+00:00","6":"2021-01-08T12:11:57+00:00"} []
[2021-01-08T12:11:57.956491+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7e33568b-4ca5-4ff1-91f2-0f [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:11:57+00:00","6":"2021-01-08T12:11:57+00:00"} []
[2021-01-08T12:11:57.956780+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:11:57.958541+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:11:57.958549+00:00] app.INFO: Done. [] []
[2021-01-08T12:11:57.958557+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:11:57.960547+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:11:57.973366+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:11:57.988163+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:11:57.991965+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:11:57.991979+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:57.992006+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:57.993899+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:57.995166+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:11:57.996199+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:57.996350+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:57.996361+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:11:58.006098+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:11:58.007940+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:12:27.161161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:12:27.163250+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:12:27.164793+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:12:27.165554+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:12:27.166095+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:12:27.167513+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:12:27.168115+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:12:27.168945+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:12:27.169727+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:12:27.171111+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:12:27.171864+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:12:27.172737+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:12:27.173404+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:12:27.174873+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:12:27.175570+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:12:27.176430+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:12:27.177118+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:12:27.178511+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:12:27.179231+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:12:27.179988+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:12:27.180524+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:12:27.182269+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:12:27.188484+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:12:27.194492+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:12:27.210237+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:12:27.215861+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:12:27.220766+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:12:27.226026+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:12:27.230545+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:12:27.237548+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:12:27.246931+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:12:27.258208+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:12:27.269141+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:12:27.280789+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:12:27.291023+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:12:27.314272+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:12:27.335621+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:12:27.365770+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:12:27.368588+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:12:27.369048+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:12:27.370184+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:12:27.384589+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:12:27.396863+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:12:27.408934+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:12:27.424416+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:12:27.436766+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:12:27.460543+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:12:27.474131+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:12:27.474460+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:12:27.474790+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:12:27.478791+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"1c54df1d-737f-4fbc-96c9-25 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:12:27+00:00","6":"2021-01-08T12:12:27+00:00"} []
[2021-01-08T12:12:27.479835+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8445d239-c388-4f95-9c37-1e [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:12:27+00:00","6":"2021-01-08T12:12:27+00:00"} []
[2021-01-08T12:12:27.480079+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:12:27.481450+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:12:27.481457+00:00] app.INFO: Done. [] []
[2021-01-08T12:12:27.481468+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:12:27.483538+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:12:27.496489+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:12:27.511536+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:12:27.515314+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:12:27.515327+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.515359+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.517431+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.518743+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:12:27.519657+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.519807+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.519818+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:12:27.529507+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:12:27.531154+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:14:41.651761+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:14:41.653626+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:14:41.655437+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:14:41.656259+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:14:41.656819+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:14:41.658415+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:14:41.659135+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:14:41.660027+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:14:41.660651+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:14:41.662077+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:14:41.662797+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:14:41.663550+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:14:41.664108+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:14:41.665508+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:14:41.666232+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:14:41.667304+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:14:41.668586+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:14:41.671609+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:14:41.672596+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:14:41.673442+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:14:41.674026+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:14:41.675485+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:14:41.681795+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:14:41.686735+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:14:41.691779+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:14:41.697249+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:14:41.701792+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:14:41.707175+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:14:41.712082+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:14:41.719020+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:14:41.729726+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:14:41.741049+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:14:41.752491+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:14:41.765243+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:14:41.776701+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:14:41.808187+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:14:41.841121+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:14:41.877056+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:14:41.879977+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:14:41.880437+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:14:41.881094+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:14:41.896246+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:14:41.907672+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:14:41.919610+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:14:41.934628+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:14:41.946406+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:14:41.970019+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:14:41.983107+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:14:41.983424+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:14:41.983724+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:14:41.987702+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"6306f23e-f1ce-4f84-878e-02 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:14:41+00:00","6":"2021-01-08T12:14:41+00:00"} []
[2021-01-08T12:14:41.988772+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"fd700152-aaab-4ffb-9c05-13 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:14:41+00:00","6":"2021-01-08T12:14:41+00:00"} []
[2021-01-08T12:14:41.989149+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:14:41.990816+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:14:41.990824+00:00] app.INFO: Done. [] []
[2021-01-08T12:14:41.990833+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:14:41.992884+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:14:42.006077+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:14:42.021183+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:14:42.025138+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:14:42.025151+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.025178+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.027098+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.028435+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:14:42.029233+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.029420+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.029431+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:14:42.039852+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:14:42.042075+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:15:20.745478+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:15:20.747648+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:15:20.749359+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:15:20.750176+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:15:20.750831+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:15:20.752362+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:15:20.753132+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:15:20.754059+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:15:20.754740+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:15:20.756139+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:15:20.757015+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:15:20.757837+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:15:20.758401+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:15:20.759533+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:15:20.760373+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:15:20.761250+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:15:20.761860+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:15:20.763146+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:15:20.763903+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:15:20.764675+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:15:20.765222+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:15:20.766628+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:15:20.772007+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:15:20.777169+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:15:20.781979+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:15:20.786683+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:15:20.791396+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:15:20.798144+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:15:20.809863+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:15:20.818245+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:15:20.829096+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:15:20.840621+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:15:20.850307+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:15:20.861757+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:15:20.870775+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:15:20.899946+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:15:20.924139+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:15:20.955524+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:15:20.959078+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:15:20.960028+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:15:20.960838+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:15:20.974159+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:15:20.985220+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:15:20.996495+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:15:21.009573+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:15:21.021980+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:15:21.045976+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:15:21.060035+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:15:21.060321+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:15:21.060573+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:15:21.064335+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"674c590c-b28c-4fc3-bf42-ea [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:15:21+00:00","6":"2021-01-08T12:15:21+00:00"} []
[2021-01-08T12:15:21.065357+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3ead1063-3df5-4f87-8e78-80 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:15:21+00:00","6":"2021-01-08T12:15:21+00:00"} []
[2021-01-08T12:15:21.065708+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:15:21.067068+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:15:21.067076+00:00] app.INFO: Done. [] []
[2021-01-08T12:15:21.067084+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:15:21.069090+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:15:21.082059+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:15:21.096529+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:15:21.100403+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:15:21.100416+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.100442+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.102469+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.103925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:15:21.104912+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.105062+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.105074+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:15:21.115387+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:15:21.117283+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:16:54.859119+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:16:54.861537+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:16:54.863466+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:16:54.864369+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:16:54.865013+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:16:54.866516+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:16:54.867201+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:16:54.868119+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:16:54.868850+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:16:54.870246+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:16:54.870943+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:16:54.871746+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:16:54.872328+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:16:54.873682+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:16:54.874413+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:16:54.875230+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:16:54.875890+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:16:54.877324+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:16:54.878052+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:16:54.878803+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:16:54.879355+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:16:54.880756+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:16:54.886304+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:16:54.891265+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:16:54.895638+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:16:54.900675+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:16:54.905755+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:16:54.910180+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:16:54.914906+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:16:54.921269+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:16:54.930930+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:16:54.944083+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:16:54.953823+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:16:54.965667+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:16:54.976529+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:16:54.997816+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:16:55.019891+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:16:55.050875+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:16:55.053841+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:16:55.054274+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:16:55.054957+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:16:55.068948+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:16:55.081024+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:16:55.092952+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:16:55.107269+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:16:55.120124+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:16:55.144239+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:16:55.156818+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:16:55.157127+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:16:55.157393+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:16:55.161155+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"66ea17b8-3d2c-4f79-a3e8-eb [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:16:55+00:00","6":"2021-01-08T12:16:55+00:00"} []
[2021-01-08T12:16:55.162136+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b177ba4d-e276-4fcd-aedb-fe [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:16:55+00:00","6":"2021-01-08T12:16:55+00:00"} []
[2021-01-08T12:16:55.162400+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:16:55.164412+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:16:55.164421+00:00] app.INFO: Done. [] []
[2021-01-08T12:16:55.164429+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:16:55.166449+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:16:55.178996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:16:55.193867+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:16:55.197904+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:16:55.197918+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.197945+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.199953+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.201241+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:16:55.202334+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.202486+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.202498+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:16:55.212434+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:16:55.214100+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:17:18.287747+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:17:18.289824+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:17:18.291359+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:17:18.292414+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:17:18.293102+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:17:18.294670+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:17:18.295299+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:17:18.296181+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:17:18.296838+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:17:18.298201+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:17:18.298863+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:17:18.299583+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:17:18.300132+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:17:18.301659+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:17:18.302377+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:17:18.303160+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:17:18.303752+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:17:18.305273+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:17:18.305992+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:17:18.306754+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:17:18.307456+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:17:18.309093+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:17:18.314594+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:17:18.319454+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:17:18.325419+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:17:18.330182+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:17:18.335405+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:17:18.339565+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:17:18.344544+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:17:18.351936+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:17:18.362359+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:17:18.374491+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:17:18.385155+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:17:18.396251+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:17:18.412886+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:17:18.435265+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:17:18.457185+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:17:18.490377+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:17:18.493358+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:17:18.493796+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:17:18.494543+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:17:18.508273+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:17:18.520151+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:17:18.532252+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:17:18.546197+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:17:18.558472+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:17:18.581407+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:17:18.593714+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:17:18.593985+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:17:18.594340+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:17:18.597973+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"baf332bf-70f5-4f2e-8bd0-e1 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:17:18+00:00","6":"2021-01-08T12:17:18+00:00"} []
[2021-01-08T12:17:18.598863+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"ae0e92d4-8a17-4f53-aa3c-bd [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:17:18+00:00","6":"2021-01-08T12:17:18+00:00"} []
[2021-01-08T12:17:18.599117+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:17:18.600507+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:17:18.600515+00:00] app.INFO: Done. [] []
[2021-01-08T12:17:18.600523+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:17:18.602462+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:17:18.615229+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:17:18.629724+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:17:18.633739+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:17:18.633752+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.633777+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.635849+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.637081+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:17:18.637933+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.638098+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.638109+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:17:18.648861+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:17:18.650666+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:22:59.142593+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:22:59.145176+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:22:59.146999+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:22:59.147915+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:22:59.148594+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:22:59.150147+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:22:59.150772+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:22:59.151674+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:22:59.152476+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:22:59.154000+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:22:59.155105+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:22:59.155891+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:22:59.156483+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:22:59.157759+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:22:59.158448+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:22:59.159279+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:22:59.159928+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:22:59.161213+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:22:59.161964+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:22:59.162690+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:22:59.163228+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:22:59.164583+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:22:59.170291+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:22:59.175457+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:22:59.181283+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:22:59.185860+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:22:59.190593+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:22:59.194865+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:22:59.199473+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:22:59.206289+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:22:59.216916+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:22:59.231010+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:22:59.241096+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:22:59.251687+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:22:59.266639+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:22:59.288446+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:22:59.311275+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:22:59.342895+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:22:59.345753+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:22:59.346182+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:22:59.346783+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:22:59.361344+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:22:59.373140+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:22:59.384893+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:22:59.399180+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:22:59.411029+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:22:59.434008+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:22:59.446584+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:22:59.446858+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:22:59.447101+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:22:59.450764+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"20e994b4-9520-4f37-855b-67 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:22:59+00:00","6":"2021-01-08T12:22:59+00:00"} []
[2021-01-08T12:22:59.451714+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c540a32b-56f2-4f0b-81cf-2b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:22:59+00:00","6":"2021-01-08T12:22:59+00:00"} []
[2021-01-08T12:22:59.451974+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:22:59.453642+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:22:59.453649+00:00] app.INFO: Done. [] []
[2021-01-08T12:22:59.453659+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:22:59.455693+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:22:59.468640+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:22:59.483733+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:22:59.487552+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:22:59.487566+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.487596+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.489492+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.490787+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:22:59.491751+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.491899+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.491910+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:22:59.501624+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:22:59.503272+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:23:29.496885+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:23:29.499246+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:29.501091+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:29.501967+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:29.502839+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:23:29.504415+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:29.505177+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:29.506153+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:29.506823+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:23:29.508437+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:29.509269+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:29.510095+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:29.510637+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:23:29.511651+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:29.512464+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:29.513310+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:29.513918+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:23:29.515191+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:29.515942+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:29.516721+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:29.517264+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:23:29.518789+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:23:29.524679+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:23:29.530454+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:23:29.535322+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:23:29.540268+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:23:29.544771+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:23:29.549445+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:23:29.554065+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:23:29.561226+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:29.573258+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:29.584756+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:29.594699+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:29.607503+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:29.617136+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:23:29.638928+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:23:29.661709+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:23:29.693561+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:23:29.696613+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:23:29.697091+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:23:29.697804+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:23:29.710514+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:23:29.721552+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:23:29.733351+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:23:29.753469+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:23:29.766355+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:23:29.790311+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:23:29.804204+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:23:29.804508+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:23:29.804790+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:23:29.808870+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"6155c61d-6566-4f72-84af-ec [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:23:29+00:00","6":"2021-01-08T12:23:29+00:00"} []
[2021-01-08T12:23:29.809942+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"723ca671-0464-4f7a-ab50-b2 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:23:29+00:00","6":"2021-01-08T12:23:29+00:00"} []
[2021-01-08T12:23:29.810211+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:23:29.811651+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:23:29.811660+00:00] app.INFO: Done. [] []
[2021-01-08T12:23:29.811668+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:23:29.813744+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:23:29.826736+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:23:29.841628+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:23:29.846058+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:23:29.846073+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.846101+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.848164+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.849424+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:23:29.850367+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.850519+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.850530+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:29.861816+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:23:29.863751+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:23:42.074131+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:23:42.077549+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:42.080155+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:42.081036+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:42.081583+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:23:42.082958+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:42.083625+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:42.084465+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:42.085148+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:23:42.086628+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:42.087366+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:42.088144+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:42.088760+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:23:42.090142+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:42.090907+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:42.091802+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:42.092474+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:23:42.093915+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:23:42.094785+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:23:42.095620+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:23:42.096362+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:23:42.097804+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:23:42.103156+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:23:42.108341+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:23:42.114254+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:23:42.119212+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:23:42.123222+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:23:42.128160+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:23:42.132724+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:23:42.139642+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:42.150422+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:42.162517+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:42.173354+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:42.186280+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:23:42.197113+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:23:42.221208+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:23:42.245260+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:23:42.274872+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:23:42.277710+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:23:42.278140+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:23:42.278829+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:23:42.292950+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:23:42.304967+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:23:42.317423+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:23:42.330215+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:23:42.342198+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:23:42.366203+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:23:42.381930+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:23:42.382259+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:23:42.382537+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:23:42.386606+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"99ad342a-103c-4f96-b668-94 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:23:42+00:00","6":"2021-01-08T12:23:42+00:00"} []
[2021-01-08T12:23:42.387750+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b0e4d261-762f-4f70-8e9e-08 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:23:42+00:00","6":"2021-01-08T12:23:42+00:00"} []
[2021-01-08T12:23:42.387993+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:23:42.389564+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:23:42.389572+00:00] app.INFO: Done. [] []
[2021-01-08T12:23:42.389580+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:23:42.391640+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:23:42.405567+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:23:42.421863+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:23:42.426327+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:23:42.426344+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.426375+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.428507+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.430136+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:23:42.431063+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.431218+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.431229+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:23:42.442770+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:23:42.444947+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:24:39.162389+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:24:39.165380+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:24:39.167323+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:24:39.168293+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:24:39.169066+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:24:39.170665+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:24:39.171293+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:24:39.172241+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:24:39.172903+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:24:39.174503+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:24:39.175272+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:24:39.176040+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:24:39.176597+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:24:39.178099+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:24:39.178803+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:24:39.179646+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:24:39.180266+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:24:39.181739+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:24:39.182454+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:24:39.183192+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:24:39.183764+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:24:39.185232+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:24:39.190683+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:24:39.195357+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:24:39.200805+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:24:39.205929+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:24:39.210731+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:24:39.215286+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:24:39.220147+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:24:39.226833+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:24:39.236296+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:24:39.247620+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:24:39.258846+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:24:39.271765+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:24:39.281655+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:24:39.303610+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:24:39.326131+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:24:39.357998+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:24:39.360816+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:24:39.361275+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:24:39.361865+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:24:39.374729+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:24:39.385921+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:24:39.397498+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:24:39.411247+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:24:39.423709+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:24:39.446225+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:24:39.460156+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:24:39.460461+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:24:39.460736+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:24:39.464677+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f59301df-06cf-4fb2-9bfb-3a [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:24:39+00:00","6":"2021-01-08T12:24:39+00:00"} []
[2021-01-08T12:24:39.465646+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0779cf7b-ab01-4f4c-9674-41 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:24:39+00:00","6":"2021-01-08T12:24:39+00:00"} []
[2021-01-08T12:24:39.465849+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:24:39.467249+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:24:39.467256+00:00] app.INFO: Done. [] []
[2021-01-08T12:24:39.467265+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:24:39.469283+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:24:39.482005+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:24:39.496335+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:24:39.500233+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:24:39.500246+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.500272+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.502249+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.503522+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:24:39.504347+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.504516+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.504523+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:24:39.514710+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:24:39.516478+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:25:17.262456+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:25:17.264889+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:17.266374+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:17.267307+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:17.268064+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:25:17.269595+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:17.272441+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:17.273888+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:17.274676+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:25:17.276103+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:17.276867+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:17.277651+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:17.278250+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:25:17.279648+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:17.280391+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:17.281276+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:17.281931+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:25:17.283312+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:17.284138+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:17.284938+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:17.285548+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:25:17.287069+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:25:17.292391+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:25:17.297634+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:25:17.303017+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:25:17.309896+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:25:17.314322+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:25:17.319492+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:25:17.324431+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:25:17.331661+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:17.342081+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:17.353366+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:17.364182+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:17.375873+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:17.385647+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:25:17.407527+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:25:17.429236+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:25:17.458957+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:25:17.462143+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:25:17.462583+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:25:17.463211+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:25:17.475518+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:25:17.486249+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:25:17.497067+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:25:17.509642+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:25:17.521619+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:25:17.544423+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:25:17.557005+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:25:17.557282+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:25:17.557526+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:25:17.561320+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8e049cf5-163c-4f84-b548-0c [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:25:17+00:00","6":"2021-01-08T12:25:17+00:00"} []
[2021-01-08T12:25:17.562387+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c86da7e6-2a3a-4f5c-8ddd-12 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:25:17+00:00","6":"2021-01-08T12:25:17+00:00"} []
[2021-01-08T12:25:17.562580+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:25:17.563746+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:25:17.563752+00:00] app.INFO: Done. [] []
[2021-01-08T12:25:17.563761+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:25:17.565686+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:25:17.578581+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:25:17.593870+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:25:17.597881+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:25:17.597896+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.597921+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.599997+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.601524+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:25:17.602406+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.602577+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.602585+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:17.613510+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:25:17.615382+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:25:55.736544+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:25:55.738729+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:55.740281+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:55.741161+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:55.741834+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:25:55.743256+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:55.743946+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:55.744846+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:55.745568+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:25:55.747007+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:55.747982+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:55.748747+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:55.749226+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:25:55.750610+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:55.751323+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:55.752150+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:55.752754+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:25:55.754058+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:25:55.754764+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:25:55.755467+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:25:55.755997+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:25:55.757367+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:25:55.762792+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:25:55.767248+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:25:55.772776+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:25:55.777809+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:25:55.782199+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:25:55.788094+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:25:55.796714+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:25:55.803519+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:55.814033+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:55.825286+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:55.834815+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:55.845571+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:25:55.855583+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:25:55.879789+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:25:55.910587+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:25:55.949998+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:25:55.953317+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:25:55.953862+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:25:55.954577+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:25:55.968236+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:25:55.979105+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:25:55.990560+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:25:56.004672+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:25:56.015080+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:25:56.037502+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:25:56.050429+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:25:56.050720+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:25:56.050979+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:25:56.054663+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"4c73bc55-6658-4fe0-870f-52 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:25:56+00:00","6":"2021-01-08T12:25:56+00:00"} []
[2021-01-08T12:25:56.055764+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"470eb580-2b0e-4fea-9577-3f [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:25:56+00:00","6":"2021-01-08T12:25:56+00:00"} []
[2021-01-08T12:25:56.056032+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:25:56.057841+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:25:56.057849+00:00] app.INFO: Done. [] []
[2021-01-08T12:25:56.057857+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:25:56.059892+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:25:56.072647+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:25:56.088368+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:25:56.093849+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:25:56.093865+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.093894+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.096400+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.097877+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:25:56.098787+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.098957+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.098965+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:25:56.109451+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:25:56.111272+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:01.460521+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:26:01.462474+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:01.464469+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:01.465360+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:01.466053+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:26:01.467613+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:01.468597+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:01.469545+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:01.470192+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:26:01.471276+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:01.471981+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:01.472801+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:01.473364+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:26:01.474761+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:01.475438+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:01.476232+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:01.476829+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:26:01.478201+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:01.478906+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:01.479599+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:01.480222+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:26:01.481818+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:26:01.487321+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:26:01.491808+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:26:01.497745+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:26:01.502102+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:26:01.506003+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:26:01.510537+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:26:01.515074+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:26:01.521752+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:01.532428+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:01.546351+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:01.556693+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:01.567275+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:01.578424+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:26:01.600351+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:01.620936+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:01.651789+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:26:01.655281+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:26:01.655753+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:26:01.656408+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:26:01.675061+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:26:01.686120+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:26:01.698504+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:26:01.712096+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:26:01.723969+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:26:01.747722+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:26:01.760988+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:26:01.761271+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:26:01.761522+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:26:01.765272+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c4ac7d5a-2c09-4ff0-bcc8-3f [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:26:01+00:00","6":"2021-01-08T12:26:01+00:00"} []
[2021-01-08T12:26:01.766304+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"976c750b-86e2-4fd2-afff-78 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:26:01+00:00","6":"2021-01-08T12:26:01+00:00"} []
[2021-01-08T12:26:01.766521+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:26:01.768654+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:26:01.768663+00:00] app.INFO: Done. [] []
[2021-01-08T12:26:01.768672+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:26:01.770680+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:26:01.783742+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:01.798929+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:26:01.803091+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:26:01.803105+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.803131+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.805101+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.806515+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:01.807475+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.807630+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.807637+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:01.817688+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:01.819363+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:05.591039+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:26:05.593489+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:05.595510+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:05.596386+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:05.597089+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:26:05.598898+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:05.599589+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:05.600546+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:05.601292+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:26:05.602627+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:05.603470+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:05.604576+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:05.605247+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:26:05.606629+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:05.607381+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:05.608258+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:05.608936+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:26:05.610258+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:05.610970+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:05.611750+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:05.612450+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:26:05.614056+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:26:05.619385+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:26:05.624347+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:26:05.629870+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:26:05.636195+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:26:05.640332+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:26:05.644980+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:26:05.649859+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:26:05.656740+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:05.666858+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:05.679237+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:05.688948+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:05.699315+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:05.708695+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:26:05.729267+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:05.750980+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:05.783761+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:26:05.786690+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:26:05.787133+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:26:05.787879+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:26:05.801547+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:26:05.812724+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:26:05.824692+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:26:05.838596+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:26:05.851367+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:26:05.874666+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:26:05.888645+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:26:05.888971+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:26:05.889261+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:26:05.893432+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7b500a47-7f02-4fd7-844e-75 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:26:05+00:00","6":"2021-01-08T12:26:05+00:00"} []
[2021-01-08T12:26:05.894488+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b18880bd-99d0-4f6a-acfa-ac [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:26:05+00:00","6":"2021-01-08T12:26:05+00:00"} []
[2021-01-08T12:26:05.894786+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:26:05.896723+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:26:05.896731+00:00] app.INFO: Done. [] []
[2021-01-08T12:26:05.896740+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:26:05.899966+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:26:05.913268+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:05.928414+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:26:05.932211+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:26:05.932225+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.932250+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.934298+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.935645+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:05.936522+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.936675+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.936682+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:05.946448+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:05.948230+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:11.685758+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:26:11.688117+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:11.689879+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:11.690784+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:11.691393+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:26:11.693193+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:11.693866+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:11.694707+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:11.695428+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:26:11.696923+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:11.697699+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:11.698459+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:11.699034+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:26:11.700534+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:11.701362+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:11.702227+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:11.702847+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:26:11.704375+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:26:11.705178+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:26:11.705952+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:26:11.706539+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:26:11.707650+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:26:11.714551+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:26:11.719499+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:26:11.724160+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:26:11.729620+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:26:11.733933+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:26:11.738295+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:26:11.742509+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:26:11.749297+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:11.760180+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:11.772159+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:11.783171+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:11.794271+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:26:11.808927+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:26:11.832228+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:11.853687+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:26:11.881754+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:26:11.884840+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:26:11.885453+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:26:11.886075+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:26:11.908763+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:26:11.924375+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:26:11.936370+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:26:11.950222+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:26:11.962580+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:26:11.986243+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:26:11.999232+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:26:11.999583+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:26:11.999929+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:26:12.003836+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"fb52b329-6107-4fff-a50d-15 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:26:11+00:00","6":"2021-01-08T12:26:11+00:00"} []
[2021-01-08T12:26:12.005022+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"725d8e9d-f033-4f96-8bd1-95 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:26:11+00:00","6":"2021-01-08T12:26:11+00:00"} []
[2021-01-08T12:26:12.005419+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:26:12.007381+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:26:12.007389+00:00] app.INFO: Done. [] []
[2021-01-08T12:26:12.007398+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:26:12.009366+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:26:12.022553+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:12.037554+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:26:12.041421+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:26:12.041434+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.041480+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.043496+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.044741+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:26:12.045755+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.045911+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.045918+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:26:12.056144+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:26:12.057862+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:27:18.470943+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:27:18.473329+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:18.475223+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:18.476221+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:18.476870+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:27:18.478265+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:18.478881+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:18.479852+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:18.480678+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:27:18.481950+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:18.482630+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:18.483419+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:18.483985+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:27:18.485470+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:18.486183+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:18.487037+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:18.487669+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:27:18.489187+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:18.489949+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:18.491056+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:18.491819+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:27:18.493569+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:27:18.498752+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:27:18.503090+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:27:18.508026+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:27:18.512803+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:27:18.517536+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:27:18.521843+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:27:18.526177+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:27:18.532736+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:18.542225+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:18.560646+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:18.570547+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:18.582874+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:18.592351+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:27:18.614308+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:27:18.633500+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:27:18.663138+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:27:18.666063+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:27:18.666590+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:27:18.667257+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:27:18.679200+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:27:18.688801+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:27:18.699135+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:27:18.710769+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:27:18.721093+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:27:18.744503+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:27:18.759116+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:27:18.759428+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:27:18.759707+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:27:18.763495+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"4c288b6b-678e-4fa5-9092-2b [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:27:18+00:00","6":"2021-01-08T12:27:18+00:00"} []
[2021-01-08T12:27:18.764474+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"5bf97694-2904-4fd7-a955-e6 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:27:18+00:00","6":"2021-01-08T12:27:18+00:00"} []
[2021-01-08T12:27:18.764825+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:27:18.766466+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:27:18.766473+00:00] app.INFO: Done. [] []
[2021-01-08T12:27:18.766481+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:27:18.768468+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:27:18.781402+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:27:18.796149+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:27:18.800256+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:27:18.800270+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.800297+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.802347+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.803691+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:27:18.804606+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.804762+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.804769+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:18.815046+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:27:18.816871+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:27:51.399829+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:27:51.402385+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:51.403921+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:51.404844+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:51.405583+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:27:51.407038+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:51.407751+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:51.408823+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:51.409778+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:27:51.411232+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:51.412003+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:51.412908+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:51.415840+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:27:51.417328+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:51.418171+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:51.419081+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:51.419731+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:27:51.421235+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:27:51.422014+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:27:51.422797+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:27:51.423413+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:27:51.424820+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:27:51.429987+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:27:51.434607+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:27:51.439324+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:27:51.443670+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:27:51.447507+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:27:51.452119+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:27:51.456398+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:27:51.462889+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:51.472883+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:51.484715+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:51.497826+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:51.508812+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:27:51.517374+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:27:51.537513+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:27:51.557790+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:27:51.586378+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:27:51.589414+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:27:51.589873+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:27:51.590482+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:27:51.602773+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:27:51.613690+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:27:51.624999+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:27:51.638357+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:27:51.649376+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:27:51.675501+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:27:51.689043+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:27:51.689323+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:27:51.689573+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:27:51.693684+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"019384e8-ccc8-4f42-9201-91 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:27:51+00:00","6":"2021-01-08T12:27:51+00:00"} []
[2021-01-08T12:27:51.694614+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"fda21e46-33e4-4f47-836d-92 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:27:51+00:00","6":"2021-01-08T12:27:51+00:00"} []
[2021-01-08T12:27:51.694901+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:27:51.696524+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:27:51.696532+00:00] app.INFO: Done. [] []
[2021-01-08T12:27:51.696540+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:27:51.698558+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:27:51.711577+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:27:51.727288+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:27:51.731772+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:27:51.731786+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.731813+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.733942+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.735250+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:27:51.736205+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.736359+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.736366+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:27:51.747243+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:27:51.749201+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:28:16.449485+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:28:16.451182+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:28:16.452687+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:28:16.453542+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:28:16.454300+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:28:16.455838+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:28:16.456604+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:28:16.457679+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:28:16.458372+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:28:16.459440+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:28:16.460213+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:28:16.461112+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:28:16.461692+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:28:16.463162+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:28:16.463935+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:28:16.464885+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:28:16.465568+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:28:16.467049+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:28:16.467792+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:28:16.468664+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:28:16.469366+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:28:16.470922+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:28:16.476056+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:28:16.480933+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:28:16.485859+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:28:16.490632+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:28:16.495007+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:28:16.499302+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:28:16.503211+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:28:16.509236+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:28:16.518162+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:28:16.529371+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:28:16.537959+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:28:16.548250+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:28:16.557623+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:28:16.579425+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:28:16.600721+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:28:16.630561+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:28:16.633750+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:28:16.634281+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:28:16.635016+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:28:16.647491+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:28:16.658570+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:28:16.669088+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:28:16.681814+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:28:16.694009+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:28:16.725162+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:28:16.738088+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:28:16.738375+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:28:16.738626+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:28:16.742531+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"bc433c19-d6f3-4fd6-9f6a-8d [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:28:16+00:00","6":"2021-01-08T12:28:16+00:00"} []
[2021-01-08T12:28:16.743660+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"ac5d5930-2cbb-4f9f-9023-e9 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:28:16+00:00","6":"2021-01-08T12:28:16+00:00"} []
[2021-01-08T12:28:16.743929+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:28:16.745322+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:28:16.745330+00:00] app.INFO: Done. [] []
[2021-01-08T12:28:16.745338+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:28:16.747446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:28:16.760670+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:28:16.775684+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:28:16.779576+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:28:16.779589+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.779614+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.781543+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.783030+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:28:16.784005+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.784164+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.784171+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:28:16.795209+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:28:16.796960+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:15.056466+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:31:15.058501+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:15.060024+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:15.060902+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:15.061651+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:31:15.063453+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:15.064284+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:15.065386+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:15.066086+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:31:15.067478+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:15.068414+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:15.069142+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:15.069683+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:31:15.070960+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:15.071665+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:15.072521+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:15.073226+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:31:15.074522+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:15.075269+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:15.076170+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:15.076811+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:31:15.078166+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:31:15.083260+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:31:15.087752+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:31:15.093387+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:31:15.097336+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:31:15.102216+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:31:15.106413+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:31:15.110462+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:31:15.117433+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:15.126514+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:15.137356+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:15.146447+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:15.156756+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:15.166136+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:31:15.186895+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:15.206000+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:15.234014+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:31:15.236880+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:31:15.237338+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:31:15.238118+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:31:15.251549+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:31:15.261773+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:31:15.273051+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:31:15.285105+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:31:15.295357+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:31:15.318744+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:31:15.331393+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:31:15.331686+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:31:15.331932+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:31:15.335715+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"38538846-1fba-4f02-8d3c-4f [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:31:15+00:00","6":"2021-01-08T12:31:15+00:00"} []
[2021-01-08T12:31:15.336756+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a7c3891a-31af-4fd2-9c4f-00 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:31:15+00:00","6":"2021-01-08T12:31:15+00:00"} []
[2021-01-08T12:31:15.337126+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:31:15.338671+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:31:15.338679+00:00] app.INFO: Done. [] []
[2021-01-08T12:31:15.338687+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:31:15.340647+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:31:15.353444+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:15.367961+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:31:15.371735+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:31:15.371748+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.371773+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.373656+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.374880+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:15.375839+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.375997+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.376004+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:15.385638+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:15.387310+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:33.460510+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:31:33.462043+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:33.463564+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:33.464440+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:33.465105+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:31:33.466804+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:33.467468+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:33.468348+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:33.469228+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:31:33.470699+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:33.471456+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:33.472228+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:33.472780+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:31:33.474048+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:33.474732+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:33.475555+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:33.476207+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:31:33.477594+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:33.478296+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:33.479037+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:33.479682+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:31:33.480985+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:31:33.485786+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:31:33.490483+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:31:33.495204+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:31:33.499497+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:31:33.503449+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:31:33.507619+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:31:33.511696+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:31:33.518555+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:33.528633+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:33.538833+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:33.547390+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:33.557670+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:33.566217+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:31:33.587252+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:33.607867+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:33.636183+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:31:33.639199+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:31:33.639666+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:31:33.640340+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:31:33.653801+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:31:33.664586+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:31:33.675271+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:31:33.688848+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:31:33.706491+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:31:33.729943+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:31:33.743333+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:31:33.743685+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:31:33.743936+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:31:33.747672+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"361ea865-d5a0-4fb8-aff4-e2 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:31:33+00:00","6":"2021-01-08T12:31:33+00:00"} []
[2021-01-08T12:31:33.748638+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"bfb8553b-9623-4f09-a0cf-73 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:31:33+00:00","6":"2021-01-08T12:31:33+00:00"} []
[2021-01-08T12:31:33.748900+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:31:33.750744+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:31:33.750750+00:00] app.INFO: Done. [] []
[2021-01-08T12:31:33.750758+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:31:33.752685+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:31:33.765346+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:33.779951+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:31:33.784046+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:31:33.784061+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.784089+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.785992+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.787300+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:33.788293+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.788452+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.788459+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:33.798328+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:33.800038+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:39.394174+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:31:39.406362+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:39.408062+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:39.408974+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:39.409643+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:31:39.411387+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:39.412272+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:39.413343+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:39.414029+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:31:39.415404+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:39.416245+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:39.417109+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:39.417775+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:31:39.419304+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:39.420139+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:39.421408+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:39.422334+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:31:39.424088+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:31:39.425357+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:31:39.426582+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:31:39.427552+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:31:39.429786+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:31:39.439302+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:31:39.443867+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:31:39.449465+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:31:39.454290+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:31:39.458254+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:31:39.462102+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:31:39.466430+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:31:39.472914+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:39.482386+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:39.493133+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:39.501987+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:39.511683+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:31:39.520724+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:31:39.541156+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:39.560372+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:31:39.588300+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:31:39.591165+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:31:39.591652+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:31:39.592419+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:31:39.605271+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:31:39.614990+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:31:39.625714+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:31:39.638472+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:31:39.650059+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:31:39.672552+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:31:39.685156+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:31:39.685427+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:31:39.685672+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:31:39.689861+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"eac4ddd0-2486-4f98-9751-e0 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:31:39+00:00","6":"2021-01-08T12:31:39+00:00"} []
[2021-01-08T12:31:39.691183+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"18a4ebf7-2af4-4fb0-8353-39 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:31:39+00:00","6":"2021-01-08T12:31:39+00:00"} []
[2021-01-08T12:31:39.691398+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:31:39.692972+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:31:39.692980+00:00] app.INFO: Done. [] []
[2021-01-08T12:31:39.692989+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:31:39.695001+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:31:39.707983+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:39.722870+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:31:39.726832+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:31:39.726847+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.726874+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.729035+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.730366+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:31:39.731388+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.731600+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.731607+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:31:39.741888+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:31:39.743665+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:15.137487+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:34:15.138853+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:15.140401+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:15.141233+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:15.141807+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:34:15.153718+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:15.154453+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:15.155487+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:15.156308+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:34:15.157953+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:15.158719+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:15.159615+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:15.160359+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:34:15.161995+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:15.163108+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:15.164348+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:15.165379+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:34:15.167280+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:15.168472+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:15.169979+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:15.171170+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:34:15.173184+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:34:15.180052+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:34:15.185004+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:34:15.189836+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:34:15.194136+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:34:15.198017+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:34:15.201905+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:34:15.205472+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:34:15.211872+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:15.221121+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:15.231129+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:15.240077+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:15.250148+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:15.257890+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:34:15.278623+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:15.298579+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:15.327116+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:34:15.329845+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:34:15.330310+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:34:15.330977+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:34:15.343371+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:34:15.354059+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:34:15.364266+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:34:15.375506+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:34:15.385878+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:34:15.409383+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:34:15.422169+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:34:15.422448+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:34:15.422696+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:34:15.426509+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"92cc08bc-9da5-4f26-922e-79 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:34:15+00:00","6":"2021-01-08T12:34:15+00:00"} []
[2021-01-08T12:34:15.427573+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f495eb91-ffc5-4fa3-a974-54 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:34:15+00:00","6":"2021-01-08T12:34:15+00:00"} []
[2021-01-08T12:34:15.427902+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:34:15.429264+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:34:15.429272+00:00] app.INFO: Done. [] []
[2021-01-08T12:34:15.429281+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:34:15.431282+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:34:15.444107+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:15.459180+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:34:15.463275+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:34:15.463289+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.463315+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.465298+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.466643+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:15.467592+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.467746+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.467753+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:15.477705+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:15.479665+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:37.461221+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:34:37.462194+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:37.463615+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:37.464533+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:37.465248+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:34:37.466780+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:37.467466+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:37.468437+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:37.469021+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:34:37.470433+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:37.471122+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:37.471914+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:37.472470+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:34:37.473957+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:37.474658+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:37.475485+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:37.476108+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:34:37.477600+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:37.478436+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:37.479352+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:37.480049+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:34:37.481423+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:34:37.486455+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:34:37.490689+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:34:37.495177+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:34:37.499661+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:34:37.503499+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:34:37.507930+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:34:37.512404+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:34:37.518880+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:37.529603+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:37.540797+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:37.550167+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:37.561634+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:37.570552+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:34:37.591645+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:37.612053+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:37.639723+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:34:37.642557+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:34:37.642987+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:34:37.644010+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:34:37.656420+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:34:37.666240+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:34:37.677645+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:34:37.692491+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:34:37.703766+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:34:37.726793+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:34:37.739687+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:34:37.739991+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:34:37.740269+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:34:37.744113+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"080dd9cf-a8cc-4f98-9023-5d [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:34:37+00:00","6":"2021-01-08T12:34:37+00:00"} []
[2021-01-08T12:34:37.745119+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"52413ac2-cd6f-4f77-9f5d-4f [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:34:37+00:00","6":"2021-01-08T12:34:37+00:00"} []
[2021-01-08T12:34:37.745439+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:34:37.746742+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:34:37.746749+00:00] app.INFO: Done. [] []
[2021-01-08T12:34:37.746758+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:34:37.748861+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:34:37.763062+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:37.778422+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:34:37.782570+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:34:37.782585+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.782613+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.784734+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.786032+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:37.786953+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.787121+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.787129+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:37.797310+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:37.798974+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:42.764012+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:34:42.765137+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:42.766731+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:42.767668+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:42.768305+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:34:42.779876+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:42.780657+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:42.781647+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:42.782416+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:34:42.783576+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:42.784403+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:42.785409+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:42.786117+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:34:42.787609+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:42.788720+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:42.789951+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:42.791032+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:34:42.792939+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:42.794290+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:42.795658+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:42.796738+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:34:42.798904+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:34:42.806053+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:34:42.810632+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:34:42.815228+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:34:42.819405+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:34:42.823530+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:34:42.827509+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:34:42.831648+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:34:42.837837+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:42.847206+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:42.857995+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:42.867403+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:42.878459+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:42.887595+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:34:42.914690+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:42.934507+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:42.968064+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:34:42.971133+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:34:42.971640+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:34:42.972334+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:34:42.988308+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:34:42.999004+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:34:43.010545+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:34:43.022694+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:34:43.032899+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:34:43.056299+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:34:43.068819+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:34:43.069094+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:34:43.069335+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:34:43.073402+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"be171b0a-bb48-4f42-9962-d0 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:34:43+00:00","6":"2021-01-08T12:34:43+00:00"} []
[2021-01-08T12:34:43.074422+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0ca0d855-cc1a-4fc2-8312-43 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:34:43+00:00","6":"2021-01-08T12:34:43+00:00"} []
[2021-01-08T12:34:43.074697+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:34:43.076221+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:34:43.076229+00:00] app.INFO: Done. [] []
[2021-01-08T12:34:43.076237+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:34:43.078202+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:34:43.091368+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:43.107034+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:34:43.111116+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:34:43.111130+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.111156+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.113147+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.115022+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:43.116042+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.116206+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.116214+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:43.126155+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:43.127890+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:57.141064+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:34:57.142274+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:57.143838+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:57.144756+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:57.145462+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:34:57.147266+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:57.148013+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:57.148991+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:57.149730+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:34:57.151600+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:57.152595+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:57.153554+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:57.154197+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:34:57.155701+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:57.156527+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:57.157391+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:57.158033+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:34:57.159381+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:34:57.160228+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:34:57.161074+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:34:57.161722+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:34:57.163284+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:34:57.168902+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:34:57.173479+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:34:57.178043+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:34:57.182419+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:34:57.186458+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:34:57.190263+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:34:57.194239+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:34:57.200474+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:57.209583+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:57.220117+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:57.229193+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:57.240227+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:34:57.249569+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:34:57.270792+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:57.290843+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:34:57.319119+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:34:57.322092+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:34:57.322530+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:34:57.323165+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:34:57.337036+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:34:57.349089+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:34:57.360637+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:34:57.373767+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:34:57.384971+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:34:57.408495+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:34:57.421912+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:34:57.422191+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:34:57.422443+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:34:57.426392+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"982cf3e6-c330-4f68-ba76-78 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:34:57+00:00","6":"2021-01-08T12:34:57+00:00"} []
[2021-01-08T12:34:57.427395+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8d2d5109-cf00-4f80-a1b9-29 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:34:57+00:00","6":"2021-01-08T12:34:57+00:00"} []
[2021-01-08T12:34:57.427690+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:34:57.429362+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:34:57.429370+00:00] app.INFO: Done. [] []
[2021-01-08T12:34:57.429378+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:34:57.431398+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:34:57.444227+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:57.458906+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:34:57.462724+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:34:57.462737+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.462762+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.464748+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.466081+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:34:57.466941+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.467097+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.467104+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:34:57.477986+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:34:57.479717+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:35:20.214485+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:35:20.215554+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:35:20.217043+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:35:20.217987+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:35:20.218645+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:35:20.220217+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:35:20.220905+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:35:20.221766+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:35:20.222417+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:35:20.223742+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:35:20.224647+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:35:20.225508+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:35:20.226101+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:35:20.227429+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:35:20.228250+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:35:20.229184+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:35:20.229881+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:35:20.230952+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:35:20.232002+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:35:20.233330+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:35:20.234233+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:35:20.235957+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:35:20.242645+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:35:20.248460+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:35:20.256168+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:35:20.261427+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:35:20.266163+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:35:20.270859+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:35:20.275477+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:35:20.281710+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:35:20.291462+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:35:20.301626+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:35:20.310542+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:35:20.321299+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:35:20.331261+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:35:20.353295+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:35:20.371630+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:35:20.400700+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:35:20.404952+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:35:20.405461+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:35:20.406315+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:35:20.419695+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:35:20.432396+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:35:20.450567+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:35:20.464472+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:35:20.475674+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:35:20.499478+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:35:20.513261+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:35:20.513545+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:35:20.513798+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:35:20.517562+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"cc2763e1-323b-4f10-bccb-3b [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:35:20+00:00","6":"2021-01-08T12:35:20+00:00"} []
[2021-01-08T12:35:20.518572+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9b003e2b-6fb8-4f77-a1ca-53 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:35:20+00:00","6":"2021-01-08T12:35:20+00:00"} []
[2021-01-08T12:35:20.518853+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:35:20.520140+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:35:20.520146+00:00] app.INFO: Done. [] []
[2021-01-08T12:35:20.520155+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:35:20.522129+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:35:20.534987+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:35:20.550199+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:35:20.554126+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:35:20.554139+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.554164+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.556279+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.557565+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:35:20.558524+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.558694+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.558702+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:35:20.568589+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:35:20.570318+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:36:54.199366+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:36:54.200932+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:36:54.203305+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:36:54.204332+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:36:54.204948+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:36:54.206539+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:36:54.207215+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:36:54.208142+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:36:54.208789+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:36:54.210365+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:36:54.211150+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:36:54.211991+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:36:54.212567+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:36:54.213843+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:36:54.214583+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:36:54.215457+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:36:54.216619+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:36:54.219291+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:36:54.221324+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:36:54.223009+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:36:54.224257+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:36:54.225909+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:36:54.231230+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:36:54.236019+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:36:54.242293+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:36:54.246884+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:36:54.252165+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:36:54.257574+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:36:54.262125+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:36:54.268644+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:36:54.278066+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:36:54.289310+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:36:54.298823+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:36:54.310795+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:36:54.320225+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:36:54.341769+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:36:54.362232+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:36:54.391428+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:36:54.394312+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:36:54.394777+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:36:54.395503+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:36:54.409155+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:36:54.420294+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:36:54.433073+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:36:54.446884+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:36:54.458581+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:36:54.484403+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:36:54.498688+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:36:54.499091+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:36:54.499497+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:36:54.503897+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"986c5074-edf9-4fae-89f1-f6 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:36:54+00:00","6":"2021-01-08T12:36:54+00:00"} []
[2021-01-08T12:36:54.505035+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"abc61c2e-e99d-4ff3-9403-57 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:36:54+00:00","6":"2021-01-08T12:36:54+00:00"} []
[2021-01-08T12:36:54.505301+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:36:54.506931+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:36:54.506938+00:00] app.INFO: Done. [] []
[2021-01-08T12:36:54.506947+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:36:54.509096+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:36:54.522798+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:36:54.539123+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:36:54.543018+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:36:54.543031+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.543057+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.545296+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.546566+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:36:54.547559+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.547741+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.547748+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:36:54.560123+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:36:54.562005+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:40:24.535632+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:40:24.536687+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:24.538633+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:24.539601+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:24.540246+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:40:24.541937+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:24.542545+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:24.543390+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:24.544151+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:40:24.545635+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:24.546397+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:24.547326+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:24.548094+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:40:24.549788+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:24.550531+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:24.551366+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:24.552067+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:40:24.553590+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:24.554299+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:24.555040+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:24.555569+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:40:24.557111+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:40:24.562421+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:40:24.566233+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:40:24.570737+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:40:24.575260+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:40:24.579360+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:40:24.584519+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:40:24.588893+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:40:24.595842+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:24.612619+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:24.624105+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:24.633492+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:24.644637+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:24.654286+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:40:24.672888+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:40:24.691827+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:40:24.719052+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:40:24.721923+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:40:24.722351+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:40:24.722957+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:40:24.735928+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:40:24.747896+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:40:24.759226+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:40:24.772533+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:40:24.783658+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:40:24.806598+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:40:24.819916+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:40:24.820214+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:40:24.820460+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:40:24.824157+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"50921009-8878-4fa9-8030-8c [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:40:24+00:00","6":"2021-01-08T12:40:24+00:00"} []
[2021-01-08T12:40:24.825154+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"d8dfe989-e5a9-4f2c-80c8-6c [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:40:24+00:00","6":"2021-01-08T12:40:24+00:00"} []
[2021-01-08T12:40:24.825496+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:40:24.826857+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:40:24.826865+00:00] app.INFO: Done. [] []
[2021-01-08T12:40:24.826873+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:40:24.828848+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:40:24.841961+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:40:24.856877+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:40:24.860758+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:40:24.860771+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.860796+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.862871+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.864226+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:40:24.865081+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.865235+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.865243+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:24.874923+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:40:24.876650+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:40:42.146747+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:40:42.147840+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:42.149532+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:42.150371+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:42.150983+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:40:42.152818+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:42.153597+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:42.154620+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:42.155389+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:40:42.156856+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:42.157538+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:42.158260+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:42.158817+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:40:42.160288+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:42.161089+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:42.161991+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:42.162745+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:40:42.164177+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:40:42.165016+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:40:42.165842+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:40:42.166495+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:40:42.167747+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:40:42.173521+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:40:42.178901+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:40:42.184956+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:40:42.189539+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:40:42.200261+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:40:42.204862+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:40:42.208992+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:40:42.215177+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:42.224475+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:42.235279+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:42.244809+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:42.255457+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:40:42.264150+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:40:42.283996+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:40:42.303541+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:40:42.330378+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:40:42.333272+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:40:42.333711+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:40:42.334353+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:40:42.347178+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:40:42.358342+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:40:42.369821+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:40:42.382048+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:40:42.392929+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:40:42.416161+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:40:42.428799+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:40:42.429110+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:40:42.429359+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:40:42.433345+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2dba15ff-e812-4fb0-bdb0-9f [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:40:42+00:00","6":"2021-01-08T12:40:42+00:00"} []
[2021-01-08T12:40:42.434354+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"37e89818-142b-4fcf-a67f-33 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:40:42+00:00","6":"2021-01-08T12:40:42+00:00"} []
[2021-01-08T12:40:42.434641+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:40:42.436793+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:40:42.436802+00:00] app.INFO: Done. [] []
[2021-01-08T12:40:42.436810+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:40:42.438872+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:40:42.451658+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:40:42.466377+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:40:42.470152+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:40:42.470166+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.470191+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.472242+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.473537+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:40:42.474581+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.474742+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.474750+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:40:42.485072+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:40:42.486853+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:43:26.585536+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:43:26.586774+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:43:26.588326+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:43:26.589186+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:43:26.589818+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:43:26.591276+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:43:26.591983+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:43:26.592825+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:43:26.593474+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:43:26.594985+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:43:26.595669+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:43:26.596479+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:43:26.597039+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:43:26.598453+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:43:26.599208+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:43:26.600164+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:43:26.600782+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:43:26.602258+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:43:26.602977+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:43:26.603734+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:43:26.604319+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:43:26.605376+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:43:26.610791+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:43:26.615108+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:43:26.620024+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:43:26.635582+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:43:26.640718+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:43:26.646496+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:43:26.651572+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:43:26.658582+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:43:26.668986+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:43:26.681981+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:43:26.691538+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:43:26.702956+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:43:26.712200+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:43:26.733565+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:43:26.751358+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:43:26.780776+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:43:26.783841+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:43:26.784246+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:43:26.784928+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:43:26.798222+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:43:26.808989+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:43:26.819163+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:43:26.831695+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:43:26.843548+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:43:26.866673+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:43:26.879222+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:43:26.879572+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:43:26.879876+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:43:26.883785+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f7283413-cc3a-4f3d-832e-cf [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:43:26+00:00","6":"2021-01-08T12:43:26+00:00"} []
[2021-01-08T12:43:26.884804+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"79908a05-e8a0-4ff6-ba10-6a [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:43:26+00:00","6":"2021-01-08T12:43:26+00:00"} []
[2021-01-08T12:43:26.885143+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:43:26.886725+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:43:26.886732+00:00] app.INFO: Done. [] []
[2021-01-08T12:43:26.886740+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:43:26.888768+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:43:26.901771+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:43:26.916931+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:43:26.921041+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:43:26.921056+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.921083+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.923208+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.924540+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:43:26.925507+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.925665+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.925672+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:43:26.935657+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:43:26.937325+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:50:01.916411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:50:01.917484+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:50:01.918961+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:50:01.919892+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:50:01.920533+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:50:01.922102+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:50:01.922757+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:50:01.923630+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:50:01.924273+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:50:01.925650+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:50:01.926327+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:50:01.927100+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:50:01.927633+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:50:01.929050+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:50:01.929790+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:50:01.930608+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:50:01.931221+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:50:01.932738+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:50:01.933589+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:50:01.934349+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:50:01.934899+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:50:01.936419+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:50:01.941815+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:50:01.946562+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:50:01.951817+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:50:01.957855+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:50:01.962752+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:50:01.967450+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:50:01.972557+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:50:01.981182+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:50:01.991058+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:50:02.002842+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:50:02.011858+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:50:02.022161+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:50:02.032521+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:50:02.053536+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:50:02.083766+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:50:02.120792+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:50:02.123730+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:50:02.124167+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:50:02.124840+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:50:02.136687+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:50:02.147212+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:50:02.157630+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:50:02.170926+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:50:02.182440+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:50:02.205318+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:50:02.217921+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:50:02.218196+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:50:02.218449+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:50:02.222108+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"72cdbb1e-ac11-4fc0-a7d1-ea [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:50:02+00:00","6":"2021-01-08T12:50:02+00:00"} []
[2021-01-08T12:50:02.223100+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"14183699-e2e2-4f37-bb05-c8 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:50:02+00:00","6":"2021-01-08T12:50:02+00:00"} []
[2021-01-08T12:50:02.223379+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:50:02.224774+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:50:02.224783+00:00] app.INFO: Done. [] []
[2021-01-08T12:50:02.224792+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:50:02.226724+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:50:02.239415+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:50:02.254294+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:50:02.258227+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:50:02.258240+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.258265+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.260258+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.261518+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:50:02.262478+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.262649+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.262656+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:50:02.273288+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:50:02.275117+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:51:29.558956+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:51:29.560244+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:51:29.561721+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:51:29.562534+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:51:29.563073+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:51:29.564915+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:51:29.565633+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:51:29.566540+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:51:29.567169+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:51:29.568758+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:51:29.569487+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:51:29.570234+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:51:29.570780+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:51:29.571815+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:51:29.572550+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:51:29.573393+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:51:29.574035+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:51:29.575468+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:51:29.576242+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:51:29.577080+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:51:29.577700+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:51:29.579033+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:51:29.584302+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:51:29.588928+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:51:29.594042+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:51:29.598292+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:51:29.602636+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:51:29.607039+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:51:29.612434+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:51:29.619387+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:51:29.630440+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:51:29.645449+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:51:29.654785+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:51:29.665243+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:51:29.674086+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:51:29.696005+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:51:29.718431+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:51:29.746597+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:51:29.749509+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:51:29.749948+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:51:29.750609+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:51:29.762548+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:51:29.773218+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:51:29.783669+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:51:29.795584+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:51:29.807603+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:51:29.830939+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:51:29.843895+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:51:29.844169+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:51:29.844416+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:51:29.848250+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8e71f701-ed03-4fd9-9dee-a1 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:51:29+00:00","6":"2021-01-08T12:51:29+00:00"} []
[2021-01-08T12:51:29.849253+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9386e120-9048-4f73-b7b3-26 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:51:29+00:00","6":"2021-01-08T12:51:29+00:00"} []
[2021-01-08T12:51:29.849749+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:51:29.851420+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:51:29.851428+00:00] app.INFO: Done. [] []
[2021-01-08T12:51:29.851437+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:51:29.853588+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:51:29.866855+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:51:29.881828+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:51:29.885809+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:51:29.885823+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.885848+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.887912+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.889215+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:51:29.890201+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.890357+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.890364+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:51:29.900905+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:51:29.902549+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:55:26.324704+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:55:26.326090+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:26.328385+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:26.329429+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:26.330021+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:55:26.331779+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:26.332631+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:26.333618+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:26.334281+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:55:26.335720+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:26.336569+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:26.337391+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:26.337942+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:55:26.339281+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:26.340027+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:26.340971+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:26.341596+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:55:26.342936+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:26.343648+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:26.344413+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:26.345061+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:55:26.346500+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:55:26.351452+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:55:26.356076+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:55:26.360898+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:55:26.364865+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:55:26.369402+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:55:26.374718+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:55:26.378847+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:55:26.385024+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:26.394906+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:26.407716+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:26.416775+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:26.427514+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:26.436191+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:55:26.456945+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:55:26.478886+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:55:26.508756+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:55:26.511662+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:55:26.512093+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:55:26.512878+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:55:26.527357+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:55:26.538691+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:55:26.549281+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:55:26.563499+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:55:26.574984+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:55:26.598187+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:55:26.612280+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:55:26.612587+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:55:26.612865+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:55:26.616820+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"02c4fafe-67b3-4f00-b7a8-83 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:55:26+00:00","6":"2021-01-08T12:55:26+00:00"} []
[2021-01-08T12:55:26.617777+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"72cd3c49-6102-4f09-9ff1-4d [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:55:26+00:00","6":"2021-01-08T12:55:26+00:00"} []
[2021-01-08T12:55:26.618041+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:55:26.619806+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:55:26.619816+00:00] app.INFO: Done. [] []
[2021-01-08T12:55:26.619826+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:55:26.622326+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:55:26.636234+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:55:26.653086+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:55:26.657788+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:55:26.657806+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.657843+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.660253+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.661735+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:55:26.662705+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.662937+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.662948+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:26.675637+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:55:26.677496+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:55:35.621475+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T12:55:35.622663+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:35.624570+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:35.625690+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:35.626278+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T12:55:35.627991+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:35.628632+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:35.629466+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:35.630122+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T12:55:35.631793+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:35.632528+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:35.633268+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:35.633826+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T12:55:35.635239+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:35.635969+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:35.636776+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:35.637412+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T12:55:35.639216+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T12:55:35.640129+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T12:55:35.640896+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T12:55:35.641460+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T12:55:35.642989+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T12:55:35.648057+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T12:55:35.652728+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T12:55:35.657718+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T12:55:35.665166+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T12:55:35.669668+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T12:55:35.674161+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T12:55:35.678300+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T12:55:35.685363+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:35.694781+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:35.705863+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:35.715459+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:35.726991+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T12:55:35.736099+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T12:55:35.756063+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T12:55:35.775293+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T12:55:35.804354+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T12:55:35.807309+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T12:55:35.807855+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T12:55:35.808532+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T12:55:35.822746+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T12:55:35.832957+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T12:55:35.843480+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T12:55:35.864324+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T12:55:35.874531+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T12:55:35.898077+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T12:55:35.911265+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T12:55:35.911627+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T12:55:35.911884+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T12:55:35.915981+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"18dfcb65-27c3-4f86-828b-b8 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T12:55:35+00:00","6":"2021-01-08T12:55:35+00:00"} []
[2021-01-08T12:55:35.917053+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"bba0c049-1833-4f1f-9483-8c [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T12:55:35+00:00","6":"2021-01-08T12:55:35+00:00"} []
[2021-01-08T12:55:35.917451+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T12:55:35.919231+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T12:55:35.919239+00:00] app.INFO: Done. [] []
[2021-01-08T12:55:35.919248+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T12:55:35.921291+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T12:55:35.934483+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:55:35.949271+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T12:55:35.953119+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T12:55:35.953133+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.953158+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.955045+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.956376+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T12:55:35.957388+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.957551+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.957558+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T12:55:35.967909+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T12:55:35.969887+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:04:08.167270+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:04:08.168319+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:08.169838+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:08.170680+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:08.171213+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:04:08.172840+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:08.173505+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:08.174426+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:08.175160+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:04:08.176789+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:08.177507+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:08.178258+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:08.178803+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:04:08.179915+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:08.180773+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:08.181724+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:08.182437+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:04:08.183897+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:08.184705+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:08.185493+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:08.186086+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:04:08.187521+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:04:08.193143+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:04:08.197444+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:04:08.202335+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:04:08.206476+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:04:08.210691+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:04:08.216790+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:04:08.221437+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:04:08.228050+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:08.237440+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:08.247248+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:08.256230+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:08.266621+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:08.275497+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:04:08.297446+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:04:08.316893+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:04:08.345303+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:04:08.348173+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:04:08.348604+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:04:08.349260+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:04:08.362146+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:04:08.372962+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:04:08.383477+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:04:08.396445+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:04:08.407372+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:04:08.430468+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:04:08.443213+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:04:08.443562+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:04:08.443815+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:04:08.447558+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"e093d9f5-6d77-4f27-b453-b7 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:04:08+00:00","6":"2021-01-08T13:04:08+00:00"} []
[2021-01-08T13:04:08.448624+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"585a283d-d210-4fba-ae53-5f [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:04:08+00:00","6":"2021-01-08T13:04:08+00:00"} []
[2021-01-08T13:04:08.448913+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:04:08.450498+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:04:08.450506+00:00] app.INFO: Done. [] []
[2021-01-08T13:04:08.450514+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:04:08.452496+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:04:08.465116+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:04:08.479649+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:04:08.483472+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:04:08.483485+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.483512+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.485412+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.486694+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:04:08.487660+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.487815+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.487828+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:08.497665+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:04:08.499439+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:04:48.285378+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:04:48.287078+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:48.289019+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:48.289917+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:48.290480+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:04:48.292088+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:48.292767+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:48.293711+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:48.294449+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:04:48.296037+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:48.296836+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:48.297659+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:48.298315+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:04:48.299747+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:48.300568+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:48.301466+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:48.302092+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:04:48.303488+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:04:48.304236+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:04:48.305018+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:04:48.305565+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:04:48.306957+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:04:48.311934+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:04:48.316079+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:04:48.321225+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:04:48.325799+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:04:48.329867+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:04:48.334191+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:04:48.338426+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:04:48.345079+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:48.354916+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:48.366310+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:48.376606+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:48.386703+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:04:48.395559+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:04:48.414918+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:04:48.435018+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:04:48.462802+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:04:48.465694+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:04:48.466147+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:04:48.466834+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:04:48.478258+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:04:48.489544+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:04:48.500449+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:04:48.514751+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:04:48.526066+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:04:48.548991+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:04:48.561597+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:04:48.561870+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:04:48.562115+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:04:48.565862+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"ed5ab79d-0a79-4f73-b6bb-5f [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:04:48+00:00","6":"2021-01-08T13:04:48+00:00"} []
[2021-01-08T13:04:48.566914+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"49e6e2cb-d0b2-4f34-9bfa-00 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:04:48+00:00","6":"2021-01-08T13:04:48+00:00"} []
[2021-01-08T13:04:48.567149+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:04:48.569235+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:04:48.569243+00:00] app.INFO: Done. [] []
[2021-01-08T13:04:48.569252+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:04:48.571178+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:04:48.584043+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:04:48.598697+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:04:48.602961+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:04:48.602977+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.603007+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.605176+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.606750+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:04:48.607752+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.607926+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.607942+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:04:48.618386+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:04:48.620159+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:07:21.994453+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:07:21.996184+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:21.997696+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:21.998483+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:21.999037+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:07:22.000862+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:22.001713+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:22.002698+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:22.003512+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:07:22.005044+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:22.005890+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:22.006717+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:22.007254+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:07:22.008639+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:22.009460+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:22.010379+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:22.011013+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:07:22.012372+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:22.013115+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:22.013873+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:22.014433+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:07:22.015511+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:07:22.021464+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:07:22.026822+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:07:22.031770+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:07:22.036759+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:07:22.041006+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:07:22.045281+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:07:22.049537+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:07:22.055740+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:22.066185+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:22.079598+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:22.089287+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:22.099763+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:22.109473+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:07:22.130737+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:07:22.150680+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:07:22.178742+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:07:22.181939+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:07:22.182383+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:07:22.183051+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:07:22.197185+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:07:22.215274+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:07:22.252347+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:07:22.266403+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:07:22.278346+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:07:22.302065+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:07:22.314687+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:07:22.314958+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:07:22.315203+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:07:22.319367+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"bb1af882-a646-4f07-b33e-b9 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:07:22+00:00","6":"2021-01-08T13:07:22+00:00"} []
[2021-01-08T13:07:22.320482+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"1f7ac194-453c-4f18-9d4c-db [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:07:22+00:00","6":"2021-01-08T13:07:22+00:00"} []
[2021-01-08T13:07:22.320760+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:07:22.322413+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:07:22.322420+00:00] app.INFO: Done. [] []
[2021-01-08T13:07:22.322427+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:07:22.324369+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:07:22.337401+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:07:22.352597+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:07:22.356362+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:07:22.356376+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.356401+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.358297+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.359655+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:07:22.360573+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.360726+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.360733+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:22.370961+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:07:22.372781+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:07:34.710534+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:07:34.711669+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:34.713286+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:34.714122+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:34.714772+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:07:34.716317+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:34.716976+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:34.717894+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:34.718552+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:07:34.719804+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:34.720525+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:34.721291+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:34.721863+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:07:34.723241+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:34.723989+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:34.724809+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:34.725393+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:07:34.726796+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:07:34.727499+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:07:34.728213+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:07:34.728769+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:07:34.730271+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:07:34.735610+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:07:34.739622+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:07:34.743970+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:07:34.748132+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:07:34.752433+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:07:34.756787+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:07:34.761678+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:07:34.768890+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:34.778438+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:34.790025+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:34.798683+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:34.808831+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:07:34.817784+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:07:34.838238+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:07:34.858459+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:07:34.886380+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:07:34.889269+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:07:34.889707+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:07:34.890348+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:07:34.903012+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:07:34.913400+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:07:34.925084+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:07:34.938712+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:07:34.949024+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:07:34.972385+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:07:34.985999+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:07:34.986313+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:07:34.986592+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:07:34.990488+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"868f8842-b764-4f1c-9e0b-f9 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:07:34+00:00","6":"2021-01-08T13:07:34+00:00"} []
[2021-01-08T13:07:34.991480+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"5388e1e0-0960-4fd7-979b-27 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:07:34+00:00","6":"2021-01-08T13:07:34+00:00"} []
[2021-01-08T13:07:34.991799+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:07:34.993636+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:07:34.993644+00:00] app.INFO: Done. [] []
[2021-01-08T13:07:34.993658+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:07:34.995624+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:07:35.008805+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:07:35.023902+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:07:35.028187+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:07:35.028201+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.028228+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.030286+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.031861+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:07:35.032895+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.033083+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.033094+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:07:35.044625+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:07:35.046717+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:35.931688+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:11:35.932718+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:35.934234+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:35.935102+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:35.935786+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:11:35.937386+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:35.938155+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:35.939017+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:35.939675+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:11:35.941225+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:35.941928+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:35.942631+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:35.943187+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:11:35.944464+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:35.945258+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:35.946097+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:35.946683+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:11:35.947681+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:35.948579+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:35.949363+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:35.949920+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:11:35.951303+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:11:35.956196+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:11:35.960782+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:11:35.965763+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:11:35.970261+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:11:35.974871+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:11:35.979355+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:11:35.985001+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:11:35.991687+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:36.000674+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:36.011083+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:36.021039+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:36.033357+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:36.042827+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:11:36.065633+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:36.086048+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:36.115694+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:11:36.119886+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:11:36.120572+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:11:36.121228+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:11:36.134457+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:11:36.145477+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:11:36.156993+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:11:36.170283+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:11:36.182270+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:11:36.205335+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:11:36.217823+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:11:36.218099+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:11:36.218346+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:11:36.222181+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"677c854c-1d7a-4f17-aa49-70 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:11:36+00:00","6":"2021-01-08T13:11:36+00:00"} []
[2021-01-08T13:11:36.223145+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3c4d0c89-9efe-4fdf-b427-dd [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:11:36+00:00","6":"2021-01-08T13:11:36+00:00"} []
[2021-01-08T13:11:36.223333+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:11:36.225519+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:11:36.225528+00:00] app.INFO: Done. [] []
[2021-01-08T13:11:36.225536+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:11:36.227622+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:11:36.241096+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:36.256969+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:11:36.261223+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:11:36.261238+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.261268+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.263378+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.264800+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:36.265764+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.265940+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.265948+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:36.276192+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:36.277851+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:41.982999+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:11:41.984065+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:41.985585+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:41.986424+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:41.987162+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:11:41.999307+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:42.000270+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:42.001318+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:42.002205+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:11:42.003683+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:42.004533+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:42.005445+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:42.006144+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:11:42.007603+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:42.008585+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:42.009689+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:42.010695+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:11:42.012389+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:42.013551+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:42.014838+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:42.015841+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:11:42.017757+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:11:42.023501+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:11:42.028054+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:11:42.033415+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:11:42.037841+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:11:42.042517+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:11:42.046525+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:11:42.051090+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:11:42.057502+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:42.068149+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:42.079757+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:42.089592+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:42.100273+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:42.110008+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:11:42.130902+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:42.151818+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:42.181320+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:11:42.184254+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:11:42.184682+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:11:42.185451+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:11:42.204454+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:11:42.215694+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:11:42.228435+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:11:42.249623+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:11:42.293887+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:11:42.326944+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:11:42.340265+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:11:42.340544+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:11:42.340791+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:11:42.344683+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"d123b2c2-9911-4f70-9aa8-e9 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:11:42+00:00","6":"2021-01-08T13:11:42+00:00"} []
[2021-01-08T13:11:42.345853+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"33342e31-2043-4f2f-992b-b7 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:11:42+00:00","6":"2021-01-08T13:11:42+00:00"} []
[2021-01-08T13:11:42.346132+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:11:42.347602+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:11:42.347610+00:00] app.INFO: Done. [] []
[2021-01-08T13:11:42.347619+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:11:42.349689+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:11:42.362712+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:42.378394+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:11:42.382816+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:11:42.382832+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.382864+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.384923+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.386308+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:42.387145+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.387308+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.387315+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:42.398957+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:42.400905+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:55.956064+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:11:55.957204+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:55.958744+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:55.959686+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:55.960369+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:11:55.972246+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:55.973219+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:55.974267+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:55.975114+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:11:55.976884+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:55.977933+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:55.979079+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:55.979866+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:11:55.981720+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:55.982697+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:55.983729+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:55.984495+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:11:55.986227+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:11:55.987419+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:11:55.988806+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:11:55.989903+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:11:55.992081+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:11:55.999713+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:11:56.005136+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:11:56.009856+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:11:56.014555+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:11:56.019581+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:11:56.024113+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:11:56.028430+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:11:56.035212+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:56.044574+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:56.056289+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:56.066088+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:56.078123+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:11:56.087216+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:11:56.108289+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:56.129111+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:11:56.158441+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:11:56.161336+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:11:56.161765+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:11:56.162390+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:11:56.175036+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:11:56.185741+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:11:56.196622+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:11:56.209323+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:11:56.220805+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:11:56.245443+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:11:56.259469+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:11:56.259799+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:11:56.260079+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:11:56.264137+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a9a8fb78-6d78-4f4a-af55-73 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:11:56+00:00","6":"2021-01-08T13:11:56+00:00"} []
[2021-01-08T13:11:56.265081+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"5ced2e6a-3a29-4f56-83fd-96 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:11:56+00:00","6":"2021-01-08T13:11:56+00:00"} []
[2021-01-08T13:11:56.265276+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:11:56.266777+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:11:56.266787+00:00] app.INFO: Done. [] []
[2021-01-08T13:11:56.266795+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:11:56.268853+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:11:56.282485+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:56.298546+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:11:56.302923+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:11:56.302938+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.302966+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.305349+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.306640+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:11:56.307667+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.307845+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.307853+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:11:56.318859+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:11:56.320699+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:12:00.367047+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:12:00.368158+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:12:00.369703+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:12:00.370525+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:12:00.371067+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:12:00.372785+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:12:00.373678+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:12:00.374562+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:12:00.375289+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:12:00.376901+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:12:00.377772+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:12:00.378585+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:12:00.379194+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:12:00.381510+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:12:00.382945+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:12:00.384150+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:12:00.384979+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:12:00.386700+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:12:00.387565+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:12:00.388363+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:12:00.388974+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:12:00.390553+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:12:00.395572+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:12:00.399994+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:12:00.405099+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:12:00.409457+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:12:00.413696+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:12:00.418108+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:12:00.422520+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:12:00.428815+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:12:00.438309+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:12:00.449191+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:12:00.460514+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:12:00.472142+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:12:00.481368+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:12:00.509277+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:12:00.529212+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:12:00.557135+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:12:00.559987+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:12:00.560419+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:12:00.561162+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:12:00.573830+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:12:00.584636+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:12:00.595744+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:12:00.608452+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:12:00.618681+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:12:00.642108+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:12:00.655678+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:12:00.655986+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:12:00.656262+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:12:00.660447+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"24dbcdb8-01cd-4fbf-bdd0-1b [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:12:00+00:00","6":"2021-01-08T13:12:00+00:00"} []
[2021-01-08T13:12:00.661711+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c45a8e5f-9df0-4f2a-9851-b7 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:12:00+00:00","6":"2021-01-08T13:12:00+00:00"} []
[2021-01-08T13:12:00.661978+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:12:00.663464+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:12:00.663473+00:00] app.INFO: Done. [] []
[2021-01-08T13:12:00.663481+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:12:00.665590+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:12:00.679229+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:12:00.695158+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:12:00.699854+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:12:00.699871+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.699902+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.702062+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.703499+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:12:00.704472+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.704650+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.704658+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:12:00.715575+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:12:00.717382+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:15:22.653165+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:15:22.654397+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:15:22.655951+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:15:22.656809+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:15:22.657499+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:15:22.669502+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:15:22.670476+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:15:22.671424+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:15:22.672186+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:15:22.673895+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:15:22.674784+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:15:22.675758+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:15:22.676468+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:15:22.678346+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:15:22.679569+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:15:22.681245+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:15:22.682521+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:15:22.684762+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:15:22.686119+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:15:22.687467+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:15:22.688488+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:15:22.690530+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:15:22.696844+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:15:22.701186+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:15:22.706806+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:15:22.711468+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:15:22.715712+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:15:22.720062+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:15:22.723659+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:15:22.729760+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:15:22.739472+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:15:22.750370+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:15:22.760403+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:15:22.770861+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:15:22.780922+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:15:22.799587+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:15:22.819944+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:15:22.847155+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:15:22.850097+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:15:22.850537+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:15:22.851192+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:15:22.864120+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:15:22.874398+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:15:22.885521+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:15:22.899601+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:15:22.911852+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:15:22.934901+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:15:22.947326+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:15:22.947674+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:15:22.947921+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:15:22.951866+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0c268445-dd79-4f34-a860-ba [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:15:22+00:00","6":"2021-01-08T13:15:22+00:00"} []
[2021-01-08T13:15:22.952948+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c3262762-aea8-4fed-98c5-60 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:15:22+00:00","6":"2021-01-08T13:15:22+00:00"} []
[2021-01-08T13:15:22.953366+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:15:22.955081+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:15:22.955087+00:00] app.INFO: Done. [] []
[2021-01-08T13:15:22.955095+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:15:22.957064+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:15:22.969741+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:15:22.983998+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:15:22.987849+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:15:22.987862+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:22.987886+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:22.989782+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:22.991023+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:15:22.991995+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:22.992159+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:22.992167+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:15:23.002167+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:15:23.003949+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:16:23.253358+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:16:23.254430+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:16:23.255961+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:16:23.256918+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:16:23.257526+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:16:23.269284+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:16:23.270039+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:16:23.270929+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:16:23.271688+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:16:23.273411+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:16:23.274217+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:16:23.274962+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:16:23.275503+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:16:23.277052+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:16:23.277939+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:16:23.278862+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:16:23.279538+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:16:23.281066+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:16:23.282017+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:16:23.282840+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:16:23.283417+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:16:23.285013+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:16:23.290335+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:16:23.295270+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:16:23.300214+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:16:23.304882+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:16:23.308608+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:16:23.312760+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:16:23.317082+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:16:23.323015+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:16:23.332231+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:16:23.344542+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:16:23.353994+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:16:23.364210+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:16:23.373481+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:16:23.394932+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:16:23.413572+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:16:23.439992+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:16:23.442819+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:16:23.443252+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:16:23.443988+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:16:23.455634+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:16:23.466330+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:16:23.476728+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:16:23.490432+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:16:23.501566+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:16:23.524520+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:16:23.536690+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:16:23.536964+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:16:23.537209+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:16:23.541178+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"391ea01a-7ccd-4f36-ac2c-5c [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:16:23+00:00","6":"2021-01-08T13:16:23+00:00"} []
[2021-01-08T13:16:23.542183+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"bc478367-003c-4fdb-8125-58 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:16:23+00:00","6":"2021-01-08T13:16:23+00:00"} []
[2021-01-08T13:16:23.542461+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:16:23.544233+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:16:23.544241+00:00] app.INFO: Done. [] []
[2021-01-08T13:16:23.544249+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:16:23.546226+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:16:23.558973+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:16:23.574552+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:16:23.578378+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:16:23.578393+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.578420+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.580423+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.581784+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:16:23.582668+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.582822+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.582829+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:16:23.593078+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:16:23.594735+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:17:07.320329+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:17:07.321651+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:17:07.323204+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:17:07.324119+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:17:07.324712+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:17:07.336628+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:17:07.337558+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:17:07.338658+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:17:07.339421+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:17:07.341035+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:17:07.341947+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:17:07.342834+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:17:07.343619+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:17:07.345384+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:17:07.346485+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:17:07.347894+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:17:07.349089+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:17:07.351164+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:17:07.352536+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:17:07.353954+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:17:07.355025+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:17:07.357094+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:17:07.363626+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:17:07.367730+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:17:07.372137+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:17:07.377123+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:17:07.381373+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:17:07.385671+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:17:07.390218+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:17:07.396426+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:17:07.407353+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:17:07.420078+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:17:07.429436+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:17:07.440621+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:17:07.449193+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:17:07.470065+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:17:07.491480+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:17:07.518943+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:17:07.521877+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:17:07.522308+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:17:07.522943+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:17:07.535333+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:17:07.546639+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:17:07.557904+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:17:07.571507+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:17:07.582726+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:17:07.605569+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:17:07.618684+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:17:07.618981+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:17:07.619251+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:17:07.623287+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c2f41b98-56c6-4f47-a81f-83 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:17:07+00:00","6":"2021-01-08T13:17:07+00:00"} []
[2021-01-08T13:17:07.624283+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9c4a72e0-91fb-4ffc-8aba-c6 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:17:07+00:00","6":"2021-01-08T13:17:07+00:00"} []
[2021-01-08T13:17:07.624657+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:17:07.626305+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:17:07.626313+00:00] app.INFO: Done. [] []
[2021-01-08T13:17:07.626321+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:17:07.628296+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:17:07.640925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:17:07.655957+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:17:07.660187+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:17:07.660202+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.660229+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.662381+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.663892+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:17:07.664823+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.665052+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.665061+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:17:07.676038+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:17:07.677942+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:07.021679+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:07.022741+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:07.024245+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:07.025070+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:07.025660+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:07.027254+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:07.027897+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:07.028753+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:07.029442+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:07.030853+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:07.031676+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:07.032610+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:07.033541+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:07.035382+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:07.036456+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:07.037411+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:07.038098+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:07.039530+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:07.040412+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:07.041216+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:07.041804+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:07.043275+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:07.048811+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:07.053570+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:07.058502+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:07.062639+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:07.066623+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:07.070558+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:07.074550+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:07.080485+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:07.089975+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:07.100386+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:07.110316+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:07.120462+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:07.129252+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:07.147825+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:07.168226+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:07.196643+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:07.199619+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:07.200065+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:07.200725+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:07.213402+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:07.223366+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:07.234143+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:07.248386+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:07.259240+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:07.282639+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:07.296399+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:07.296710+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:07.297002+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:07.301071+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8ba5320c-03c2-4f3c-bbf6-a5 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:07+00:00","6":"2021-01-08T13:18:07+00:00"} []
[2021-01-08T13:18:07.302050+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"77c79364-a717-4f25-9515-5a [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:07+00:00","6":"2021-01-08T13:18:07+00:00"} []
[2021-01-08T13:18:07.302270+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:07.304180+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:07.304189+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:07.304198+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:07.306281+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:07.319361+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:07.334094+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:07.338324+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:07.338338+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.338365+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.340370+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.341753+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:07.342535+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.342694+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.342701+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:07.352757+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:07.354461+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:15.570259+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:15.571224+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:15.572784+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:15.573632+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:15.574289+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:15.575833+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:15.576490+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:15.577315+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:15.578004+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:15.579459+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:15.580121+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:15.580896+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:15.581550+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:15.582935+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:15.583615+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:15.584432+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:15.585041+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:15.586392+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:15.587053+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:15.587774+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:15.588320+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:15.589657+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:15.594603+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:15.598708+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:15.603474+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:15.607752+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:15.612797+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:15.617211+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:15.621822+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:15.628565+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:15.638130+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:15.649077+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:15.658384+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:15.669703+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:15.679036+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:15.700256+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:15.720315+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:15.748584+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:15.751430+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:15.751863+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:15.752485+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:15.767160+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:15.778308+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:15.789144+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:15.802017+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:15.812179+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:15.835466+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:15.847957+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:15.848231+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:15.848474+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:15.852336+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"d34fe7ba-dbe9-4f92-9b83-95 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:15+00:00","6":"2021-01-08T13:18:15+00:00"} []
[2021-01-08T13:18:15.853323+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2ceeaef2-b613-4fe9-9430-49 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:15+00:00","6":"2021-01-08T13:18:15+00:00"} []
[2021-01-08T13:18:15.853545+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:15.855275+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:15.855284+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:15.855292+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:15.857469+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:15.870004+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:15.884345+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:15.888117+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:15.888130+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.888156+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.890026+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.891267+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:15.892219+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.892387+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.892394+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:15.902203+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:15.903940+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:24.444244+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:24.445357+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:24.446791+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:24.447656+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:24.448350+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:24.450063+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:24.450760+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:24.451606+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:24.452228+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:24.453823+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:24.454654+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:24.455530+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:24.456191+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:24.457761+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:24.458578+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:24.459511+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:24.460271+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:24.461798+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:24.462602+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:24.463422+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:24.464032+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:24.465482+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:24.471228+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:24.475683+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:24.480009+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:24.484205+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:24.487539+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:24.492217+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:24.496331+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:24.503113+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:24.512854+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:24.523227+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:24.533979+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:24.545416+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:24.554168+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:24.573693+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:24.593504+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:24.621549+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:24.625644+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:24.626084+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:24.626812+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:24.638934+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:24.649880+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:24.660541+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:24.673309+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:24.684770+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:24.707351+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:24.720089+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:24.720368+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:24.720613+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:24.724546+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0da36478-e2f8-4f71-b200-c0 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:24+00:00","6":"2021-01-08T13:18:24+00:00"} []
[2021-01-08T13:18:24.725630+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"e8b91727-77f0-4f84-87dc-b3 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:24+00:00","6":"2021-01-08T13:18:24+00:00"} []
[2021-01-08T13:18:24.725967+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:24.727503+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:24.727512+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:24.727520+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:24.729478+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:24.742729+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:24.757597+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:24.761537+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:24.761552+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.761578+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.763515+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.764889+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:24.765836+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.765992+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.765999+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:24.776178+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:24.777866+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:32.982553+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:32.984487+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:32.986476+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:32.987425+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:32.988028+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:32.989852+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:32.990568+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:32.991445+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:32.992219+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:32.993844+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:32.994555+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:32.995325+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:32.995892+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:32.997382+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:32.998207+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:32.999182+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:32.999844+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:33.001414+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:33.002329+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:33.003296+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:33.004073+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:33.005862+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:33.011872+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:33.016170+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:33.020967+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:33.025527+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:33.029430+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:33.033549+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:33.038157+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:33.044288+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:33.053803+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:33.064882+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:33.074117+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:33.086394+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:33.095407+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:33.115393+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:33.134881+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:33.162481+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:33.165358+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:33.165842+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:33.166609+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:33.179834+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:33.190361+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:33.200893+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:33.213047+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:33.224285+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:33.249059+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:33.262072+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:33.262348+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:33.262597+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:33.266459+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"061642f1-a7fb-4fe8-ae81-e3 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:33+00:00","6":"2021-01-08T13:18:33+00:00"} []
[2021-01-08T13:18:33.267512+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"941fd201-6aa3-4fc5-a1b2-bf [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:33+00:00","6":"2021-01-08T13:18:33+00:00"} []
[2021-01-08T13:18:33.267914+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:33.269231+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:33.269239+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:33.269247+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:33.271417+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:33.284812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:33.300343+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:33.304612+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:33.304629+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.304658+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.307016+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.308580+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:33.309598+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.309775+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.309783+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:33.320551+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:33.322619+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:37.554307+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:37.556298+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:37.557780+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:37.558620+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:37.559310+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:37.561163+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:37.561889+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:37.562775+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:37.563467+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:37.565019+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:37.565734+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:37.566487+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:37.567008+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:37.568454+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:37.569299+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:37.570203+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:37.570891+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:37.572276+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:37.573136+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:37.573982+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:37.574617+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:37.575793+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:37.581437+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:37.586137+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:37.590828+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:37.595482+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:37.599537+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:37.603739+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:37.608378+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:37.614703+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:37.624676+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:37.635580+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:37.645957+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:37.656763+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:37.665351+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:37.690607+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:37.710327+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:37.739228+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:37.742104+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:37.742530+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:37.743155+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:37.755101+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:37.765632+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:37.776206+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:37.788915+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:37.799061+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:37.821816+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:37.834528+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:37.834800+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:37.835048+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:37.839039+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"cd9d3dda-e154-4f5b-9e91-90 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:37+00:00","6":"2021-01-08T13:18:37+00:00"} []
[2021-01-08T13:18:37.840117+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7e17f826-f0e2-4ff1-8788-0a [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:37+00:00","6":"2021-01-08T13:18:37+00:00"} []
[2021-01-08T13:18:37.840374+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:37.842041+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:37.842048+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:37.842056+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:37.844090+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:37.857036+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:37.871779+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:37.875481+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:37.875494+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.875519+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.877387+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.878679+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:37.879652+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.879804+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.879811+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:37.890144+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:37.891863+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:47.584467+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:47.596796+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:47.599185+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:47.600651+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:47.601616+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:47.603479+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:47.604346+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:47.605481+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:47.606304+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:47.607795+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:47.608522+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:47.609320+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:47.610104+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:47.611640+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:47.612532+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:47.613446+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:47.614085+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:47.615495+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:47.616277+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:47.617024+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:47.617560+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:47.618948+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:47.624103+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:47.628824+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:47.633831+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:47.637807+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:47.641542+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:47.646216+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:47.651005+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:47.659165+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:47.668754+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:47.679540+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:47.689485+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:47.700065+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:47.709074+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:47.729844+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:47.750528+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:47.778983+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:47.781899+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:47.782334+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:47.782996+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:47.795500+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:47.805973+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:47.816878+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:47.829841+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:47.840713+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:47.864004+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:47.876647+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:47.876959+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:47.877207+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:47.881041+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"54bf16cc-83e8-4f37-8a2b-d7 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:47+00:00","6":"2021-01-08T13:18:47+00:00"} []
[2021-01-08T13:18:47.882238+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"458a2c75-cbba-4f94-8943-f5 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:47+00:00","6":"2021-01-08T13:18:47+00:00"} []
[2021-01-08T13:18:47.882554+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:47.883985+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:47.883994+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:47.884001+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:47.886045+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:47.899136+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:47.914540+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:47.918637+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:47.918652+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.918677+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.920768+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.922140+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:47.923026+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.923185+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.923192+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:47.933518+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:47.935359+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:53.238812+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:18:53.240530+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:53.242436+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:53.243487+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:53.244181+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:18:53.245863+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:53.246719+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:53.247628+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:53.248451+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:18:53.250050+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:53.250858+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:53.253915+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:53.254969+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:18:53.256572+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:53.257434+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:53.258494+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:53.259204+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:18:53.260653+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:18:53.261632+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:18:53.262501+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:18:53.263221+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:18:53.264817+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:18:53.270565+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:18:53.275421+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:18:53.280316+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:18:53.286694+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:18:53.295281+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:18:53.317640+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:18:53.322387+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:18:53.329243+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:53.338954+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:53.349305+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:53.358670+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:53.375261+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:18:53.384934+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:18:53.404180+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:53.424210+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:18:53.451906+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:18:53.454654+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:18:53.455089+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:18:53.455881+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:18:53.469673+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:18:53.481583+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:18:53.491384+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:18:53.504945+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:18:53.515724+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:18:53.538132+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:18:53.550450+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:18:53.550724+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:18:53.550968+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:18:53.554659+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8d382afb-da2c-4f82-89b9-6a [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:18:53+00:00","6":"2021-01-08T13:18:53+00:00"} []
[2021-01-08T13:18:53.555755+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"ff54b16f-56a9-4f4b-bbdb-9b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:18:53+00:00","6":"2021-01-08T13:18:53+00:00"} []
[2021-01-08T13:18:53.556096+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:18:53.557741+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:18:53.557749+00:00] app.INFO: Done. [] []
[2021-01-08T13:18:53.557757+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:18:53.559752+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:18:53.572730+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:53.587752+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:18:53.591619+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:18:53.591632+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.591658+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.593591+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.594826+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:18:53.595781+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.595932+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.595939+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:18:53.606332+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:18:53.608131+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:30:51.219803+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:30:51.220225+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:30:51.220235+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.220258+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.220574+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.223896+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:30:51.224528+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.224553+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.224558+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:30:51.228934+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:30:51.229672+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:32:30.165841+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:32:30.166207+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:32:30.166216+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.166237+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.166527+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.169586+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:32:30.170148+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.170203+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.170211+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:30.174938+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:32:30.175692+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:32:39.733814+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:32:39.734194+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:32:39.734204+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.734225+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.734578+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.737806+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:32:39.738297+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.738322+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.738327+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:32:39.742203+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:32:39.742845+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:34:23.969738+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:34:23.970300+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:34:23.970309+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.970331+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.970651+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.974545+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:34:23.975133+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.975161+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.975167+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:34:23.978943+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:34:23.979635+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:35:19.897913+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:35:19.898340+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:35:19.898351+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.898374+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.898688+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.902377+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:35:19.903266+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.903299+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.903305+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:35:19.907310+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:35:19.908141+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:40:07.643720+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:40:07.644124+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:40:07.644134+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.644156+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.644462+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.647507+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:40:07.648131+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.648155+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.648161+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:40:07.651902+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:40:07.652530+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:42:43.379603+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:42:43.379987+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:42:43.379996+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.380016+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.380302+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.383221+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:42:43.383826+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.383850+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.383856+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:43.388137+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:42:43.388778+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:42:55.019017+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:42:55.019430+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:42:55.019440+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.019462+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.019753+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.022958+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:42:55.023519+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.023543+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.023550+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:42:55.027156+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:42:55.028031+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:43:03.531417+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:43:03.531905+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:43:03.531915+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.531939+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.532279+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.536229+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:43:03.536941+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.536971+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.536987+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:03.541287+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:43:03.542004+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:43:21.421297+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:43:21.421669+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:43:21.421678+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.421698+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.421991+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.426200+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:43:21.427060+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.427087+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.427093+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:43:21.430905+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:43:21.431677+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:14.309052+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:46:14.309419+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:46:14.309429+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.309450+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.309764+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.313023+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:46:14.313629+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.313657+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.313663+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:14.317407+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:14.318188+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:38.268710+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:46:38.269226+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:46:38.269236+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.269256+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.269542+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.272916+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:46:38.273950+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.273983+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.273989+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:38.278210+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:38.278819+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:46.880913+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:46:46.881419+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:46:46.881429+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.881450+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.881760+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.884990+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:46:46.885519+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.885543+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.885549+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:46.889305+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:46.889909+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:54.288987+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:46:54.289387+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:46:54.289397+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.289420+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.289732+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.292996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:46:54.293532+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.293557+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.293563+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:46:54.297186+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:46:54.297820+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:47:14.560498+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T13:47:14.560892+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:47:14.560903+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.560924+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.561214+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.564344+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:47:14.564971+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.564995+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.565001+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:47:14.568893+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:47:14.569566+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:59:01.958187+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T13:59:01.959233+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:59:01.960810+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:59:01.961711+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:59:01.962365+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T13:59:01.973997+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:59:01.974732+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:59:01.975594+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:59:01.976272+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T13:59:01.977637+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:59:01.978408+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:59:01.979229+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:59:01.979780+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T13:59:01.981082+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:59:01.981783+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:59:01.982584+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:59:01.983182+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T13:59:01.984451+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T13:59:01.985224+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T13:59:01.986033+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T13:59:01.986653+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T13:59:01.987728+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T13:59:01.992747+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T13:59:01.997156+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T13:59:02.002104+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T13:59:02.006108+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T13:59:02.010071+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T13:59:02.013890+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T13:59:02.018110+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T13:59:02.024710+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:59:02.033739+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:59:02.044647+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:59:02.054447+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:59:02.065452+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T13:59:02.074719+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T13:59:02.093992+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T13:59:02.113756+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T13:59:02.141632+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T13:59:02.144503+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T13:59:02.144901+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T13:59:02.145611+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T13:59:02.157447+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T13:59:02.168126+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T13:59:02.179060+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T13:59:02.192619+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T13:59:02.203391+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T13:59:02.226152+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T13:59:02.239889+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T13:59:02.240211+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T13:59:02.240493+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T13:59:02.244496+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3020dc92-b952-4ff8-ad68-13 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T13:59:02+00:00","6":"2021-01-08T13:59:02+00:00"} []
[2021-01-08T13:59:02.245598+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b83125d5-e456-4fe8-93e1-10 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T13:59:02+00:00","6":"2021-01-08T13:59:02+00:00"} []
[2021-01-08T13:59:02.245866+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T13:59:02.247591+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T13:59:02.247599+00:00] app.INFO: Done. [] []
[2021-01-08T13:59:02.247607+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T13:59:02.249540+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T13:59:02.262408+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:59:02.277796+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-08T13:59:02.281616+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T13:59:02.281629+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.281654+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.283584+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.284938+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T13:59:02.285926+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.286081+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.286088+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T13:59:02.301010+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T13:59:02.302899+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:00:53.106263+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-08T14:00:53.107225+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T14:00:53.108907+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T14:00:53.109712+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T14:00:53.110286+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-08T14:00:53.112011+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T14:00:53.112638+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T14:00:53.113518+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T14:00:53.114180+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-08T14:00:53.115524+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T14:00:53.116223+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T14:00:53.116955+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T14:00:53.117507+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-08T14:00:53.118808+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T14:00:53.119564+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T14:00:53.120379+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T14:00:53.121005+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-08T14:00:53.122307+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-08T14:00:53.123026+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-08T14:00:53.123768+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-08T14:00:53.124324+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-08T14:00:53.125692+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-08T14:00:53.130634+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-08T14:00:53.134654+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-08T14:00:53.139047+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-08T14:00:53.143315+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-08T14:00:53.148496+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-08T14:00:53.152985+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-08T14:00:53.157308+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-08T14:00:53.163654+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T14:00:53.172539+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T14:00:53.183028+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T14:00:53.193224+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T14:00:53.203557+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-08T14:00:53.213361+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-08T14:00:53.234621+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-08T14:00:53.255466+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-08T14:00:53.284125+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-08T14:00:53.286817+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-08T14:00:53.287212+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-08T14:00:53.287932+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-08T14:00:53.301231+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-08T14:00:53.318084+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-08T14:00:53.328920+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-08T14:00:53.342001+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-08T14:00:53.353365+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-08T14:00:53.376280+00:00] app.INFO: Loading fixtures. [] []
[2021-01-08T14:00:53.389525+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-08T14:00:53.389841+00:00] app.INFO: Flushing objects. [] []
[2021-01-08T14:00:53.390092+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-08T14:00:53.394116+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7208d011-6d11-4f87-b09a-46 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-08T14:00:53+00:00","6":"2021-01-08T14:00:53+00:00"} []
[2021-01-08T14:00:53.395223+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"97ddcc30-fdb6-4f0d-8bed-2a [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-08T14:00:53+00:00","6":"2021-01-08T14:00:53+00:00"} []
[2021-01-08T14:00:53.395511+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-08T14:00:53.397158+00:00] app.INFO: Post-processing objects. [] []
[2021-01-08T14:00:53.397166+00:00] app.INFO: Done. [] []
[2021-01-08T14:00:53.397174+00:00] app.INFO: fixtures loaded [] []
[2021-01-08T14:00:53.399216+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-08T14:00:53.412401+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:00:53.428071+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-08T14:00:53.432338+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:00:53.432353+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.432382+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.434570+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.436066+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:00:53.437093+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.437249+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.437256+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:00:53.453092+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:00:53.454811+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.058066+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T14:01:14.058460+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:14.058469+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.058490+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.058776+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.062009+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:14.062582+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.062607+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.062613+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.066061+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.066690+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.271655+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-08T14:01:14.272147+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:14.272157+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.272178+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.272464+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.275633+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:14.276173+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.276196+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.276201+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.279071+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.279600+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.813347+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"673d971f-1e04-4ff7-b99e-9d4aa52a1a8f"},"request_uri":"http://localhost/api/users/673d971f-1e04-4ff7-b99e-9d4aa52a1a8f","method":"GET"} []
[2021-01-08T14:01:14.813827+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:14.813853+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.813899+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.814514+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.819192+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:14.819748+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.819776+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.819783+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:14.821011+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["673d971f-1e04-4ff7-b99e-9d [...]"] []
[2021-01-08T14:01:14.823701+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:14.823917+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:43.368896+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T14:01:43.369309+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:43.369319+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.369343+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.369681+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.372835+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:43.373465+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.373489+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.373494+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.377233+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:43.377880+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:43.589537+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-08T14:01:43.590576+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:43.590630+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.590672+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.591218+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.596342+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:43.597234+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.597265+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.597271+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:43.601454+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:43.601861+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:44.192731+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"f860feeb-66f7-4fe6-915c-573e309625ec"},"request_uri":"http://localhost/api/users/f860feeb-66f7-4fe6-915c-573e309625ec","method":"GET"} []
[2021-01-08T14:01:44.193242+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:01:44.193253+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.193278+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.193637+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.197508+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:01:44.198136+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.198165+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.198171+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:01:44.199634+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["f860feeb-66f7-4fe6-915c-57 [...]"] []
[2021-01-08T14:01:44.202534+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:01:44.202822+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:02.396460+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-08T14:02:02.396824+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:02:02.396833+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.396854+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.397136+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.400294+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:02:02.400800+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.400823+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.400829+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.404435+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:02.405035+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:02.618930+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-08T14:02:02.619452+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:02:02.619463+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.619487+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.619805+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.622913+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:02:02.623448+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.623475+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.623482+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:02.626341+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:02.626608+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:03.169042+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"d114c860-a91e-4f84-b875-80df05515170"},"request_uri":"http://localhost/api/users/d114c860-a91e-4f84-b875-80df05515170","method":"GET"} []
[2021-01-08T14:02:03.169484+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-08T14:02:03.169495+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.169519+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.169839+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.172966+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-08T14:02:03.173492+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.173520+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.173526+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-08T14:02:03.174688+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["d114c860-a91e-4f84-b875-80 [...]"] []
[2021-01-08T14:02:03.177078+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-08T14:02:03.177301+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:42:00.604505+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T08:42:00.606508+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:00.608684+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:00.610108+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:00.610795+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T08:42:00.612435+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:00.613067+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:00.613859+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:00.614514+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T08:42:00.615536+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:00.616288+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:00.616918+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:00.617477+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T08:42:00.618753+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:00.619436+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:00.620121+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:00.620896+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T08:42:00.622674+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:00.623830+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:00.624755+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:00.625625+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T08:42:00.627299+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T08:42:00.639753+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T08:42:00.645366+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T08:42:00.651872+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T08:42:00.657116+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T08:42:00.662112+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T08:42:00.666524+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T08:42:00.670568+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T08:42:00.678430+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:00.689011+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:00.701177+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:00.711361+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:00.722206+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:00.731341+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T08:42:00.752861+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T08:42:00.775301+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T08:42:00.805696+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T08:42:00.809239+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T08:42:00.809758+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T08:42:00.810402+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T08:42:00.824240+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T08:42:00.835364+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T08:42:00.847231+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T08:42:00.871457+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T08:42:00.883360+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T08:42:00.909108+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T08:42:00.923194+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T08:42:00.923540+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T08:42:00.923846+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T08:42:00.928445+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"49b4a672-902b-4f4a-995d-cb [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T08:42:00+00:00","6":"2021-01-11T08:42:00+00:00"} []
[2021-01-11T08:42:00.929499+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"5caa6bae-fe00-4f94-aaf7-7d [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T08:42:00+00:00","6":"2021-01-11T08:42:00+00:00"} []
[2021-01-11T08:42:00.929803+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T08:42:00.931543+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T08:42:00.931550+00:00] app.INFO: Done. [] []
[2021-01-11T08:42:00.931559+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T08:42:00.933656+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T08:42:00.948652+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:42:00.965559+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:42:00.968988+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:42:00.969003+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.969034+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.971288+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.973236+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:42:00.974383+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.974579+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.974588+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:00.989085+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:42:00.992130+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:42:10.085160+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T08:42:10.088108+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:10.090485+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:10.092228+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:10.093128+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T08:42:10.094582+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:10.095368+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:10.096311+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:10.097026+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T08:42:10.098472+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:10.099223+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:10.099900+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:10.100462+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T08:42:10.101962+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:10.102828+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:10.104164+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:10.105404+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T08:42:10.107976+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T08:42:10.109729+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T08:42:10.111051+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T08:42:10.112210+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T08:42:10.114079+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T08:42:10.122444+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T08:42:10.129208+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T08:42:10.134881+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T08:42:10.141192+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T08:42:10.145508+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T08:42:10.150329+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T08:42:10.155608+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T08:42:10.165402+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:10.177581+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:10.192572+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:10.207801+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:10.221011+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T08:42:10.231345+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T08:42:10.254787+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T08:42:10.278908+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T08:42:10.317265+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T08:42:10.321507+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T08:42:10.322373+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T08:42:10.323476+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T08:42:10.338656+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T08:42:10.351426+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T08:42:10.364457+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T08:42:10.379279+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T08:42:10.393015+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T08:42:10.422562+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T08:42:10.441375+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T08:42:10.441819+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T08:42:10.442146+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T08:42:10.447798+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f06f57a7-77f9-4fd4-be24-89 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T08:42:10+00:00","6":"2021-01-11T08:42:10+00:00"} []
[2021-01-11T08:42:10.449095+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"92a9bf7e-74be-4f9a-8e83-52 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T08:42:10+00:00","6":"2021-01-11T08:42:10+00:00"} []
[2021-01-11T08:42:10.449352+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T08:42:10.451494+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T08:42:10.451506+00:00] app.INFO: Done. [] []
[2021-01-11T08:42:10.451515+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T08:42:10.454806+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T08:42:10.474175+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:42:10.500882+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:42:10.506049+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:42:10.506069+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.506128+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.508741+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.510201+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:42:10.511403+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.511653+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.511666+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:42:10.527763+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:42:10.529683+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:28.721622+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:44:28.722054+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:28.722066+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.722091+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.722442+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.727539+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:28.728349+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.728380+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.728386+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.733023+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:28.733704+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:28.745500+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:44:28.745992+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:28.746005+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.746032+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.746407+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.749731+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:28.750290+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.750322+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.750331+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:28.753439+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:28.753754+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.280813+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:44:43.281206+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:43.281217+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.281239+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.281541+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.284601+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:43.285127+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.285154+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.285160+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.289294+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.290133+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.300731+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:44:43.301104+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:43.301114+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.301136+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.301482+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.304949+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:43.305496+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.305522+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.305528+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.309314+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.309654+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.464262+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:44:43.464675+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:43.464686+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.464711+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.465042+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.468223+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:43.468871+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.468901+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.468907+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.472211+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.472541+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.739787+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T08:44:43.740711+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:43.740743+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.740808+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.741577+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.746045+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:43.746613+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.746641+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.746647+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:43.749355+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:43.749571+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:44.321464+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"85832b5b-a5d5-4f0b-97a1-666c1d056049"},"request_uri":"http://localhost/api/users/85832b5b-a5d5-4f0b-97a1-666c1d056049","method":"GET"} []
[2021-01-11T08:44:44.321897+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:44:44.321908+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.321931+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.322244+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.326575+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:44:44.327407+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.327438+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.327445+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:44:44.328926+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["85832b5b-a5d5-4f0b-97a1-66 [...]"] []
[2021-01-11T08:44:44.331630+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:44:44.331855+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:02.911353+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:45:02.911854+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:02.911864+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.911887+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.912195+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.915686+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:02.916322+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.916346+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.916352+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.920304+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:02.920886+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:02.931846+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:45:02.932214+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:02.932224+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.932245+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.932531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.936251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:02.936817+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.936842+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.936848+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:02.940103+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:02.940560+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:23.902138+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:45:23.902553+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:23.902564+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.902587+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.902918+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.907538+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:23.908279+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.908309+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.908315+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:23.912726+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:23.913381+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.513934+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:45:31.514333+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:31.514343+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.514366+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.514681+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.518002+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:31.518567+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.518594+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.518600+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.524570+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.525287+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.698028+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:45:31.698395+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:31.698404+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.698425+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.698714+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.701775+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:31.702312+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.702338+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.702344+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.706074+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.706370+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.962380+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T08:45:31.962954+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:31.962966+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.962991+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.963382+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.966303+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:31.966807+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.966834+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.966840+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:31.969525+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:31.969819+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:32.542174+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"f67bdb1f-5c91-4f04-b1bf-06a97515859a"},"request_uri":"http://localhost/api/users/f67bdb1f-5c91-4f04-b1bf-06a97515859a","method":"GET"} []
[2021-01-11T08:45:32.542630+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:32.542641+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.542667+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.542995+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.546276+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:32.546825+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.546850+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.546856+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:32.547995+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["f67bdb1f-5c91-4f04-b1bf-06 [...]"] []
[2021-01-11T08:45:32.550408+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:32.550638+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:47.894792+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:45:47.895222+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:47.895233+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.895258+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.895577+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.898930+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:47.899612+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.899666+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.899672+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:47.904883+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:47.905672+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:48.079283+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:45:48.079685+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:45:48.079696+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.079718+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.080049+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.083108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:45:48.083753+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.083780+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.083786+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:45:48.087484+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:45:48.087870+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.411820+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:46:25.412231+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:25.412240+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.412261+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.412552+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.415767+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:25.416477+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.416515+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.416521+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.422165+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.422889+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.596114+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:46:25.596778+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:25.596794+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.596827+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.597260+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.601781+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:25.602966+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.602996+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.603002+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.606523+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.606787+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.840254+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T08:46:25.840810+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:25.840823+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.840850+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.841267+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.851046+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:25.852354+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.852394+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.852401+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:25.856028+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:25.856269+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:26.431109+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"de8b73f4-0bc6-4f9b-bb9f-c2ebc50e06f8"},"request_uri":"http://localhost/api/users/de8b73f4-0bc6-4f9b-bb9f-c2ebc50e06f8","method":"GET"} []
[2021-01-11T08:46:26.431548+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:26.431559+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.431582+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.431897+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.435619+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:26.436400+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.436430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.436437+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:26.437963+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["de8b73f4-0bc6-4f9b-bb9f-c2 [...]"] []
[2021-01-11T08:46:26.440861+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:26.441083+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.186736+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:46:50.187249+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:50.187261+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.187290+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.187773+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.192251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:50.192953+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.192979+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.192985+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.197178+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.197849+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.370947+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:46:50.371421+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:50.371433+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.371459+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.371837+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.375130+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:50.375853+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.375878+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.375883+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.378681+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.378912+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.615922+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T08:46:50.616949+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:50.616980+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.617052+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.617483+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.625532+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:50.626161+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.626189+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.626195+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:50.628899+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:50.629103+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:51.207404+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"76c42e5f-3927-4f81-94a2-2cac5e9b1c87"},"request_uri":"http://localhost/api/users/76c42e5f-3927-4f81-94a2-2cac5e9b1c87","method":"GET"} []
[2021-01-11T08:46:51.207875+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:46:51.207886+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.207910+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.208232+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.211367+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:46:51.211895+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.211919+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.211925+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:46:51.213044+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["76c42e5f-3927-4f81-94a2-2c [...]"] []
[2021-01-11T08:46:51.215888+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:46:51.216216+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:37.887017+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T08:49:37.887531+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:49:37.887542+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.887568+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.888004+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.891069+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:49:37.891664+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.891691+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.891698+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:37.895674+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:37.896349+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.086148+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T08:49:38.086671+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:49:38.086684+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.086715+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.087091+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.090494+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:49:38.091033+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.091060+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.091066+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.094082+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.094321+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.878483+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"49edf054-7a58-4f4d-8b58-b29cf33b202f"},"request_uri":"http://localhost/api/users/49edf054-7a58-4f4d-8b58-b29cf33b202f","method":"GET"} []
[2021-01-11T08:49:38.878905+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:49:38.878915+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.878938+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.879263+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.882494+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:49:38.883214+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.883246+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.883254+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.885012+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["49edf054-7a58-4f4d-8b58-b2 [...]"] []
[2021-01-11T08:49:38.888228+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.888477+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.922001+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T08:49:38.922496+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T08:49:38.922507+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.922532+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.922860+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.926108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T08:49:38.926661+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.926685+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.926691+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T08:49:38.929437+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T08:49:38.929660+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:49.953167+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:03:49.953563+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:03:49.953573+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.953596+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.953907+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.957336+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:03:49.958114+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.958142+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.958148+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:49.965447+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:49.966091+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:50.170734+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:03:50.171101+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:03:50.171111+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.171140+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.171477+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.174975+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:03:50.176487+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.176535+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.176561+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.184484+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:50.184709+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:50.961792+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"89096dfd-57ed-4f74-9cfc-aba52e7648d6"},"request_uri":"http://localhost/api/users/89096dfd-57ed-4f74-9cfc-aba52e7648d6","method":"GET"} []
[2021-01-11T09:03:50.962306+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:03:50.962321+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.962348+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.962719+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.966101+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:03:50.966648+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.966677+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.966684+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:50.967919+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["89096dfd-57ed-4f74-9cfc-ab [...]"] []
[2021-01-11T09:03:50.970447+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:50.970700+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:51.001401+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:03:51.001843+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:03:51.001854+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.001875+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.002167+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.005321+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:03:51.005876+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.005904+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.005910+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:03:51.010351+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:03:51.010608+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:06.782323+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:04:06.782733+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:04:06.782743+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.782766+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.783144+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.786544+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:04:06.787125+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.787154+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.787160+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.791680+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:06.792678+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:06.987923+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:04:06.988285+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:04:06.988295+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.988315+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.988598+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.992134+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:04:06.993031+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.993062+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:06.993068+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.001121+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:07.001330+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:07.796620+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"dd9f9c7a-846a-4f84-92da-bac4727dd317"},"request_uri":"http://localhost/api/users/dd9f9c7a-846a-4f84-92da-bac4727dd317","method":"GET"} []
[2021-01-11T09:04:07.797472+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:04:07.797494+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.797564+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.798211+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.802251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:04:07.802919+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.802953+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.802960+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.804437+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["dd9f9c7a-846a-4f84-92da-ba [...]"] []
[2021-01-11T09:04:07.808945+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:07.809523+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:07.840146+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:04:07.840886+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:04:07.840902+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.840939+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.841436+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.845818+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:04:07.846448+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.846477+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.846484+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:04:07.849388+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:04:07.849602+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:30.404257+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:07:30.404650+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:30.404660+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.404682+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.404988+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.408342+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:30.409067+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.409118+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.409126+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.414482+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:30.415347+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:30.629063+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:07:30.629543+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:30.629555+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.629584+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.629997+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.634619+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:30.635305+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.635333+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.635339+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:30.638389+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:30.638619+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:31.418091+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"a4db3571-01b8-4f61-a46f-30de56006a07"},"request_uri":"http://localhost/api/users/a4db3571-01b8-4f61-a46f-30de56006a07","method":"GET"} []
[2021-01-11T09:07:31.418589+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:31.418601+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.418629+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.419067+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.422395+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:31.422932+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.422957+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.422964+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.424276+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["a4db3571-01b8-4f61-a46f-30 [...]"] []
[2021-01-11T09:07:31.426664+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:31.426877+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:31.455975+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:07:31.456446+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:31.456457+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.456480+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.456804+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.460140+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:31.460812+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.460838+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.460844+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:31.464001+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:31.464329+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:39.545317+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:07:39.545690+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:39.545699+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.545720+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.546012+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.549546+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:39.550430+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.550462+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.550468+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.555796+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:39.556467+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:39.775472+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:07:39.775953+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:39.775965+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.775992+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.776345+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.779773+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:39.780310+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.780337+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.780343+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:39.784480+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:39.784791+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:40.580496+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"c831aa15-a2dc-4f06-85d2-e0ded0a1fde6"},"request_uri":"http://localhost/api/users/c831aa15-a2dc-4f06-85d2-e0ded0a1fde6","method":"GET"} []
[2021-01-11T09:07:40.581058+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:40.581070+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.581097+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.581531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.585652+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:40.586371+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.586402+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.586408+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.587863+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c831aa15-a2dc-4f06-85d2-e0 [...]"] []
[2021-01-11T09:07:40.590408+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:40.590640+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:40.621922+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:07:40.622481+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:07:40.622492+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.622517+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.622846+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.626082+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:07:40.626677+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.626705+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.626711+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:07:40.629871+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:07:40.630130+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:34.272236+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:18:34.272842+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:34.272858+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.272891+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.273346+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.277334+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:34.277909+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.277936+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.277942+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.283335+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:34.284106+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:34.820060+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:18:34.820454+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:34.820464+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.820486+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.820791+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.824226+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:34.824915+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.824940+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.824946+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:34.828472+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:34.828729+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:35.603812+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"129f74ad-4a3d-4fcf-a748-0d12b106f015"},"request_uri":"http://localhost/api/users/129f74ad-4a3d-4fcf-a748-0d12b106f015","method":"GET"} []
[2021-01-11T09:18:35.604250+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:35.604261+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.604285+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.604610+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.607845+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:35.608364+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.608391+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.608397+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.609562+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["129f74ad-4a3d-4fcf-a748-0d [...]"] []
[2021-01-11T09:18:35.612107+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:35.612335+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:35.648787+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:18:35.649419+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:35.649433+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.649461+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.649870+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.653475+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:35.654015+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.654043+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.654050+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:35.657018+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:35.657268+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:52.027391+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:18:52.027854+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:52.027864+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.027885+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.028174+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.031858+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:52.032681+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.032711+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.032718+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.037427+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:52.038055+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:52.568033+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:18:52.568642+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:52.568656+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.568712+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.569087+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.572444+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:52.573072+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.573098+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.573103+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:52.575998+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:52.576233+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:53.355833+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"21584fa2-6aaf-4f27-81f8-b20bc547a49d"},"request_uri":"http://localhost/api/users/21584fa2-6aaf-4f27-81f8-b20bc547a49d","method":"GET"} []
[2021-01-11T09:18:53.356320+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:53.356332+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.356358+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.356710+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.359951+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:53.360488+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.360515+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.360521+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.361681+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["21584fa2-6aaf-4f27-81f8-b2 [...]"] []
[2021-01-11T09:18:53.364818+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:53.365166+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:53.402934+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:18:53.403506+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:18:53.403516+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.403540+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.403845+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.406862+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:18:53.407514+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.407542+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.407561+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:18:53.410449+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:18:53.410683+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:32.908236+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:20:32.908612+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:20:32.908622+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.908643+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.908935+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.912173+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:20:32.912779+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.912806+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.912812+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:32.918208+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:32.918908+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:33.436899+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:20:33.437346+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:20:33.437358+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.437383+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.437715+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.441108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:20:33.441651+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.441711+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.441717+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:33.444906+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:33.445156+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:34.206066+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"c88f54a5-dfad-4f8f-9cca-27628a5623a5"},"request_uri":"http://localhost/api/users/c88f54a5-dfad-4f8f-9cca-27628a5623a5","method":"GET"} []
[2021-01-11T09:20:34.206502+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:20:34.206512+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.206536+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.206860+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.210373+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:20:34.210880+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.210906+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.210912+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.212106+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c88f54a5-dfad-4f8f-9cca-27 [...]"] []
[2021-01-11T09:20:34.215064+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:34.220076+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:34.245228+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:20:34.245771+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:20:34.245782+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.245805+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.246122+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.249753+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:20:34.250749+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.250779+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.250785+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:20:34.253988+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:20:34.254235+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:25:51.241772+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:25:51.242773+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:51.244441+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:51.245384+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:51.245973+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:25:51.284869+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:51.287525+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:51.289897+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:51.291766+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:25:51.294361+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:51.296263+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:51.298032+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:51.299969+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:25:51.302373+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:51.303925+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:51.305164+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:51.306315+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:25:51.308011+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:51.308951+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:51.309775+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:51.310367+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:25:51.311560+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:25:51.317480+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:25:51.322480+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:25:51.327038+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:25:51.332052+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:25:51.336933+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:25:51.341526+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:25:51.345303+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:25:51.352698+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:51.363080+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:51.373948+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:51.383055+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:51.393915+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:51.403925+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:25:51.425921+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:25:51.446026+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:25:51.475491+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:25:51.478462+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:25:51.478962+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:25:51.479728+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:25:51.493065+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:25:51.504652+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:25:51.515594+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:25:51.529237+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:25:51.541390+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:25:51.565575+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:25:51.580276+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:25:51.580574+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:25:51.581753+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:25:51.586528+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"c9f57025-d85a-4f26-8861-14 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:25:51+00:00","5":"2021-01-11T09:25:51+00:00"} []
[2021-01-11T09:25:51.587744+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2fc83e02-ce1b-4f98-815e-e5 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:25:51+00:00","6":"2021-01-11T09:25:51+00:00"} []
[2021-01-11T09:25:51.588358+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"916887ba-4b7f-4fd8-ab80-a5 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:25:51+00:00","6":"2021-01-11T09:25:51+00:00"} []
[2021-01-11T09:25:51.588520+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:25:51.589886+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:25:51.589893+00:00] app.INFO: Done. [] []
[2021-01-11T09:25:51.589902+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:25:51.592026+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:25:51.605649+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:25:51.612096+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Brian" [] []
[2021-01-11T09:25:51.622478+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"916887ba-4b7f-4fd8-ab80-a599f095b690"},"request_uri":"http://localhost/api/users/916887ba-4b7f-4fd8-ab80-a599f095b690","method":"DELETE"} []
[2021-01-11T09:25:51.626031+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:25:51.626045+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.626072+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.628415+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.629914+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:25:51.630824+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.630979+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.630986+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:51.647897+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["916887ba-4b7f-4fd8-ab80-a5 [...]"] []
[2021-01-11T09:25:51.657294+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:25:51.659256+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:25:58.141831+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:25:58.143041+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:58.144645+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:58.145417+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:58.145976+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:25:58.147817+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:58.148673+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:58.149820+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:58.150612+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:25:58.152097+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:58.152785+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:58.153443+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:58.153997+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:25:58.154977+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:58.155791+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:58.156469+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:58.157086+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:25:58.158523+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:25:58.159356+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:25:58.160007+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:25:58.160588+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:25:58.162077+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:25:58.168173+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:25:58.173149+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:25:58.178097+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:25:58.182650+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:25:58.187751+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:25:58.192607+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:25:58.197291+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:25:58.204337+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:58.214597+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:58.225084+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:58.234429+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:58.245661+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:25:58.255409+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:25:58.276685+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:25:58.296512+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:25:58.325108+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:25:58.327994+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:25:58.328430+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:25:58.329106+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:25:58.342646+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:25:58.354922+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:25:58.366487+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:25:58.378911+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:25:58.397328+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:25:58.421798+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:25:58.437651+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:25:58.437974+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:25:58.439344+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:25:58.443064+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"f8a83596-d1bd-4f38-9fcd-04 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:25:58+00:00","5":"2021-01-11T09:25:58+00:00"} []
[2021-01-11T09:25:58.444071+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"017440df-e39c-4f8c-9b4d-b6 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:25:58+00:00","6":"2021-01-11T09:25:58+00:00"} []
[2021-01-11T09:25:58.444621+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c319c985-87e8-4fc7-9b1b-fb [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:25:58+00:00","6":"2021-01-11T09:25:58+00:00"} []
[2021-01-11T09:25:58.444844+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:25:58.446383+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:25:58.446391+00:00] app.INFO: Done. [] []
[2021-01-11T09:25:58.446400+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:25:58.448722+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:25:58.462371+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:25:58.469307+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Brian" [] []
[2021-01-11T09:25:58.479025+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"c319c985-87e8-4fc7-9b1b-fb99e037e836"},"request_uri":"http://localhost/api/users/c319c985-87e8-4fc7-9b1b-fb99e037e836","method":"DELETE"} []
[2021-01-11T09:25:58.482528+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:25:58.482547+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.482586+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.484922+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.486430+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:25:58.487319+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.487477+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.487484+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:25:58.503564+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c319c985-87e8-4fc7-9b1b-fb [...]"] []
[2021-01-11T09:25:58.511367+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:25:58.513139+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:26:13.170242+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:26:13.171404+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:13.172933+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:13.173741+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:13.174349+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:26:13.175981+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:13.176633+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:13.177349+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:13.178002+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:26:13.179492+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:13.180540+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:13.181231+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:13.181793+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:26:13.184049+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:13.185220+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:13.186188+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:13.186910+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:26:13.188393+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:13.189114+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:13.189735+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:13.190276+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:26:13.191337+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:26:13.196840+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:26:13.202209+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:26:13.207440+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:26:13.212488+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:26:13.216840+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:26:13.222789+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:26:13.227340+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:26:13.234947+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:13.245787+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:13.256566+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:13.265986+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:13.278001+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:13.287406+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:26:13.308876+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:26:13.330394+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:26:13.359970+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:26:13.362838+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:26:13.363319+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:26:13.363995+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:26:13.377243+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:26:13.388185+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:26:13.400092+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:26:13.413647+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:26:13.425017+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:26:13.450504+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:26:13.466735+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:26:13.467145+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:26:13.468586+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:26:13.472804+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"8825c795-1ffe-4f86-8e6d-22 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:26:13+00:00","5":"2021-01-11T09:26:13+00:00"} []
[2021-01-11T09:26:13.474023+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a1f74e53-e438-4fa0-ab49-c5 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:26:13+00:00","6":"2021-01-11T09:26:13+00:00"} []
[2021-01-11T09:26:13.474673+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"0442cabc-3739-4fa2-b9c5-8a [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:26:13+00:00","6":"2021-01-11T09:26:13+00:00"} []
[2021-01-11T09:26:13.474812+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:26:13.476151+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:26:13.476157+00:00] app.INFO: Done. [] []
[2021-01-11T09:26:13.476166+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:26:13.478132+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:26:13.491768+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:26:13.498216+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Brian" [] []
[2021-01-11T09:26:13.509041+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"0442cabc-3739-4fa2-b9c5-8a37c6ef351d"},"request_uri":"http://localhost/api/users/0442cabc-3739-4fa2-b9c5-8a37c6ef351d","method":"DELETE"} []
[2021-01-11T09:26:13.512391+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:26:13.512405+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.512430+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.514610+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.516324+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:26:13.517414+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.517629+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.517653+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:13.534185+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["0442cabc-3739-4fa2-b9c5-8a [...]"] []
[2021-01-11T09:26:13.541971+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:26:13.543789+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:26:20.401452+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:26:20.403012+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:20.404875+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:20.405739+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:20.406306+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:26:20.407931+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:20.408542+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:20.409281+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:20.409927+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:26:20.411568+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:20.412649+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:20.413414+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:20.414015+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:26:20.415786+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:20.416894+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:20.417713+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:20.418368+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:26:20.419759+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:26:20.420526+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:26:20.421181+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:26:20.421734+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:26:20.423029+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:26:20.428004+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:26:20.433154+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:26:20.438607+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:26:20.445540+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:26:20.449602+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:26:20.454634+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:26:20.459079+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:26:20.466067+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:20.476071+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:20.488024+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:20.497543+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:20.507900+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:26:20.517222+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:26:20.545110+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:26:20.564119+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:26:20.593425+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:26:20.596324+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:26:20.596770+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:26:20.597415+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:26:20.610548+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:26:20.622390+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:26:20.633657+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:26:20.646001+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:26:20.657334+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:26:20.682409+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:26:20.697358+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:26:20.697663+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:26:20.699169+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:26:20.703876+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"2b667d1a-88b9-4fbe-9357-81 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:26:20+00:00","5":"2021-01-11T09:26:20+00:00"} []
[2021-01-11T09:26:20.705115+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a04d40a3-21ec-4fed-9f85-7d [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:26:20+00:00","6":"2021-01-11T09:26:20+00:00"} []
[2021-01-11T09:26:20.705754+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3554e0c0-a659-4fda-998f-81 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:26:20+00:00","6":"2021-01-11T09:26:20+00:00"} []
[2021-01-11T09:26:20.705962+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:26:20.707675+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:26:20.707684+00:00] app.INFO: Done. [] []
[2021-01-11T09:26:20.707694+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:26:20.709812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:26:20.723839+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:26:20.730690+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Brian" [] []
[2021-01-11T09:26:20.742214+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"3554e0c0-a659-4fda-998f-81c7b43f7973"},"request_uri":"http://localhost/api/users/3554e0c0-a659-4fda-998f-81c7b43f7973","method":"DELETE"} []
[2021-01-11T09:26:20.746203+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:26:20.746219+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.746250+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.748446+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.750378+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:26:20.751435+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.751626+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.751634+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:26:20.768526+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["3554e0c0-a659-4fda-998f-81 [...]"] []
[2021-01-11T09:26:20.777172+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:26:20.778979+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:28:39.871742+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:28:39.872751+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:28:39.874309+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:28:39.875100+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:28:39.875877+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:28:39.887815+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:28:39.888674+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:28:39.889524+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:28:39.890299+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:28:39.891958+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:28:39.892647+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:28:39.893233+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:28:39.893802+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:28:39.895155+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:28:39.895935+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:28:39.896748+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:28:39.897412+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:28:39.898853+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:28:39.900657+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:28:39.901857+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:28:39.902815+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:28:39.904497+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:28:39.910144+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:28:39.914605+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:28:39.920127+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:28:39.925044+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:28:39.929256+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:28:39.934276+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:28:39.938352+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:28:39.945115+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:28:39.954928+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:28:39.965556+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:28:39.975253+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:28:39.986710+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:28:39.995954+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:28:40.016707+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:28:40.037051+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:28:40.066292+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:28:40.069313+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:28:40.069766+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:28:40.070448+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:28:40.083206+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:28:40.094222+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:28:40.105895+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:28:40.120654+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:28:40.131450+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:28:40.156401+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:28:40.172562+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:28:40.172903+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:28:40.174189+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:28:40.178215+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"d5b42bb5-0796-4f76-ac24-1a [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:28:40+00:00","5":"2021-01-11T09:28:40+00:00"} []
[2021-01-11T09:28:40.179275+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"31d00a32-0545-4fe4-8845-22 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:28:40+00:00","6":"2021-01-11T09:28:40+00:00"} []
[2021-01-11T09:28:40.179945+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8d74b230-393d-4ffa-86ef-4b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:28:40+00:00","6":"2021-01-11T09:28:40+00:00"} []
[2021-01-11T09:28:40.180170+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:28:40.197005+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:28:40.197018+00:00] app.INFO: Done. [] []
[2021-01-11T09:28:40.197028+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:28:40.199992+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:28:40.213225+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:28:40.220437+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:28:40.229960+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"d5b42bb5-0796-4f76-ac24-1a9db005ed03"},"request_uri":"http://localhost/api/products/d5b42bb5-0796-4f76-ac24-1a9db005ed03","method":"DELETE"} []
[2021-01-11T09:28:40.234330+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:28:40.234346+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.234380+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.236488+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.237748+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:28:40.238610+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.238801+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.238808+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:28:40.255581+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["d5b42bb5-0796-4f76-ac24-1a [...]"] []
[2021-01-11T09:28:40.263911+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:28:40.266415+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:39:22.087163+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:39:22.088371+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:39:22.089985+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:39:22.090730+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:39:22.091316+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:39:22.093109+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:39:22.093823+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:39:22.094551+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:39:22.095253+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:39:22.096744+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:39:22.097587+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:39:22.098453+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:39:22.099218+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:39:22.100792+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:39:22.101798+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:39:22.102600+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:39:22.103304+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:39:22.104725+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:39:22.105415+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:39:22.106119+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:39:22.106733+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:39:22.108377+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:39:22.113797+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:39:22.118687+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:39:22.123564+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:39:22.128221+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:39:22.133425+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:39:22.138418+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:39:22.142874+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:39:22.155328+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:39:22.165272+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:39:22.175902+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:39:22.185777+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:39:22.196587+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:39:22.205885+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:39:22.227271+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:39:22.247953+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:39:22.277245+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:39:22.280475+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:39:22.281005+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:39:22.281838+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:39:22.294247+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:39:22.305617+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:39:22.317402+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:39:22.330985+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:39:22.342392+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:39:22.367193+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:39:22.383264+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:39:22.383651+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:39:22.384964+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:39:22.388947+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"44d056da-1a88-4f4a-8602-4e [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:39:22+00:00","5":"2021-01-11T09:39:22+00:00"} []
[2021-01-11T09:39:22.390234+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"51ba9f9b-4adb-4feb-9a2c-24 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:39:22+00:00","5":"2021-01-11T09:39:22+00:00","6":"44d056da-1a88-4f4a-8602-4e [...]"} []
[2021-01-11T09:39:22.391056+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"770e0471-1e38-4fe6-90c7-b4 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:39:22+00:00","6":"2021-01-11T09:39:22+00:00"} []
[2021-01-11T09:39:22.391630+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"464d0979-1847-4f2b-87c2-5b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:39:22+00:00","6":"2021-01-11T09:39:22+00:00"} []
[2021-01-11T09:39:22.391778+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:39:22.393488+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:39:22.393496+00:00] app.INFO: Done. [] []
[2021-01-11T09:39:22.393505+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:39:22.395534+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:39:22.410375+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:39:22.417228+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:39:22.427052+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:39:22.434249+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:39:22.434265+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.434300+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.437394+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.439767+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:39:22.440791+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.441151+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.441159+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:39:22.476428+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Invalid IRI "44d056da-1a88-4f4a-8602-4ecf75099215"." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 431 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Invalid IRI \"44d056da-1a88-4f4a-8602-4ecf75099215\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:431)\n[previous exception] [object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): No route matches \"44d056da-1a88-4f4a-8602-4ecf75099215\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:77)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/44d056da-1a88-4f4a-8602-4ecf75099215/\". at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-01-11T09:40:11.952558+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:40:11.953625+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:11.955264+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:11.956132+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:11.956765+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:40:11.958301+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:11.958878+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:11.959628+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:11.960326+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:40:11.961680+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:11.962391+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:11.963028+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:11.963588+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:40:11.964953+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:11.966023+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:11.967008+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:11.967829+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:40:11.969271+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:11.970039+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:11.970709+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:11.971290+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:40:11.972656+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:40:11.978232+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:40:11.983206+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:40:11.987707+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:40:11.992662+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:40:11.996529+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:40:12.001974+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:40:12.006624+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:40:12.013066+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:12.024463+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:12.035005+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:12.044490+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:12.054673+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:12.063455+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:40:12.084959+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:40:12.104519+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:40:12.140075+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:40:12.143039+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:40:12.143561+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:40:12.144183+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:40:12.158227+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:40:12.169147+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:40:12.180371+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:40:12.193894+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:40:12.205441+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:40:12.229744+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:40:12.245683+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:40:12.246130+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:40:12.247723+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:40:12.252088+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"5679758c-32d5-4fee-a6c8-eb [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:40:12+00:00","5":"2021-01-11T09:40:12+00:00"} []
[2021-01-11T09:40:12.253422+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"a817efa7-e9ef-4f2b-a3d2-44 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:40:12+00:00","5":"2021-01-11T09:40:12+00:00","6":"5679758c-32d5-4fee-a6c8-eb [...]"} []
[2021-01-11T09:40:12.254178+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c4741c0c-a850-4f35-9f09-36 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:40:12+00:00","6":"2021-01-11T09:40:12+00:00"} []
[2021-01-11T09:40:12.254751+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2a90d209-f5fb-4f95-9465-9e [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:40:12+00:00","6":"2021-01-11T09:40:12+00:00"} []
[2021-01-11T09:40:12.254937+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:40:12.256090+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:40:12.256097+00:00] app.INFO: Done. [] []
[2021-01-11T09:40:12.256106+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:40:12.258126+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:40:12.272009+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:40:12.278409+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:40:12.289160+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:40:12.292645+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:40:12.292658+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.292687+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.294786+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.296179+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:40:12.297918+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.298178+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.298200+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:12.308830+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Invalid IRI "5679758c-32d5-4fee-a6c8-eb898102d598"." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 431 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Invalid IRI \"5679758c-32d5-4fee-a6c8-eb898102d598\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:431)\n[previous exception] [object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): No route matches \"5679758c-32d5-4fee-a6c8-eb898102d598\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:77)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/5679758c-32d5-4fee-a6c8-eb898102d598/\". at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-01-11T09:40:20.805654+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:40:20.806896+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:20.808441+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:20.809178+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:20.809790+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:40:20.821780+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:20.822617+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:20.823588+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:20.824463+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:40:20.826093+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:20.826859+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:20.827513+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:20.828208+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:40:20.829610+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:20.830649+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:20.831824+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:20.832539+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:40:20.833820+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:40:20.834545+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:40:20.835215+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:40:20.835817+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:40:20.837183+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:40:20.842083+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:40:20.846487+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:40:20.852069+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:40:20.856739+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:40:20.861183+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:40:20.865594+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:40:20.870540+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:40:20.877352+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:20.886651+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:20.897129+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:20.906557+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:20.917209+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:40:20.926029+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:40:20.947820+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:40:20.969321+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:40:20.998255+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:40:21.001580+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:40:21.002036+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:40:21.002681+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:40:21.015311+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:40:21.026681+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:40:21.038387+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:40:21.052094+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:40:21.062752+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:40:21.087901+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:40:21.103662+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:40:21.104141+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:40:21.105331+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:40:21.109187+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"71abaca9-16ab-4f21-a87b-40 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:40:21+00:00","5":"2021-01-11T09:40:21+00:00"} []
[2021-01-11T09:40:21.110403+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"098a0453-188b-4ffe-b2eb-52 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:40:21+00:00","5":"2021-01-11T09:40:21+00:00","6":"71abaca9-16ab-4f21-a87b-40 [...]"} []
[2021-01-11T09:40:21.111187+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3d57ee8c-84ea-4f5c-a20f-f6 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:40:21+00:00","6":"2021-01-11T09:40:21+00:00"} []
[2021-01-11T09:40:21.111882+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2c1c42bb-271a-4f2b-8053-65 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:40:21+00:00","6":"2021-01-11T09:40:21+00:00"} []
[2021-01-11T09:40:21.112196+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:40:21.113882+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:40:21.113890+00:00] app.INFO: Done. [] []
[2021-01-11T09:40:21.113898+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:40:21.116746+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:40:21.131700+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:40:21.138803+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:40:21.150387+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:40:21.154137+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:40:21.154155+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.154194+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.156513+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.157852+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:40:21.158827+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.159025+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.159034+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:40:21.170694+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Invalid IRI "71abaca9-16ab-4f21-a87b-40e8f3042763"." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 431 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Invalid IRI \"71abaca9-16ab-4f21-a87b-40e8f3042763\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:431)\n[previous exception] [object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): No route matches \"71abaca9-16ab-4f21-a87b-40e8f3042763\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:77)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/71abaca9-16ab-4f21-a87b-40e8f3042763/\". at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-01-11T09:43:15.181787+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:43:15.183222+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:43:15.184932+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:43:15.185765+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:43:15.186467+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:43:15.198639+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:43:15.199993+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:43:15.201166+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:43:15.201977+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:43:15.203504+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:43:15.204228+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:43:15.204879+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:43:15.205429+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:43:15.206677+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:43:15.207532+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:43:15.208300+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:43:15.208973+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:43:15.210448+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:43:15.211357+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:43:15.212206+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:43:15.213130+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:43:15.214788+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:43:15.221001+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:43:15.226147+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:43:15.231260+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:43:15.236346+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:43:15.240620+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:43:15.244476+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:43:15.248791+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:43:15.255923+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:43:15.266337+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:43:15.277624+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:43:15.287539+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:43:15.299310+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:43:15.308973+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:43:15.328816+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:43:15.349937+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:43:15.379533+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:43:15.382780+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:43:15.383308+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:43:15.384110+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:43:15.396981+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:43:15.408351+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:43:15.420811+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:43:15.433939+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:43:15.445350+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:43:15.470431+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:43:15.486650+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:43:15.487015+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:43:15.488383+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:43:15.492175+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"29f9ab8b-cfe3-4fc7-9f99-3c [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:43:15+00:00","5":"2021-01-11T09:43:15+00:00"} []
[2021-01-11T09:43:15.493420+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"d447c1b4-d311-4fbe-a744-76 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:43:15+00:00","5":"2021-01-11T09:43:15+00:00","6":"29f9ab8b-cfe3-4fc7-9f99-3c [...]"} []
[2021-01-11T09:43:15.494201+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"96c0da6d-c9a3-4f89-bfb6-6e [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:43:15+00:00","6":"2021-01-11T09:43:15+00:00"} []
[2021-01-11T09:43:15.494716+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"2a7f015c-432d-4f84-8489-fa [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:43:15+00:00","6":"2021-01-11T09:43:15+00:00"} []
[2021-01-11T09:43:15.494856+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:43:15.496158+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:43:15.496168+00:00] app.INFO: Done. [] []
[2021-01-11T09:43:15.496182+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:43:15.498854+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:43:15.511917+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:43:15.518949+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:43:15.528768+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:43:15.533047+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:43:15.533063+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.533092+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.535063+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.536477+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:43:15.537345+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.537509+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.537516+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:43:15.555737+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["29f9ab8b-cfe3-4fc7-9f99-3c [...]"] []
[2021-01-11T09:43:15.565574+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:43:15.567730+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:36.546028+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:44:36.546631+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:36.546644+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.546669+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.547031+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.550935+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:36.551752+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.551779+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.551786+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:36.556002+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:36.556810+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:37.166850+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"8d9f1217-b6cb-4fe1-8d15-0bfc5ccf9dda"},"request_uri":"http://localhost/api/products/8d9f1217-b6cb-4fe1-8d15-0bfc5ccf9dda","method":"DELETE"} []
[2021-01-11T09:44:37.167359+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:37.167370+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.167397+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.167786+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.170982+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:37.171641+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.171668+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.171674+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:37.173840+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["8d9f1217-b6cb-4fe1-8d15-0b [...]"] []
[2021-01-11T09:44:37.178234+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:37.178457+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:38.095871+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:44:38.096368+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:38.096391+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.096415+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.096794+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.100984+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:38.101740+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.101767+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.101773+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.104649+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["10a8fa76-aac8-4f61-be6e-78 [...]"] []
[2021-01-11T09:44:38.108457+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:38.108684+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:38.552431+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:44:38.552854+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:38.552866+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.552891+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.553215+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.556390+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:38.556905+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.556931+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.556937+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:38.559966+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:38.560206+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.302115+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"efea5aee-9a3a-4fdd-85ee-abc185c801fe"},"request_uri":"http://localhost/api/users/efea5aee-9a3a-4fdd-85ee-abc185c801fe","method":"DELETE"} []
[2021-01-11T09:44:39.302539+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:39.302549+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.302574+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.302899+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.306170+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:39.306759+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.306786+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.306792+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.308173+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["efea5aee-9a3a-4fdd-85ee-ab [...]"] []
[2021-01-11T09:44:39.310716+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.310962+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.864664+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"9a69c040-a231-4ff0-aa1c-ce8acb7d95cf"},"request_uri":"http://localhost/api/users/9a69c040-a231-4ff0-aa1c-ce8acb7d95cf","method":"GET"} []
[2021-01-11T09:44:39.865202+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:39.865214+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.865246+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.865740+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.869308+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:39.869904+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.869934+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.869940+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.871185+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["9a69c040-a231-4ff0-aa1c-ce [...]"] []
[2021-01-11T09:44:39.873733+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.873981+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.906659+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:44:39.907155+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:44:39.907166+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.907190+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.907539+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.910373+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:44:39.910887+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.910913+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.910919+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:44:39.914139+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:44:39.914468+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:08.335369+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:52:08.335967+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:08.335980+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.336005+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.336402+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.340533+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:08.341187+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.341214+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.341220+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.346773+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:08.347840+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:08.994104+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"320f712a-df97-4fbe-a0f2-e32837ff0eae"},"request_uri":"http://localhost/api/products/320f712a-df97-4fbe-a0f2-e32837ff0eae","method":"DELETE"} []
[2021-01-11T09:52:08.994637+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:08.994649+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.994685+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.995080+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.998805+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:08.999381+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.999408+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:08.999414+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:09.001877+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["320f712a-df97-4fbe-a0f2-e3 [...]"] []
[2021-01-11T09:52:09.005908+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:09.006125+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:10.022352+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:52:10.022860+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:10.022874+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.022906+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.023342+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.027464+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:10.028157+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.028189+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.028197+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.033827+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["4e156afb-90db-4fcb-8f61-12 [...]"] []
[2021-01-11T09:52:10.040816+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:10.041168+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:10.855142+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:52:10.855719+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:10.855732+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.855758+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.856168+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.860135+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:10.860892+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.860934+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.860944+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:10.866167+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:10.866489+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:11.699122+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"543ca610-2f57-4f22-b9e6-4d901f167b35"},"request_uri":"http://localhost/api/users/543ca610-2f57-4f22-b9e6-4d901f167b35","method":"DELETE"} []
[2021-01-11T09:52:11.699725+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:11.699738+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.699777+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.700127+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.704075+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:11.704787+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.704818+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.704826+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:11.706180+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["543ca610-2f57-4f22-b9e6-4d [...]"] []
[2021-01-11T09:52:11.709259+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:11.719807+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:12.357024+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"a86661f9-503f-4f63-8107-78b763192f63"},"request_uri":"http://localhost/api/users/a86661f9-503f-4f63-8107-78b763192f63","method":"GET"} []
[2021-01-11T09:52:12.357500+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:12.357514+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.357548+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.358000+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.361465+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:12.362774+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.362822+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.362832+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.364237+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["a86661f9-503f-4f63-8107-78 [...]"] []
[2021-01-11T09:52:12.367155+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:12.367475+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:12.393979+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:52:12.394524+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:12.394539+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.394575+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.394943+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.399468+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:12.400148+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.400177+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.400184+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:12.403346+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:12.403594+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:18.614316+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:52:18.614805+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:18.614817+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.614844+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.615272+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.618975+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:18.619710+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.619739+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.619745+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:18.624131+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:18.624806+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:19.285078+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"57ae51b2-512c-4f41-87b9-ffac84dc16f1"},"request_uri":"http://localhost/api/products/57ae51b2-512c-4f41-87b9-ffac84dc16f1","method":"DELETE"} []
[2021-01-11T09:52:19.285558+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:19.285569+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.285595+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.285930+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.289164+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:19.289842+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.289871+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.289878+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:19.292279+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["57ae51b2-512c-4f41-87b9-ff [...]"] []
[2021-01-11T09:52:19.296985+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:19.297234+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:20.296502+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:52:20.297256+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:20.297275+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.297312+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.297921+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.302647+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:20.303263+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.303292+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.303299+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:20.306134+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["4e9cb288-ea3e-4fec-9e97-73 [...]"] []
[2021-01-11T09:52:20.310084+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:20.310378+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:21.068177+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:52:21.068861+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:21.068880+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.068949+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.069395+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.072802+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:21.073363+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.073387+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.073393+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.076387+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:21.076625+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:21.873702+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"0e6efa62-ab69-4f79-b870-0ed6f5bfbbea"},"request_uri":"http://localhost/api/users/0e6efa62-ab69-4f79-b870-0ed6f5bfbbea","method":"DELETE"} []
[2021-01-11T09:52:21.874325+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:21.874344+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.874377+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.874839+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.879963+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:21.880876+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.880906+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.880912+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:21.882297+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["0e6efa62-ab69-4f79-b870-0e [...]"] []
[2021-01-11T09:52:21.885159+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:21.891346+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:22.472339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"61fbf47c-1e1a-4f9b-9514-c1b7fb00c4a9"},"request_uri":"http://localhost/api/users/61fbf47c-1e1a-4f9b-9514-c1b7fb00c4a9","method":"GET"} []
[2021-01-11T09:52:22.472772+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:22.472783+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.472807+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.473131+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.476251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:22.476794+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.476821+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.476827+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.478103+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["61fbf47c-1e1a-4f9b-9514-c1 [...]"] []
[2021-01-11T09:52:22.481559+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:22.481848+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:22.508796+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:52:22.509280+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:52:22.509292+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.509316+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.509631+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.513192+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:52:22.514238+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.514275+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.514284+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:52:22.518137+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:52:22.518412+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:05.191946+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:54:05.192394+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:05.192404+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.192426+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.192727+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.196722+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:05.197407+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.197444+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.197450+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.202155+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:05.202789+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:05.811131+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"d2176efc-f9e0-4fe4-a5f0-637fe9b1548a"},"request_uri":"http://localhost/api/products/d2176efc-f9e0-4fe4-a5f0-637fe9b1548a","method":"DELETE"} []
[2021-01-11T09:54:05.811548+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:05.811559+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.811583+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.811907+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.815776+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:05.816538+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.816566+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.816573+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:05.818933+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["d2176efc-f9e0-4fe4-a5f0-63 [...]"] []
[2021-01-11T09:54:05.822827+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:05.823062+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:06.742571+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:54:06.742985+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:06.742995+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.743017+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.743341+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.746446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:06.747137+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.747180+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.747187+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:06.750339+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["90338577-8ebf-4fc4-9d28-e4 [...]"] []
[2021-01-11T09:54:06.754457+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:06.754682+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:07.680948+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"de13d431-fa1d-4f1f-a291-ca0e543b4c47"},"request_uri":"http://localhost/api/services/de13d431-fa1d-4f1f-a291-ca0e543b4c47","method":"DELETE"} []
[2021-01-11T09:54:07.681564+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:07.681576+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.681605+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.681979+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.685656+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:07.686291+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.686319+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.686325+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:07.690348+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["de13d431-fa1d-4f1f-a291-ca [...]"] []
[2021-01-11T09:54:07.695051+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:07.695373+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:08.185272+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:54:08.185687+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:08.185697+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.185721+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.186071+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.189283+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:08.189856+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.189890+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.189896+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:08.193323+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:08.193619+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.008226+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"ce620108-6bb8-4f5f-8e98-3e876b7db035"},"request_uri":"http://localhost/api/users/ce620108-6bb8-4f5f-8e98-3e876b7db035","method":"DELETE"} []
[2021-01-11T09:54:09.009025+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:09.009049+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.009096+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.009671+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.015311+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:09.016433+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.016490+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.016501+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.018733+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["ce620108-6bb8-4f5f-8e98-3e [...]"] []
[2021-01-11T09:54:09.022933+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.023363+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.623090+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"b0f71a30-0194-4feb-95f6-c8d2cc91a6c0"},"request_uri":"http://localhost/api/users/b0f71a30-0194-4feb-95f6-c8d2cc91a6c0","method":"GET"} []
[2021-01-11T09:54:09.623567+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:09.623580+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.623606+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.623948+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.627152+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:09.627714+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.627739+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.627745+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.629270+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["b0f71a30-0194-4feb-95f6-c8 [...]"] []
[2021-01-11T09:54:09.633048+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.633328+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.660262+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:54:09.660784+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:09.660796+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.660822+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.661155+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.665717+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:09.666636+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.666669+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.666675+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:09.669884+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:09.670154+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:14.118612+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:54:14.119034+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:14.119051+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.119086+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.119466+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.123598+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:14.124360+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.124394+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.124400+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.129070+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:14.129823+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:14.733809+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"e67cbc8a-8f6c-4fae-ba1f-9334f46d2335"},"request_uri":"http://localhost/api/products/e67cbc8a-8f6c-4fae-ba1f-9334f46d2335","method":"DELETE"} []
[2021-01-11T09:54:14.734234+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:14.734244+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.734268+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.734598+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.737798+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:14.738285+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.738311+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.738316+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:14.740517+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["e67cbc8a-8f6c-4fae-ba1f-93 [...]"] []
[2021-01-11T09:54:14.744253+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:14.744467+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:15.670508+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:54:15.670905+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:15.670915+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.670938+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.671265+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.674372+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:15.674885+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.674911+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.674917+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:15.677735+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["332051ac-1440-4f81-9ceb-cd [...]"] []
[2021-01-11T09:54:15.682544+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:15.682803+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:16.551158+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"708cd349-d9d1-4faa-a649-b609c959de36"},"request_uri":"http://localhost/api/services/708cd349-d9d1-4faa-a649-b609c959de36","method":"DELETE"} []
[2021-01-11T09:54:16.551756+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:16.551773+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.551797+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.552127+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.555325+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:16.555863+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.555889+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.555894+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:16.559454+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["708cd349-d9d1-4faa-a649-b6 [...]"] []
[2021-01-11T09:54:16.564130+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:16.564625+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:17.012811+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:54:17.013249+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:17.013261+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.013288+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.013634+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.017205+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:17.017852+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.017881+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.017888+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.021727+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:17.021996+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:17.774928+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"540ff995-3ff4-4f27-87a2-1286bd6f939f"},"request_uri":"http://localhost/api/users/540ff995-3ff4-4f27-87a2-1286bd6f939f","method":"DELETE"} []
[2021-01-11T09:54:17.775369+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:17.775380+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.775403+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.775729+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.779222+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:17.779872+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.779900+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.779907+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:17.781422+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["540ff995-3ff4-4f27-87a2-12 [...]"] []
[2021-01-11T09:54:17.784587+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:17.784867+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:18.379412+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"08a74176-4e6e-4f7e-a9b9-fb5592d17bf0"},"request_uri":"http://localhost/api/users/08a74176-4e6e-4f7e-a9b9-fb5592d17bf0","method":"GET"} []
[2021-01-11T09:54:18.380003+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:18.380020+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.380049+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.380435+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.389797+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:18.390406+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.390434+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.390441+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.391804+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["08a74176-4e6e-4f7e-a9b9-fb [...]"] []
[2021-01-11T09:54:18.394456+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:18.394773+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:18.420876+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:54:18.421308+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:54:18.421318+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.421340+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.421639+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.424869+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:54:18.425375+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.425401+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.425432+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:54:18.428354+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:54:18.428674+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:19.756153+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:58:19.757748+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:19.759912+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:19.760868+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:19.761534+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:58:19.763130+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:19.763852+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:19.764598+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:19.765313+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:58:19.766752+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:19.767444+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:19.768164+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:19.768798+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:58:19.770033+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:19.770724+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:19.771459+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:19.772119+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:58:19.773542+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:19.774324+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:19.775336+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:19.776830+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:58:19.779536+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:58:19.785229+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:58:19.789770+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:58:19.795363+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:58:19.800394+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:58:19.804693+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:58:19.809440+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:58:19.815021+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:58:19.822061+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:19.833836+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:19.851273+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:19.860610+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:19.871316+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:19.880663+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:58:19.901615+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:19.923001+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:19.963144+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:58:19.966256+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:58:19.966728+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:58:19.967398+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:58:19.981117+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:58:19.991409+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:58:20.003202+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:58:20.016815+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:58:20.028598+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:58:20.054823+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:58:20.073603+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:58:20.074109+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:58:20.076115+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:58:20.080734+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"d808e37d-8350-4f7b-956f-c9 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:58:20+00:00","5":"2021-01-11T09:58:20+00:00"} []
[2021-01-11T09:58:20.082010+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"1d6471a4-da4c-4f24-bb1b-d7 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:58:20+00:00","5":"2021-01-11T09:58:20+00:00","6":"d808e37d-8350-4f7b-956f-c9 [...]"} []
[2021-01-11T09:58:20.082778+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7c0b9f23-d9d3-4f25-90a1-87 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:58:20+00:00","6":"2021-01-11T09:58:20+00:00"} []
[2021-01-11T09:58:20.083411+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c4764595-4d82-4f1c-a99f-3b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:58:20+00:00","6":"2021-01-11T09:58:20+00:00"} []
[2021-01-11T09:58:20.083686+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:58:20.085462+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:58:20.085471+00:00] app.INFO: Done. [] []
[2021-01-11T09:58:20.085480+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:58:20.087522+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:58:20.101613+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:20.108364+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Peter" [] []
[2021-01-11T09:58:20.118584+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"7c0b9f23-d9d3-4f25-90a1-87ff080ce529"},"request_uri":"http://localhost/api/users/7c0b9f23-d9d3-4f25-90a1-87ff080ce529","method":"PUT"} []
[2021-01-11T09:58:20.121959+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:58:20.121974+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.122002+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.124324+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.126099+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:20.126979+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.127185+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.127194+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:20.142755+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["7c0b9f23-d9d3-4f25-90a1-87 [...]"] []
[2021-01-11T09:58:20.151917+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:20.153640+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:42.759278+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:58:42.760600+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:42.762181+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:42.763025+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:42.763812+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:58:42.765340+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:42.765971+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:42.766665+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:42.767373+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:58:42.768861+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:42.769596+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:42.770247+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:42.770805+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:58:42.772587+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:42.773802+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:42.774978+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:42.775822+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:58:42.777310+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:42.778082+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:42.778709+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:42.779286+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:58:42.780701+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:58:42.785812+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:58:42.790840+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:58:42.795452+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:58:42.799866+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:58:42.804754+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:58:42.809760+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:58:42.814320+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:58:42.820622+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:42.831424+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:42.844877+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:42.853960+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:42.865282+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:42.875263+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:58:42.896740+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:42.920102+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:42.958558+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:58:42.961698+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:58:42.962147+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:58:42.962852+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:58:42.980121+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:58:42.991688+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:58:43.002837+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:58:43.017089+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:58:43.028943+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:58:43.053904+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:58:43.070372+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:58:43.070722+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:58:43.072107+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:58:43.076867+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"d8be9f28-96e5-4f96-8b8e-42 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:58:43+00:00","5":"2021-01-11T09:58:43+00:00"} []
[2021-01-11T09:58:43.078254+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"8e7eeda8-bc89-4f30-be98-2d [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:58:43+00:00","5":"2021-01-11T09:58:43+00:00","6":"d8be9f28-96e5-4f96-8b8e-42 [...]"} []
[2021-01-11T09:58:43.079046+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"cc1b84cc-69ff-4fa5-b868-b4 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:58:43+00:00","6":"2021-01-11T09:58:43+00:00"} []
[2021-01-11T09:58:43.079609+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"8680c58f-4b3a-4fc4-aeb9-aa [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:58:43+00:00","6":"2021-01-11T09:58:43+00:00"} []
[2021-01-11T09:58:43.079777+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:58:43.081453+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:58:43.081461+00:00] app.INFO: Done. [] []
[2021-01-11T09:58:43.081469+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:58:43.083699+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:58:43.097367+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:43.104022+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Peter" [] []
[2021-01-11T09:58:43.114579+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"cc1b84cc-69ff-4fa5-b868-b4120c61740f"},"request_uri":"http://localhost/api/users/cc1b84cc-69ff-4fa5-b868-b4120c61740f","method":"PUT"} []
[2021-01-11T09:58:43.118013+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:58:43.118062+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.118102+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.120058+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.121390+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:43.122960+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.123202+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.123211+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:43.139780+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["cc1b84cc-69ff-4fa5-b868-b4 [...]"] []
[2021-01-11T09:58:43.148266+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:43.150124+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:53.279686+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:58:53.280760+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:53.282277+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:53.283026+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:53.283651+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:58:53.285200+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:53.285871+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:53.286644+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:53.287424+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:58:53.289313+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:53.290424+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:53.291431+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:53.292452+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:58:53.294003+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:53.294804+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:53.295578+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:53.296191+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:58:53.297478+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:58:53.298195+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:58:53.298813+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:58:53.299367+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:58:53.300763+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:58:53.306084+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:58:53.312892+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:58:53.318193+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:58:53.323194+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:58:53.327857+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:58:53.331892+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:58:53.336116+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:58:53.342828+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:53.353271+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:53.364954+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:53.375622+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:53.393360+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:58:53.402432+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:58:53.423858+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:53.446792+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:58:53.477370+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:58:53.480357+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:58:53.480808+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:58:53.481478+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:58:53.494938+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:58:53.506842+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:58:53.518022+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:58:53.532163+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:58:53.544085+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:58:53.568064+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:58:53.584760+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:58:53.585090+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:58:53.586269+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:58:53.590638+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"7868444e-e4a1-4f88-a55e-21 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:58:53+00:00","5":"2021-01-11T09:58:53+00:00"} []
[2021-01-11T09:58:53.591996+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"f742358e-4bbb-4f9b-b83d-d0 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:58:53+00:00","5":"2021-01-11T09:58:53+00:00","6":"7868444e-e4a1-4f88-a55e-21 [...]"} []
[2021-01-11T09:58:53.592872+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"7a9d9b3c-76b3-4f98-814d-fe [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:58:53+00:00","6":"2021-01-11T09:58:53+00:00"} []
[2021-01-11T09:58:53.593516+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c2c4d479-3006-4fb1-a1fb-ba [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:58:53+00:00","6":"2021-01-11T09:58:53+00:00"} []
[2021-01-11T09:58:53.593698+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:58:53.595284+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:58:53.595292+00:00] app.INFO: Done. [] []
[2021-01-11T09:58:53.595302+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:58:53.597641+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:58:53.611161+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:53.617490+00:00] doctrine.DEBUG: SELECT id FROM user WHERE name = "Peter" [] []
[2021-01-11T09:58:53.628490+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"7a9d9b3c-76b3-4f98-814d-fe012f900532"},"request_uri":"http://localhost/api/users/7a9d9b3c-76b3-4f98-814d-fe012f900532","method":"PUT"} []
[2021-01-11T09:58:53.632359+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:58:53.632375+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.632405+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.634492+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.635925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:58:53.636769+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.637017+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.637026+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:58:53.654702+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["7a9d9b3c-76b3-4f98-814d-fe [...]"] []
[2021-01-11T09:58:53.663960+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:58:53.666043+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:32.853314+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-11T09:59:32.854919+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:59:32.856764+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:59:32.857702+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:59:32.858297+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-11T09:59:32.859805+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:59:32.860431+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:59:32.861164+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:59:32.861916+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-11T09:59:32.863463+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:59:32.864362+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:59:32.865118+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:59:32.865755+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-11T09:59:32.867559+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:59:32.868577+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:59:32.869426+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:59:32.870104+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-11T09:59:32.871610+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-11T09:59:32.872512+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-11T09:59:32.873306+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-11T09:59:32.873859+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-11T09:59:32.875449+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-11T09:59:32.881187+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-11T09:59:32.887016+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-11T09:59:32.893940+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-11T09:59:32.899145+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-11T09:59:32.904500+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-11T09:59:32.909566+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-11T09:59:32.913793+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-11T09:59:32.921117+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:59:32.931346+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:59:32.949973+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:59:32.966283+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:59:32.977949+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-11T09:59:32.987354+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-11T09:59:33.008881+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-11T09:59:33.028377+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-11T09:59:33.056427+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-11T09:59:33.059460+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-11T09:59:33.059900+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-11T09:59:33.060763+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-11T09:59:33.073855+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-11T09:59:33.084999+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-11T09:59:33.096068+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-11T09:59:33.109540+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-11T09:59:33.121475+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-11T09:59:33.146044+00:00] app.INFO: Loading fixtures. [] []
[2021-01-11T09:59:33.163443+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-11T09:59:33.163790+00:00] app.INFO: Flushing objects. [] []
[2021-01-11T09:59:33.165013+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-11T09:59:33.169672+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"f8adaf66-7d17-4f4c-8a62-94 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-11T09:59:33+00:00","5":"2021-01-11T09:59:33+00:00"} []
[2021-01-11T09:59:33.171388+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"b3f2ac3c-15cd-4fc2-a546-45 [...]","2":"TestService","3":"Funcional","4":"2021-01-11T09:59:33+00:00","5":"2021-01-11T09:59:33+00:00","6":"f8adaf66-7d17-4f4c-8a62-94 [...]"} []
[2021-01-11T09:59:33.172480+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"10ef9df3-fb1e-4f5d-91e2-5e [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-11T09:59:33+00:00","6":"2021-01-11T09:59:33+00:00"} []
[2021-01-11T09:59:33.173250+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c7e9b965-fe71-4f3f-8d66-82 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-11T09:59:33+00:00","6":"2021-01-11T09:59:33+00:00"} []
[2021-01-11T09:59:33.173501+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-11T09:59:33.174639+00:00] app.INFO: Post-processing objects. [] []
[2021-01-11T09:59:33.174646+00:00] app.INFO: Done. [] []
[2021-01-11T09:59:33.174654+00:00] app.INFO: fixtures loaded [] []
[2021-01-11T09:59:33.176751+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-11T09:59:33.191101+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:33.198139+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-11T09:59:33.198445+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-11T09:59:33.208666+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"b3f2ac3c-15cd-4fc2-a546-454f099e2744"},"request_uri":"http://localhost/api/services/b3f2ac3c-15cd-4fc2-a546-454f099e2744","method":"PUT"} []
[2021-01-11T09:59:33.212227+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:33.212241+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.212270+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.214324+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.215646+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:33.216934+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.217193+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.217201+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:33.233392+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["b3f2ac3c-15cd-4fc2-a546-45 [...]"] []
[2021-01-11T09:59:33.242638+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:33.244683+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:37.563736+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-11T09:59:37.564156+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:37.564167+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.564189+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.564499+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.568209+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:37.569011+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.569041+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.569048+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:37.573669+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:37.574287+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:38.251852+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"d65c91f6-781c-4f82-8101-da13ce21a32e"},"request_uri":"http://localhost/api/products/d65c91f6-781c-4f82-8101-da13ce21a32e","method":"DELETE"} []
[2021-01-11T09:59:38.252403+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:38.252416+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.252445+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.252956+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.256982+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:38.257636+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.257664+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.257671+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:38.260285+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["d65c91f6-781c-4f82-8101-da [...]"] []
[2021-01-11T09:59:38.264512+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:38.264739+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:39.253421+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-11T09:59:39.253949+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:39.253962+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.253989+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.254385+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.257827+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:39.258590+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.258621+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.258628+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:39.261532+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["59f0e518-0a74-4f95-bd8a-74 [...]"] []
[2021-01-11T09:59:39.265694+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:39.266014+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:40.173695+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"4b0c7cdf-0fe3-4f2e-b98b-b81e13237eb1"},"request_uri":"http://localhost/api/services/4b0c7cdf-0fe3-4f2e-b98b-b81e13237eb1","method":"DELETE"} []
[2021-01-11T09:59:40.174190+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:40.174201+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.174225+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.174548+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.178207+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:40.178872+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.178902+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.178909+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:40.182852+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["4b0c7cdf-0fe3-4f2e-b98b-b8 [...]"] []
[2021-01-11T09:59:40.187936+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:40.188176+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:41.074534+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"2929ffbc-05dd-4f13-8410-46e99fa256d9"},"request_uri":"http://localhost/api/services/2929ffbc-05dd-4f13-8410-46e99fa256d9","method":"PUT"} []
[2021-01-11T09:59:41.074977+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:41.074997+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.075024+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.075412+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.078765+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:41.079318+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.079344+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.079351+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.083078+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2929ffbc-05dd-4f13-8410-46 [...]"] []
[2021-01-11T09:59:41.087810+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:41.088103+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:41.238083+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-11T09:59:41.238527+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:41.238538+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.238563+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.238902+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.242200+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:41.242728+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.242754+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.242760+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:41.245992+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:41.246279+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.069825+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"89939b36-d03e-4fc2-996d-9e3111bc2199"},"request_uri":"http://localhost/api/users/89939b36-d03e-4fc2-996d-9e3111bc2199","method":"DELETE"} []
[2021-01-11T09:59:42.070289+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:42.070301+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.070332+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.070685+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.074431+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:42.074988+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.075019+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.075025+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.076260+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["89939b36-d03e-4fc2-996d-9e [...]"] []
[2021-01-11T09:59:42.079331+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.079628+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.685073+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"c218d32f-b4c9-4fce-99c6-185a5b902a7f"},"request_uri":"http://localhost/api/users/c218d32f-b4c9-4fce-99c6-185a5b902a7f","method":"GET"} []
[2021-01-11T09:59:42.685638+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:42.685650+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.685679+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.686127+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.689930+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:42.690688+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.690718+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.690726+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.692390+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c218d32f-b4c9-4fce-99c6-18 [...]"] []
[2021-01-11T09:59:42.695462+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.695709+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.724635+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-11T09:59:42.725152+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:42.725164+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.725188+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.732275+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.736446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:42.737226+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.737266+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.737275+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:42.741462+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:42.741727+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:43.674608+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"4e71b177-3d37-4f59-aaee-7d819856121f"},"request_uri":"http://localhost/api/users/4e71b177-3d37-4f59-aaee-7d819856121f","method":"PUT"} []
[2021-01-11T09:59:43.675014+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-11T09:59:43.675025+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.675048+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.675377+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.678470+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-11T09:59:43.678979+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.679005+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.679011+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-11T09:59:43.680188+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4e71b177-3d37-4f59-aaee-7d [...]"] []
[2021-01-11T09:59:43.682967+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-11T09:59:43.683286+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:00:12.942533+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T07:00:12.945939+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:00:12.948361+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:00:12.950005+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:00:12.951349+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T07:00:12.953979+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:00:12.954787+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:00:12.955670+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:00:12.956412+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T07:00:12.958051+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:00:12.958856+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:00:12.959536+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:00:12.960102+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T07:00:12.962808+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:00:12.963730+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:00:12.964545+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:00:12.965224+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T07:00:12.966676+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:00:12.967405+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:00:12.968027+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:00:12.968613+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T07:00:12.970463+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T07:00:12.978822+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T07:00:12.983368+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T07:00:12.989294+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T07:00:12.993721+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T07:00:12.998587+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T07:00:13.003000+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T07:00:13.006738+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T07:00:13.013555+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:00:13.023152+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:00:13.034304+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:00:13.043895+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:00:13.054536+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:00:13.064133+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T07:00:13.084344+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T07:00:13.105285+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T07:00:13.137094+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T07:00:13.141363+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T07:00:13.141998+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T07:00:13.142759+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T07:00:13.166625+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T07:00:13.184510+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T07:00:13.200858+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T07:00:13.213446+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T07:00:13.225406+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T07:00:13.265339+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T07:00:13.285805+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T07:00:13.286425+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T07:00:13.288046+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T07:00:13.293136+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"bba8e22f-9007-4f4b-b72d-65 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T07:00:13+00:00","7":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.294342+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"39d18e32-c160-4fa7-8a07-49 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T07:00:13+00:00","7":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.294807+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"6926b757-9980-4f1b-ad32-da [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T07:00:13+00:00","7":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.295103+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"9545da51-bf7c-4fbd-a423-9c [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T07:00:13+00:00","5":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.296111+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"615976f4-9076-4f49-8216-f5 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T07:00:13+00:00","5":"2021-01-12T07:00:13+00:00","6":"9545da51-bf7c-4fbd-a423-9c [...]"} []
[2021-01-12T07:00:13.296840+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"85319ef4-6b36-4feb-babb-2b [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T07:00:13+00:00","6":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.297398+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"13754908-040d-4ff9-a213-26 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T07:00:13+00:00","6":"2021-01-12T07:00:13+00:00"} []
[2021-01-12T07:00:13.297552+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T07:00:13.298861+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T07:00:13.298868+00:00] app.INFO: Done. [] []
[2021-01-12T07:00:13.298877+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T07:00:13.302360+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T07:00:13.319029+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:00:13.337921+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T07:00:13.345057+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:00:13.345071+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.345097+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.348631+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.351030+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:00:13.352101+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.352438+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.352445+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:00:13.375574+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:00:13.377912+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:34.759247+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T07:35:34.759577+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:34.759594+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.759631+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.760215+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.760353+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:34.761160+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.761199+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.761208+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:34.765743+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:34.766612+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:35.461312+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"ae79c3d0-1d47-4fd1-84a3-014a7e45478f"},"request_uri":"http://localhost/api/products/ae79c3d0-1d47-4fd1-84a3-014a7e45478f","method":"DELETE"} []
[2021-01-12T07:35:35.461867+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:35.461879+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.461905+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.462319+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.465920+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:35.466447+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.466472+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.466477+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:35.469066+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["ae79c3d0-1d47-4fd1-84a3-01 [...]"] []
[2021-01-12T07:35:35.473689+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:35.474018+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:36.749637+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T07:35:36.750160+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:36.750170+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.750195+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.750527+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.754414+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:36.755156+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.755187+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.755194+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:36.759385+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["69d74d8a-97c4-4f41-927c-d3 [...]"] []
[2021-01-12T07:35:36.764282+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:36.764527+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:37.771506+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"129a920c-4a7e-4f82-9ce4-3c4edfd2b702"},"request_uri":"http://localhost/api/services/129a920c-4a7e-4f82-9ce4-3c4edfd2b702","method":"DELETE"} []
[2021-01-12T07:35:37.772320+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:37.772337+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.772374+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.772876+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.777909+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:37.778480+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.778508+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.778514+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:37.788229+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["129a920c-4a7e-4f82-9ce4-3c [...]"] []
[2021-01-12T07:35:37.794155+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:37.794423+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:38.968879+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"e1a3ccd2-a134-4f37-827a-6c64c1b2b3ea"},"request_uri":"http://localhost/api/services/e1a3ccd2-a134-4f37-827a-6c64c1b2b3ea","method":"PUT"} []
[2021-01-12T07:35:38.969469+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:38.969480+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.969517+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.969879+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.974317+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:38.975459+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.975567+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.975586+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:38.979714+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["e1a3ccd2-a134-4f37-827a-6c [...]"] []
[2021-01-12T07:35:38.984103+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:38.984341+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:39.202832+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T07:35:39.203441+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:39.203455+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.203485+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.203934+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.208134+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:39.208972+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.209011+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.209017+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:39.213332+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:39.213634+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.047477+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"f9508cd4-a1db-4f0e-8195-b71e9f5576fd"},"request_uri":"http://localhost/api/users/f9508cd4-a1db-4f0e-8195-b71e9f5576fd","method":"DELETE"} []
[2021-01-12T07:35:40.048008+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:40.048020+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.048048+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.048429+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.051664+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:40.052195+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.052222+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.052229+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.053695+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["f9508cd4-a1db-4f0e-8195-b7 [...]"] []
[2021-01-12T07:35:40.057694+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.058098+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.753334+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"172235ae-7756-4fb5-aec8-096f6efb983a"},"request_uri":"http://localhost/api/users/172235ae-7756-4fb5-aec8-096f6efb983a","method":"GET"} []
[2021-01-12T07:35:40.754029+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:40.754044+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.754078+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.754444+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.759362+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:40.760161+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.760191+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.760198+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.761603+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["172235ae-7756-4fb5-aec8-09 [...]"] []
[2021-01-12T07:35:40.764516+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.764743+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.873450+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T07:35:40.874561+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:40.874584+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.874635+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.875205+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.879675+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:40.880231+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.880259+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.880265+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:40.883456+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:40.883770+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:41.940346+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"3cf5c3e4-2c54-4f81-afb6-08a0b47fb2e8"},"request_uri":"http://localhost/api/users/3cf5c3e4-2c54-4f81-afb6-08a0b47fb2e8","method":"PUT"} []
[2021-01-12T07:35:41.941144+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:41.941160+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.941197+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.941969+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.945708+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:41.946276+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.946303+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.946310+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:41.947629+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["3cf5c3e4-2c54-4f81-afb6-08 [...]"] []
[2021-01-12T07:35:41.950376+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:41.950641+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:52.229293+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T07:35:52.229508+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:52.229518+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.229542+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.229888+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.229983+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:52.230537+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.230563+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.230568+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.233937+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:52.234611+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:52.928668+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"1f302a72-a8ee-4f3c-b919-259746765bbd"},"request_uri":"http://localhost/api/products/1f302a72-a8ee-4f3c-b919-259746765bbd","method":"DELETE"} []
[2021-01-12T07:35:52.929099+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:52.929110+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.929134+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.929460+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.932640+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:52.933288+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.933331+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.933337+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:52.935548+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["1f302a72-a8ee-4f3c-b919-25 [...]"] []
[2021-01-12T07:35:52.941032+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:52.941676+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:53.981706+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T07:35:53.982193+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:53.982202+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.982225+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.982528+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.985477+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:53.986080+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.986106+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.986113+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:53.990896+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["38e94d61-3fce-4f4c-b7d0-d5 [...]"] []
[2021-01-12T07:35:53.996898+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:53.997159+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:55.000427+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"4088b4e9-d9a4-4f19-9974-f656e7f56592"},"request_uri":"http://localhost/api/services/4088b4e9-d9a4-4f19-9974-f656e7f56592","method":"DELETE"} []
[2021-01-12T07:35:55.000829+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:55.000838+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.000865+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.001208+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.004689+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:55.005644+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.005678+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.005685+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:55.015926+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["4088b4e9-d9a4-4f19-9974-f6 [...]"] []
[2021-01-12T07:35:55.020976+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:55.021275+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:56.033070+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"c313b74e-31ed-4f44-beb1-ea897a39fea6"},"request_uri":"http://localhost/api/services/c313b74e-31ed-4f44-beb1-ea897a39fea6","method":"PUT"} []
[2021-01-12T07:35:56.033531+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:56.033541+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.033565+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.033896+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.037530+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:56.038389+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.038435+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.038446+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.043582+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["c313b74e-31ed-4f44-beb1-ea [...]"] []
[2021-01-12T07:35:56.047981+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:56.048213+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:56.215092+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T07:35:56.215517+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:56.215527+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.215552+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.215884+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.219430+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:56.220495+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.220558+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.220567+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:56.224389+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:56.224729+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.109744+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"8f2c7d88-b2a0-4f64-b122-281c9f240ca1"},"request_uri":"http://localhost/api/users/8f2c7d88-b2a0-4f64-b122-281c9f240ca1","method":"DELETE"} []
[2021-01-12T07:35:57.110606+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:57.110625+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.110665+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.111156+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.115212+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:57.115778+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.115805+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.115811+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.117067+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["8f2c7d88-b2a0-4f64-b122-28 [...]"] []
[2021-01-12T07:35:57.119854+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.120168+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.771981+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"fd959604-2a1b-4f7a-9015-b48fcc15827c"},"request_uri":"http://localhost/api/users/fd959604-2a1b-4f7a-9015-b48fcc15827c","method":"GET"} []
[2021-01-12T07:35:57.772524+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:57.772538+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.772567+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.773024+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.777296+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:57.777923+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.777951+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.777957+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.779488+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["fd959604-2a1b-4f7a-9015-b4 [...]"] []
[2021-01-12T07:35:57.782749+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.782977+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.816115+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T07:35:57.816584+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:57.816595+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.816627+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.816954+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.820907+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:57.821779+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.821825+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.821835+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:57.826925+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:57.827206+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:58.877304+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"285ee172-5b74-4fdc-bfe4-aaa92099e5a8"},"request_uri":"http://localhost/api/users/285ee172-5b74-4fdc-bfe4-aaa92099e5a8","method":"PUT"} []
[2021-01-12T07:35:58.878067+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:35:58.878081+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.878111+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.878504+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.881932+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:35:58.882469+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.882496+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.882502+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:35:58.883767+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["285ee172-5b74-4fdc-bfe4-aa [...]"] []
[2021-01-12T07:35:58.886884+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:35:58.887241+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:38:06.500802+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T07:38:06.502565+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:38:06.504914+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:38:06.506083+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:38:06.507158+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T07:38:06.509026+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:38:06.509901+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:38:06.510682+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:38:06.511491+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T07:38:06.512906+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:38:06.513674+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:38:06.514322+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:38:06.514883+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T07:38:06.516095+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:38:06.516821+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:38:06.517546+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:38:06.518172+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T07:38:06.520125+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:38:06.521230+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:38:06.522175+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:38:06.523096+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T07:38:06.525062+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T07:38:06.530703+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T07:38:06.535739+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T07:38:06.541917+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T07:38:06.546601+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T07:38:06.550695+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T07:38:06.555290+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T07:38:06.560266+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T07:38:06.566924+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:38:06.578655+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:38:06.590459+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:38:06.601110+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:38:06.614918+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:38:06.625306+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T07:38:06.647771+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T07:38:06.670696+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T07:38:06.699456+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T07:38:06.701588+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T07:38:06.702361+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T07:38:06.703497+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T07:38:06.719732+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T07:38:06.732302+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T07:38:06.745885+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T07:38:06.759410+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T07:38:06.771535+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T07:38:06.787788+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T07:38:06.804994+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T07:38:06.805494+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T07:38:06.807231+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T07:38:06.812557+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"7e145010-fdea-4f44-b5f2-ba [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T07:38:06+00:00","7":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.813750+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"a8dbb79c-29f0-4f36-846e-36 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T07:38:06+00:00","7":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.814015+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"2f6abb56-8372-4f84-9726-85 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T07:38:06+00:00","7":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.814328+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"253cbb34-7667-4fe5-bc7e-8f [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T07:38:06+00:00","5":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.815263+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"9df7f328-c2e1-4fb6-9eaa-0d [...]","2":"TestService","3":"Funcional","4":"2021-01-12T07:38:06+00:00","5":"2021-01-12T07:38:06+00:00","6":"253cbb34-7667-4fe5-bc7e-8f [...]"} []
[2021-01-12T07:38:06.815921+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c4ff8a2d-891b-4fff-acb0-b0 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T07:38:06+00:00","6":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.816416+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"1239906f-7076-4faf-9f77-17 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T07:38:06+00:00","6":"2021-01-12T07:38:06+00:00"} []
[2021-01-12T07:38:06.816565+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T07:38:06.817772+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T07:38:06.817781+00:00] app.INFO: Done. [] []
[2021-01-12T07:38:06.817790+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T07:38:06.818978+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T07:38:06.832962+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:38:06.840638+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-12T07:38:07.026219+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:38:07.051378+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9df7f328-c2e1-4fb6-9eaa-0d [...]"] []
[2021-01-12T07:38:07.058022+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:38:07.121700+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:38:07.126669+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:38:07.453390+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:38:07.460557+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["7eaaf5d5-cb89-4f59-9027-67 [...]"] []
[2021-01-12T07:38:07.465072+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:40:19.423184+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T07:40:19.425062+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:40:19.426905+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:40:19.427764+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:40:19.428451+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T07:40:19.429968+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:40:19.430646+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:40:19.431346+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:40:19.431975+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T07:40:19.432962+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:40:19.433644+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:40:19.434306+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:40:19.435030+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T07:40:19.436677+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:40:19.437952+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:40:19.439186+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:40:19.440752+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T07:40:19.442410+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T07:40:19.443173+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T07:40:19.443794+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T07:40:19.444387+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T07:40:19.446017+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T07:40:19.450912+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T07:40:19.456223+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T07:40:19.461912+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T07:40:19.466640+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T07:40:19.471329+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T07:40:19.476637+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T07:40:19.495933+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T07:40:19.516838+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:40:19.528791+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:40:19.543662+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:40:19.554531+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:40:19.566990+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T07:40:19.577910+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T07:40:19.599580+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T07:40:19.623579+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T07:40:19.654061+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T07:40:19.656918+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T07:40:19.657486+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T07:40:19.658229+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T07:40:19.671890+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T07:40:19.684986+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T07:40:19.698763+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T07:40:19.711340+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T07:40:19.723174+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T07:40:19.739099+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T07:40:19.756730+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T07:40:19.757254+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T07:40:19.758780+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T07:40:19.762976+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"d78178f0-29a8-4fd9-9482-19 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T07:40:19+00:00","7":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.763941+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"1c3eddb0-ee59-4f74-8de9-0f [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T07:40:19+00:00","7":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.764193+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"54642c29-9f3f-4f7a-b366-4f [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T07:40:19+00:00","7":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.764504+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"90448984-7862-4f0e-9515-64 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T07:40:19+00:00","5":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.765569+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"f1a2722e-5723-4fdb-9495-63 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T07:40:19+00:00","5":"2021-01-12T07:40:19+00:00","6":"90448984-7862-4f0e-9515-64 [...]"} []
[2021-01-12T07:40:19.766333+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"3991907f-c770-4f1a-83b9-d7 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T07:40:19+00:00","6":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.766962+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f688c24a-610c-4fad-8b6d-c7 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T07:40:19+00:00","6":"2021-01-12T07:40:19+00:00"} []
[2021-01-12T07:40:19.767124+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T07:40:19.768588+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T07:40:19.768600+00:00] app.INFO: Done. [] []
[2021-01-12T07:40:19.768610+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T07:40:19.769870+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T07:40:19.783544+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:19.790712+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-12T07:40:19.972010+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:40:19.997875+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["f1a2722e-5723-4fdb-9495-63 [...]"] []
[2021-01-12T07:40:20.003529+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:40:20.064894+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:40:20.067833+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:40:20.377496+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T07:40:20.383332+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["c33a5c0b-d5ee-4f2b-a2f5-05 [...]"] []
[2021-01-12T07:40:20.389577+00:00] request.CRITICAL: Uncaught PHP Exception LogicException: "The current token must be set to use the "security" attribute (is the URL behind a firewall?)." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php line 52 {"exception":"[object] (LogicException(code: 0): The current token must be set to use the \"security\" attribute (is the URL behind a firewall?). at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/ResourceAccessChecker.php:52)"} []
[2021-01-12T07:40:37.641331+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T07:40:37.641848+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:37.641862+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.641892+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.642329+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.642462+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:37.643073+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.643099+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.643106+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:37.646458+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:37.647117+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:38.396188+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"35799eb7-21ca-4f56-94f4-4dd7d549c33c"},"request_uri":"http://localhost/api/products/35799eb7-21ca-4f56-94f4-4dd7d549c33c","method":"DELETE"} []
[2021-01-12T07:40:38.396722+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:38.396742+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.396773+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.397188+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.400765+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:38.402603+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.402666+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.402678+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:38.407605+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["35799eb7-21ca-4f56-94f4-4d [...]"] []
[2021-01-12T07:40:38.421342+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:38.421678+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:39.867764+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T07:40:39.868406+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:39.868424+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.868458+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.868872+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.873702+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:39.874505+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.874534+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.874540+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:39.878142+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["8280ad69-b444-4f6f-acc5-c3 [...]"] []
[2021-01-12T07:40:39.882313+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:39.882542+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:40.962753+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"2b3c7f31-3ec8-4f5b-a822-3caf9645a4e2"},"request_uri":"http://localhost/api/services/2b3c7f31-3ec8-4f5b-a822-3caf9645a4e2","method":"DELETE"} []
[2021-01-12T07:40:40.963260+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:40.963271+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.963296+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.963628+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.967137+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:40.968163+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.968209+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.968219+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:40.973330+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2b3c7f31-3ec8-4f5b-a822-3c [...]"] []
[2021-01-12T07:40:40.978380+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:40.978642+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:42.176289+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"844d506c-e873-4f8d-a8dd-81249226c273"},"request_uri":"http://localhost/api/services/844d506c-e873-4f8d-a8dd-81249226c273","method":"PUT"} []
[2021-01-12T07:40:42.176995+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:42.177012+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.177045+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.177423+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.181079+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:42.181718+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.181748+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.181755+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.186529+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["844d506c-e873-4f8d-a8dd-81 [...]"] []
[2021-01-12T07:40:42.192659+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:42.192950+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:42.424312+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T07:40:42.425006+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:42.425021+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.425053+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.425510+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.429347+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:42.430053+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.430081+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.430088+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:42.434055+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:42.434332+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:43.415404+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"71fc3128-f38e-4fa2-91de-233c8bab5ae9"},"request_uri":"http://localhost/api/users/71fc3128-f38e-4fa2-91de-233c8bab5ae9","method":"DELETE"} []
[2021-01-12T07:40:43.415819+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:43.415829+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.415853+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.416167+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.420834+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:43.421731+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.421775+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.421784+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:43.424049+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["71fc3128-f38e-4fa2-91de-23 [...]"] []
[2021-01-12T07:40:43.427172+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:43.427424+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:44.150705+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"96b8b173-d6dd-4fa9-8c87-1e8db5d63bda"},"request_uri":"http://localhost/api/users/96b8b173-d6dd-4fa9-8c87-1e8db5d63bda","method":"GET"} []
[2021-01-12T07:40:44.151404+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:44.151416+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.151441+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.151831+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.156028+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:44.156848+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.156879+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.156885+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.158412+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["96b8b173-d6dd-4fa9-8c87-1e [...]"] []
[2021-01-12T07:40:44.161418+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:44.161673+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:44.261044+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T07:40:44.261631+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:44.261643+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.261669+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.261998+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.266197+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:44.266813+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.266844+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.266850+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:44.271544+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:44.272065+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:45.345647+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"02fffc2e-3588-4f9e-b60a-1b26d7386d3d"},"request_uri":"http://localhost/api/users/02fffc2e-3588-4f9e-b60a-1b26d7386d3d","method":"PUT"} []
[2021-01-12T07:40:45.346332+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T07:40:45.346349+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.346382+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.346773+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.350494+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T07:40:45.351818+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.351873+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.351884+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T07:40:45.354200+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["02fffc2e-3588-4f9e-b60a-1b [...]"] []
[2021-01-12T07:40:45.360235+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T07:40:45.360749+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:06:52.489264+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T08:06:52.490717+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:06:52.492988+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:06:52.494870+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:06:52.495748+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T08:06:52.497164+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:06:52.497870+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:06:52.498674+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:06:52.499307+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T08:06:52.500684+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:06:52.501407+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:06:52.502139+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:06:52.502692+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T08:06:52.504221+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:06:52.505191+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:06:52.506435+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:06:52.507318+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T08:06:52.508662+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:06:52.509768+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:06:52.510793+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:06:52.511555+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T08:06:52.513491+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T08:06:52.517957+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T08:06:52.523209+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T08:06:52.529052+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T08:06:52.533886+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T08:06:52.538106+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T08:06:52.543726+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T08:06:52.548405+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T08:06:52.554918+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:06:52.568716+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:06:52.588854+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:06:52.599730+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:06:52.611400+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:06:52.623326+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T08:06:52.645406+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T08:06:52.667384+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T08:06:52.706639+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T08:06:52.710142+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T08:06:52.710689+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T08:06:52.711448+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T08:06:52.726139+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T08:06:52.738136+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T08:06:52.751081+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T08:06:52.764931+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T08:06:52.776817+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T08:06:52.803711+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T08:06:52.823714+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T08:06:52.824222+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T08:06:52.825840+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:06:52.831089+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"75d5c848-f39a-4fac-935b-53 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T08:06:52+00:00","7":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.832385+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"2474b203-4ff1-4fa8-965e-65 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T08:06:52+00:00","7":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.832658+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"924cbd6e-b648-4f6f-acec-d8 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:06:52+00:00","7":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.832853+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"92e20459-aeb1-4f06-899e-d5 [...]","2":"TestIncidentCríticaService1","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:06:52+00:00","7":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.833407+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"5bab7e3f-1dc3-4fdf-bd4e-8e [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T08:06:52+00:00","5":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.834561+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"812ef6e4-6d82-4f72-ae87-b8 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T08:06:52+00:00","5":"2021-01-12T08:06:52+00:00","6":"5bab7e3f-1dc3-4fdf-bd4e-8e [...]"} []
[2021-01-12T08:06:52.835404+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"daa76f36-a289-4ff4-a9e6-92 [...]","2":"TestService2","3":"Error","4":"2021-01-12T08:06:52+00:00","5":"2021-01-12T08:06:52+00:00","6":"5bab7e3f-1dc3-4fdf-bd4e-8e [...]"} []
[2021-01-12T08:06:52.835694+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9f9795eb-d88e-4f95-a79d-7d [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T08:06:52+00:00","6":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.836420+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"df1b2b6d-cc72-4fcf-a22b-d3 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T08:06:52+00:00","6":"2021-01-12T08:06:52+00:00"} []
[2021-01-12T08:06:52.838006+00:00] doctrine.DEBUG: INSERT INTO incident_service (incident_id, service_id) VALUES (?, ?) ["92e20459-aeb1-4f06-899e-d5 [...]","daa76f36-a289-4ff4-a9e6-92 [...]"] []
[2021-01-12T08:06:52.840046+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T08:06:52.856611+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T08:06:52.856630+00:00] app.INFO: Done. [] []
[2021-01-12T08:06:52.856644+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T08:06:52.859328+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:06:52.873379+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:06:52.880417+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService2" [] []
[2021-01-12T08:06:52.880867+00:00] doctrine.DEBUG: SELECT id FROM incident WHERE name = "TestIncidentCríticaService1" [] []
[2021-01-12T08:06:52.891499+00:00] request.INFO: Matched route "api_incidents_put_item". {"route":"api_incidents_put_item","route_parameters":{"_route":"api_incidents_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"put","id":"92e20459-aeb1-4f06-899e-d5aa86c42074"},"request_uri":"http://localhost/api/incidents/92e20459-aeb1-4f06-899e-d5aa86c42074","method":"PUT"} []
[2021-01-12T08:06:52.895942+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:06:52.895957+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.895988+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.898010+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.899352+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:06:52.900163+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.900315+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.900322+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:06:52.918822+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["92e20459-aeb1-4f06-899e-d5 [...]"] []
[2021-01-12T08:06:52.925067+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["daa76f36-a289-4ff4-a9e6-92 [...]"] []
[2021-01-12T08:06:52.936892+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:06:52.937380+00:00] doctrine.DEBUG: UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ? ["TestIncidentBaja","En investigación","Baja","2021-01-12T08:06:52+00:00","92e20459-aeb1-4f06-899e-d5 [...]"] []
[2021-01-12T08:06:52.941354+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-01-12T08:06:52.948025+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ?' with params ["TestIncidentBaja", "En investigaci\u00f3n", "Baja", "2021-01-12 08:06:52", "92e20459-aeb1-4f06-899e-d5aa86c42074"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06'" at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 74 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ?' with params [\"TestIncidentBaja\", \"En investigaci\\u00f3n\", \"Baja\", \"2021-01-12 08:06:52\", \"92e20459-aeb1-4f06-899e-d5aa86c42074\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:115)"} []
[2021-01-12T08:08:36.597725+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T08:08:36.598915+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:08:36.600682+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:08:36.602021+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:08:36.602948+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T08:08:36.604682+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:08:36.605838+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:08:36.607071+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:08:36.608069+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T08:08:36.609904+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:08:36.611181+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:08:36.612129+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:08:36.612888+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T08:08:36.614291+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:08:36.615102+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:08:36.615888+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:08:36.616582+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T08:08:36.618124+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:08:36.618947+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:08:36.619667+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:08:36.620379+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T08:08:36.622277+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T08:08:36.628702+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T08:08:36.634586+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T08:08:36.642163+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T08:08:36.647439+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T08:08:36.651954+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T08:08:36.656929+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T08:08:36.662586+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T08:08:36.669455+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:08:36.681284+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:08:36.692843+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:08:36.703531+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:08:36.715544+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:08:36.724822+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T08:08:36.748308+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T08:08:36.769433+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T08:08:36.799223+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T08:08:36.802391+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T08:08:36.802896+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T08:08:36.803660+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T08:08:36.818701+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T08:08:36.830795+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T08:08:36.843537+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T08:08:36.860457+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T08:08:36.872920+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T08:08:36.900446+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T08:08:36.920477+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T08:08:36.921130+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T08:08:36.923242+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:08:36.928717+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"226ec3fe-d734-4f72-bb24-da [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T08:08:36+00:00","7":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.929818+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"f2a5e0d5-c2f0-4ffc-871b-84 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T08:08:36+00:00","7":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.930105+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"5d43df89-b3fc-4f40-9179-90 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:08:36+00:00","7":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.930308+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"7b849021-90d3-4f38-8333-36 [...]","2":"TestIncidentCríticaService1","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:08:36+00:00","7":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.930833+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"a3261603-1091-4f20-878d-30 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T08:08:36+00:00","5":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.931896+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"1a7a66f0-5018-4f1c-b4dc-38 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T08:08:36+00:00","5":"2021-01-12T08:08:36+00:00","6":"a3261603-1091-4f20-878d-30 [...]"} []
[2021-01-12T08:08:36.932616+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"8be75707-e48c-4ff8-bd54-39 [...]","2":"TestService2","3":"Error","4":"2021-01-12T08:08:36+00:00","5":"2021-01-12T08:08:36+00:00","6":"a3261603-1091-4f20-878d-30 [...]"} []
[2021-01-12T08:08:36.932866+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"b381bb67-12f3-4f3c-9eb5-15 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T08:08:36+00:00","6":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.933439+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9f1e1850-9e44-4f3e-abd7-b9 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T08:08:36+00:00","6":"2021-01-12T08:08:36+00:00"} []
[2021-01-12T08:08:36.934985+00:00] doctrine.DEBUG: INSERT INTO incident_service (incident_id, service_id) VALUES (?, ?) ["7b849021-90d3-4f38-8333-36 [...]","8be75707-e48c-4ff8-bd54-39 [...]"] []
[2021-01-12T08:08:36.936355+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T08:08:36.937662+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T08:08:36.937695+00:00] app.INFO: Done. [] []
[2021-01-12T08:08:36.937714+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T08:08:36.941299+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:08:36.955277+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:08:36.962915+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService2" [] []
[2021-01-12T08:08:36.963297+00:00] doctrine.DEBUG: SELECT id FROM incident WHERE name = "TestIncidentCríticaService1" [] []
[2021-01-12T08:08:36.973710+00:00] request.INFO: Matched route "api_incidents_put_item". {"route":"api_incidents_put_item","route_parameters":{"_route":"api_incidents_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"put","id":"7b849021-90d3-4f38-8333-3648bd30f3b2"},"request_uri":"http://localhost/api/incidents/7b849021-90d3-4f38-8333-3648bd30f3b2","method":"PUT"} []
[2021-01-12T08:08:36.978463+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:08:36.978479+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:36.978510+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:36.980669+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:36.982102+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:08:36.983053+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:36.983207+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:36.983214+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:08:37.001642+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["7b849021-90d3-4f38-8333-36 [...]"] []
[2021-01-12T08:08:37.008302+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["8be75707-e48c-4ff8-bd54-39 [...]"] []
[2021-01-12T08:08:37.019522+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:08:37.020181+00:00] doctrine.DEBUG: UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ? ["TestIncidentBaja","En investigación","Baja","2021-01-12T08:08:37+00:00","7b849021-90d3-4f38-8333-36 [...]"] []
[2021-01-12T08:08:37.023974+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-01-12T08:08:37.030181+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ?' with params ["TestIncidentBaja", "En investigaci\u00f3n", "Baja", "2021-01-12 08:08:37", "7b849021-90d3-4f38-8333-3648bd30f3b2"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06'" at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 74 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, gravity = ?, updated_at = ? WHERE id = ?' with params [\"TestIncidentBaja\", \"En investigaci\\u00f3n\", \"Baja\", \"2021-01-12 08:08:37\", \"7b849021-90d3-4f38-8333-3648bd30f3b2\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentBaja' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:115)"} []
[2021-01-12T08:27:35.842852+00:00] request.INFO: Matched route "api_incidents_put_item". {"route":"api_incidents_put_item","route_parameters":{"_route":"api_incidents_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"put","id":"f043304c-ec6a-4f87-9877-5925555df2cb"},"request_uri":"http://localhost/api/incidents/f043304c-ec6a-4f87-9877-5925555df2cb","method":"PUT"} []
[2021-01-12T08:27:35.843299+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:27:35.843309+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.843331+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.843629+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.847397+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:27:35.847950+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.847978+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.847984+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:35.850558+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["f043304c-ec6a-4f87-9877-59 [...]"] []
[2021-01-12T08:27:35.855224+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["5d8e168b-0808-4fb8-a099-fd [...]"] []
[2021-01-12T08:27:35.855993+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["ee1e61fa-6da6-4fe7-96a3-7e [...]"] []
[2021-01-12T08:27:35.856437+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.state AS state_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.product_id AS product_id_6 FROM service t0 INNER JOIN incident_service ON t0.id = incident_service.service_id WHERE incident_service.incident_id = ? ["f043304c-ec6a-4f87-9877-59 [...]"] []
[2021-01-12T08:27:35.860187+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:27:35.860457+00:00] doctrine.DEBUG: UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ? ["TestIncidentUpdate","En investigación","2021-01-12T08:27:35+00:00","f043304c-ec6a-4f87-9877-59 [...]"] []
[2021-01-12T08:27:35.864790+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-01-12T08:27:35.867973+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ?' with params ["TestIncidentUpdate", "En investigaci\u00f3n", "2021-01-12 08:27:35", "f043304c-ec6a-4f87-9877-5925555df2cb"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06'" at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 74 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ?' with params [\"TestIncidentUpdate\", \"En investigaci\\u00f3n\", \"2021-01-12 08:27:35\", \"f043304c-ec6a-4f87-9877-5925555df2cb\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:115)"} []
[2021-01-12T08:27:55.338261+00:00] request.INFO: Matched route "api_incidents_put_item". {"route":"api_incidents_put_item","route_parameters":{"_route":"api_incidents_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"put","id":"9766cc24-4121-4f8c-8163-04531ca2027a"},"request_uri":"http://localhost/api/incidents/9766cc24-4121-4f8c-8163-04531ca2027a","method":"PUT"} []
[2021-01-12T08:27:55.338714+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:27:55.338724+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.338746+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.339044+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.342333+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:27:55.342870+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.342897+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.342903+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:27:55.345864+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["9766cc24-4121-4f8c-8163-04 [...]"] []
[2021-01-12T08:27:55.352745+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2a856bf1-f35d-4f25-b950-89 [...]"] []
[2021-01-12T08:27:55.353827+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9b6f5396-5c64-4f2a-8c52-33 [...]"] []
[2021-01-12T08:27:55.354365+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.state AS state_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.product_id AS product_id_6 FROM service t0 INNER JOIN incident_service ON t0.id = incident_service.service_id WHERE incident_service.incident_id = ? ["9766cc24-4121-4f8c-8163-04 [...]"] []
[2021-01-12T08:27:55.358682+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:27:55.358929+00:00] doctrine.DEBUG: UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ? ["TestIncidentUpdate","En investigación","2021-01-12T08:27:55+00:00","9766cc24-4121-4f8c-8163-04 [...]"] []
[2021-01-12T08:27:55.361996+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-01-12T08:27:55.365168+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ?' with params ["TestIncidentUpdate", "En investigaci\u00f3n", "2021-01-12 08:27:55", "9766cc24-4121-4f8c-8163-04531ca2027a"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06'" at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 74 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'UPDATE incident SET name = ?, state = ?, updated_at = ? WHERE id = ?' with params [\"TestIncidentUpdate\", \"En investigaci\\u00f3n\", \"2021-01-12 08:27:55\", \"9766cc24-4121-4f8c-8163-04531ca2027a\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:74)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'TestIncidentUpdate' for key 'incident.UNIQ_3D03A11A5E237E06' at /home/sergio/Sites/NODRIZAstatus/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:115)"} []
[2021-01-12T08:36:42.187618+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T08:36:42.187811+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:42.187821+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.187846+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.188182+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.188277+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:42.188809+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.188850+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.188858+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.194380+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:42.195106+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:42.788210+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"88a8c0b8-3c4d-4fcd-a421-cf7dfbe73b66"},"request_uri":"http://localhost/api/products/88a8c0b8-3c4d-4fcd-a421-cf7dfbe73b66","method":"DELETE"} []
[2021-01-12T08:36:42.788621+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:42.788632+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.788656+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.788998+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.792500+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:42.793203+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.793231+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.793238+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:42.795582+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["88a8c0b8-3c4d-4fcd-a421-cf [...]"] []
[2021-01-12T08:36:42.799611+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:42.799866+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:43.768300+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T08:36:43.768701+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:43.768712+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.768735+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.769090+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.772344+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:43.772892+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.772920+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.772926+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:43.775952+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["3951a7eb-ed78-4f0a-a37c-87 [...]"] []
[2021-01-12T08:36:43.784859+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:43.785123+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:44.670636+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"7b2f8824-1262-4fd8-8b8c-200a8c2e804f"},"request_uri":"http://localhost/api/services/7b2f8824-1262-4fd8-8b8c-200a8c2e804f","method":"DELETE"} []
[2021-01-12T08:36:44.671047+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:44.671057+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.671081+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.671403+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.674786+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:44.675601+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.675629+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.675635+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:44.679533+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["7b2f8824-1262-4fd8-8b8c-20 [...]"] []
[2021-01-12T08:36:44.683826+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:44.684056+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:45.651100+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"8913dba7-d76f-4f70-8526-878108cfc664"},"request_uri":"http://localhost/api/services/8913dba7-d76f-4f70-8526-878108cfc664","method":"PUT"} []
[2021-01-12T08:36:45.651503+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:45.651513+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.651537+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.651858+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.655009+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:45.655544+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.655571+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.655577+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.665993+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["8913dba7-d76f-4f70-8526-87 [...]"] []
[2021-01-12T08:36:45.670185+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:45.670412+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:45.816433+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T08:36:45.816883+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:45.816894+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.816918+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.817259+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.820595+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:45.821347+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.821408+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.821415+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:45.824511+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:45.824769+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:46.615326+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"5efaab59-dbb7-4f5e-b41f-0671cbf1cb8c"},"request_uri":"http://localhost/api/users/5efaab59-dbb7-4f5e-b41f-0671cbf1cb8c","method":"DELETE"} []
[2021-01-12T08:36:46.615734+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:46.615744+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.615769+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.616090+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.619550+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:46.620145+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.620173+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.620179+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:46.621439+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["5efaab59-dbb7-4f5e-b41f-06 [...]"] []
[2021-01-12T08:36:46.624015+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:46.624259+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:47.236067+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"db76c793-3901-4fd7-b5f3-d4f8cf83d5ae"},"request_uri":"http://localhost/api/users/db76c793-3901-4fd7-b5f3-d4f8cf83d5ae","method":"GET"} []
[2021-01-12T08:36:47.236508+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:47.236519+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.236543+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.236865+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.240061+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:47.240596+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.240625+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.240632+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.242604+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["db76c793-3901-4fd7-b5f3-d4 [...]"] []
[2021-01-12T08:36:47.245645+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:47.245900+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:47.272922+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T08:36:47.273440+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:47.273452+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.273478+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.273809+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.277759+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:47.278330+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.278360+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.278367+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:47.281497+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:47.281768+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:48.194430+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"1eff040d-244b-4f82-b51d-3e0069c0ecd8"},"request_uri":"http://localhost/api/users/1eff040d-244b-4f82-b51d-3e0069c0ecd8","method":"PUT"} []
[2021-01-12T08:36:48.194908+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:36:48.194919+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.194946+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.195313+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.198620+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:36:48.199166+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.199194+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.199201+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:36:48.200448+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["1eff040d-244b-4f82-b51d-3e [...]"] []
[2021-01-12T08:36:48.203127+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:36:48.203370+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:00.882272+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T08:37:00.882466+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:00.882477+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.882501+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.882842+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.882938+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:00.883470+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.883496+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.883501+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:00.886589+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:00.887283+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:01.564978+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"a5132bc9-9e88-4f41-8598-468150527e90"},"request_uri":"http://localhost/api/products/a5132bc9-9e88-4f41-8598-468150527e90","method":"DELETE"} []
[2021-01-12T08:37:01.565422+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:01.565432+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.565456+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.565843+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.569144+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:01.569723+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.569757+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.569763+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:01.572103+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["a5132bc9-9e88-4f41-8598-46 [...]"] []
[2021-01-12T08:37:01.576483+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:01.576782+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:02.704288+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T08:37:02.704753+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:02.704764+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.704792+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.705161+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.710125+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:02.711088+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.711121+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.711128+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:02.714787+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["41871187-8861-4fff-a9b8-92 [...]"] []
[2021-01-12T08:37:02.724349+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:02.724725+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:03.776841+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"b5635df8-e80d-4f55-8a4c-f9426bfba059"},"request_uri":"http://localhost/api/services/b5635df8-e80d-4f55-8a4c-f9426bfba059","method":"DELETE"} []
[2021-01-12T08:37:03.777366+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:03.777377+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.777428+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.777759+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.781496+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:03.782064+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.782092+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.782098+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:03.785625+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["b5635df8-e80d-4f55-8a4c-f9 [...]"] []
[2021-01-12T08:37:03.790133+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:03.790399+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:04.769294+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"f9907493-0e41-4f6b-b9a4-9e6cc704c651"},"request_uri":"http://localhost/api/services/f9907493-0e41-4f6b-b9a4-9e6cc704c651","method":"PUT"} []
[2021-01-12T08:37:04.769755+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:04.769766+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.769790+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.770112+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.773292+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:04.773890+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.773932+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.773968+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.785461+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["f9907493-0e41-4f6b-b9a4-9e [...]"] []
[2021-01-12T08:37:04.789970+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:04.790217+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:04.981027+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T08:37:04.981590+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:04.981602+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.981629+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.982024+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.985720+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:04.986350+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.986382+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.986388+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:04.991175+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:04.991607+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:05.839897+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"4ab9f0e2-ba93-4fea-beaa-db5f5d19a9fd"},"request_uri":"http://localhost/api/users/4ab9f0e2-ba93-4fea-beaa-db5f5d19a9fd","method":"DELETE"} []
[2021-01-12T08:37:05.840310+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:05.840321+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.840349+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.840699+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.845403+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:05.846357+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.846399+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.846406+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:05.848024+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4ab9f0e2-ba93-4fea-beaa-db [...]"] []
[2021-01-12T08:37:05.851214+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:05.851531+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:06.460583+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"02124899-1cd1-4fb7-a9fd-8cfd14d9ee50"},"request_uri":"http://localhost/api/users/02124899-1cd1-4fb7-a9fd-8cfd14d9ee50","method":"GET"} []
[2021-01-12T08:37:06.461169+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:06.461183+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.461213+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.461616+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.464964+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:06.465519+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.465549+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.465556+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.466745+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["02124899-1cd1-4fb7-a9fd-8c [...]"] []
[2021-01-12T08:37:06.469449+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:06.469693+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:06.496609+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T08:37:06.497194+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:06.497206+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.497235+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.497605+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.500825+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:06.501379+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.501406+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.501412+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:06.504469+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:06.504722+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:07.503095+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"497b2469-da71-4fec-b348-6536b10008d9"},"request_uri":"http://localhost/api/users/497b2469-da71-4fec-b348-6536b10008d9","method":"PUT"} []
[2021-01-12T08:37:07.503519+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:37:07.503530+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.503554+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.503873+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.506962+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:37:07.507594+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.507623+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.507630+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:37:07.509254+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["497b2469-da71-4fec-b348-65 [...]"] []
[2021-01-12T08:37:07.512100+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:37:07.512352+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:40:30.223396+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T08:40:30.224885+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:40:30.227013+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:40:30.228194+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:40:30.228838+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T08:40:30.230471+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:40:30.231186+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:40:30.231927+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:40:30.232611+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T08:40:30.234007+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:40:30.234749+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:40:30.235403+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:40:30.235954+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T08:40:30.236895+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:40:30.237753+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:40:30.238472+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:40:30.239087+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T08:40:30.240596+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:40:30.241744+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:40:30.242808+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:40:30.243496+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T08:40:30.244647+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T08:40:30.249470+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T08:40:30.253720+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T08:40:30.258785+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T08:40:30.263528+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T08:40:30.270558+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T08:40:30.275071+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T08:40:30.280306+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T08:40:30.287641+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:40:30.296920+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:40:30.308951+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:40:30.318169+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:40:30.330605+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:40:30.340267+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T08:40:30.367079+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T08:40:30.388371+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T08:40:30.418142+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T08:40:30.421382+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T08:40:30.421884+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T08:40:30.422675+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T08:40:30.435888+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T08:40:30.447842+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T08:40:30.458408+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T08:40:30.471892+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T08:40:30.492209+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T08:40:30.517172+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T08:40:30.534744+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T08:40:30.535150+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T08:40:30.536506+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:40:30.540971+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"fd608821-a45e-4f4c-9f9c-22 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T08:40:30+00:00","7":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.542156+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"544e0bb9-b945-4f97-a445-35 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T08:40:30+00:00","7":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.542462+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"9292a918-ab77-4f01-844c-a7 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:40:30+00:00","7":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.542839+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"f0066b51-881e-4fb7-be31-31 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T08:40:30+00:00","5":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.543834+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"5680e479-36ae-4f6f-90f1-08 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T08:40:30+00:00","5":"2021-01-12T08:40:30+00:00","6":"f0066b51-881e-4fb7-be31-31 [...]"} []
[2021-01-12T08:40:30.544477+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"72bfd876-6a58-4fe1-a2c3-f2 [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T08:40:30+00:00","5":"2021-01-12T08:40:30+00:00","6":"f0066b51-881e-4fb7-be31-31 [...]"} []
[2021-01-12T08:40:30.544736+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f9e4aa8a-a906-4f24-b448-97 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T08:40:30+00:00","6":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.545472+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f8200125-7615-4f43-9db6-26 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T08:40:30+00:00","6":"2021-01-12T08:40:30+00:00"} []
[2021-01-12T08:40:30.545746+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T08:40:30.546761+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T08:40:30.546770+00:00] app.INFO: Done. [] []
[2021-01-12T08:40:30.546779+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T08:40:30.548890+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:40:30.561933+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:40:30.568172+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-12T08:40:30.578358+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T08:40:30.581859+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:40:30.581873+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.581901+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.583962+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.585276+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:40:30.586228+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.586386+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.586393+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:40:30.596967+00:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "The type of the "gravity" attribute must be "string", "array" given." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 379 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): The type of the \"gravity\" attribute must be \"string\", \"array\" given. at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:379)"} []
[2021-01-12T08:40:30.609412+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService2" [] []
[2021-01-12T08:42:06.900561+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T08:42:06.901627+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:06.903298+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:06.904009+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:06.904542+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T08:42:06.906229+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:06.907264+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:06.908152+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:06.908844+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T08:42:06.910351+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:06.911042+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:06.911657+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:06.912206+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T08:42:06.913115+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:06.913815+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:06.914487+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:06.915074+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T08:42:06.916332+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:06.917072+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:06.917824+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:06.918403+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T08:42:06.919791+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T08:42:06.924539+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T08:42:06.929503+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T08:42:06.934762+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T08:42:06.939631+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T08:42:06.944567+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T08:42:06.948827+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T08:42:06.953024+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T08:42:06.961306+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:06.973365+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:06.984227+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:07.000472+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:07.011396+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:07.020710+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T08:42:07.042024+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T08:42:07.063417+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T08:42:07.091686+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T08:42:07.095231+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T08:42:07.095695+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T08:42:07.096281+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T08:42:07.109543+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T08:42:07.120052+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T08:42:07.131279+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T08:42:07.144252+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T08:42:07.155770+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T08:42:07.180442+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T08:42:07.198369+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T08:42:07.198795+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T08:42:07.200048+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:42:07.203972+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"c4e4a10d-aec4-4f7f-b6f9-96 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T08:42:07+00:00","7":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.205029+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"2fd0ae80-67cc-4fd6-92ea-7c [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T08:42:07+00:00","7":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.205379+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"7e244e70-9b55-4f7a-940d-b8 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:42:07+00:00","7":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.205735+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"768d8dbc-2c7d-4f78-b2cf-a0 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T08:42:07+00:00","5":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.207150+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"dcb25fbc-9374-4f6e-846a-86 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T08:42:07+00:00","5":"2021-01-12T08:42:07+00:00","6":"768d8dbc-2c7d-4f78-b2cf-a0 [...]"} []
[2021-01-12T08:42:07.208110+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"53e3ab75-0d7c-4fee-9482-23 [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T08:42:07+00:00","5":"2021-01-12T08:42:07+00:00","6":"768d8dbc-2c7d-4f78-b2cf-a0 [...]"} []
[2021-01-12T08:42:07.208444+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"dbf54a4e-352a-4f03-b45f-cc [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T08:42:07+00:00","6":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.209102+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"36221ce2-119c-4f69-9fdb-5c [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T08:42:07+00:00","6":"2021-01-12T08:42:07+00:00"} []
[2021-01-12T08:42:07.209261+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T08:42:07.210730+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T08:42:07.210738+00:00] app.INFO: Done. [] []
[2021-01-12T08:42:07.210747+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T08:42:07.212832+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:42:07.226600+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:42:07.233313+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-12T08:42:07.244669+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T08:42:07.248666+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:42:07.248683+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.248713+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.250863+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.252228+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:42:07.253200+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.253370+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.253379+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:07.264034+00:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "The type of the "gravity" attribute must be "string", "array" given." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 379 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): The type of the \"gravity\" attribute must be \"string\", \"array\" given. at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:379)"} []
[2021-01-12T08:42:07.276899+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService2" [] []
[2021-01-12T08:42:18.860767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T08:42:18.861984+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:18.863423+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:18.864157+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:18.864690+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T08:42:18.866128+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:18.866771+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:18.867486+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:18.868118+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T08:42:18.869184+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:18.869897+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:18.870607+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:18.871215+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T08:42:18.872453+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:18.873215+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:18.874227+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:18.875120+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T08:42:18.876341+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T08:42:18.877321+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T08:42:18.878130+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T08:42:18.878774+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T08:42:18.880456+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T08:42:18.885030+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T08:42:18.889592+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T08:42:18.895365+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T08:42:18.899988+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T08:42:18.904430+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T08:42:18.909034+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T08:42:18.913942+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T08:42:18.921733+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:18.932275+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:18.949569+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:18.959607+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:18.971481+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T08:42:18.981048+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T08:42:19.001659+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T08:42:19.023751+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T08:42:19.054164+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T08:42:19.057625+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T08:42:19.058113+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T08:42:19.058833+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T08:42:19.071995+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T08:42:19.083258+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T08:42:19.095235+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T08:42:19.108767+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T08:42:19.121773+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T08:42:19.145991+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T08:42:19.163263+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T08:42:19.163649+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T08:42:19.164891+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T08:42:19.168793+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"ca1131e8-a2c7-4f15-abca-57 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T08:42:19+00:00","7":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.170206+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"e6841fb8-207e-4f62-ace0-d0 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T08:42:19+00:00","7":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.170561+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"93171e50-eba4-4f36-8e5f-0a [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T08:42:19+00:00","7":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.170850+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"6a8c6074-d298-4f15-bb5a-19 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T08:42:19+00:00","5":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.171856+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"b2d38588-739a-4f93-a5b8-ee [...]","2":"TestService","3":"Funcional","4":"2021-01-12T08:42:19+00:00","5":"2021-01-12T08:42:19+00:00","6":"6a8c6074-d298-4f15-bb5a-19 [...]"} []
[2021-01-12T08:42:19.172498+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"d54a3e4f-0a16-4f51-9782-de [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T08:42:19+00:00","5":"2021-01-12T08:42:19+00:00","6":"6a8c6074-d298-4f15-bb5a-19 [...]"} []
[2021-01-12T08:42:19.172792+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"f4e65259-010b-4fc5-9d26-ee [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T08:42:19+00:00","6":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.173535+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"62885f7e-fa19-4ff2-91c0-2b [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T08:42:19+00:00","6":"2021-01-12T08:42:19+00:00"} []
[2021-01-12T08:42:19.173761+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T08:42:19.175056+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T08:42:19.175068+00:00] app.INFO: Done. [] []
[2021-01-12T08:42:19.175077+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T08:42:19.177389+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:42:19.190571+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:42:19.197135+00:00] doctrine.DEBUG: SELECT id FROM service WHERE name = "TestService" [] []
[2021-01-12T08:42:19.207132+00:00] request.INFO: Matched route "api_incidents_register_collection". {"route":"api_incidents_register_collection","route_parameters":{"_route":"api_incidents_register_collection","_controller":"App\\Controller\\Action\\Incident\\CreateIncident","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/incidents/create","method":"POST"} []
[2021-01-12T08:42:19.211463+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:42:19.211478+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.211508+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.213605+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.214784+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T08:42:19.215598+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.215747+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.215755+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:42:19.226413+00:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "The type of the "gravity" attribute must be "string", "array" given." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 379 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): The type of the \"gravity\" attribute must be \"string\", \"array\" given. at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:379)"} []
[2021-01-12T08:54:49.540867+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T08:54:49.541095+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:49.541113+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.541141+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.541513+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.541620+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:49.542195+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.542223+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.542229+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:49.545654+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:49.546311+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:50.183681+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"6c120686-2f03-4fcd-9182-b6a9524299cb"},"request_uri":"http://localhost/api/products/6c120686-2f03-4fcd-9182-b6a9524299cb","method":"DELETE"} []
[2021-01-12T08:54:50.184179+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:50.184190+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.184221+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.184669+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.188091+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:50.188651+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.188685+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.188691+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:50.191263+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["6c120686-2f03-4fcd-9182-b6 [...]"] []
[2021-01-12T08:54:50.195222+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:50.195462+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:51.219993+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T08:54:51.220430+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:51.220441+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.220466+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.220810+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.224314+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:51.224843+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.224871+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.224878+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:51.227781+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["a6c4af7c-bc6f-4f41-b75c-4d [...]"] []
[2021-01-12T08:54:51.231776+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:51.232036+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:52.252231+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"471d5ca7-bd11-4f69-9633-7ca9662cf037"},"request_uri":"http://localhost/api/services/471d5ca7-bd11-4f69-9633-7ca9662cf037","method":"DELETE"} []
[2021-01-12T08:54:52.252767+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:52.252781+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.252809+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.253196+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.256639+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:52.257363+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.257411+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.257422+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:52.260867+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["471d5ca7-bd11-4f69-9633-7c [...]"] []
[2021-01-12T08:54:52.265130+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:52.265388+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:53.145089+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"0989f9a3-9029-4f7a-b9d6-01aaafcecc88"},"request_uri":"http://localhost/api/services/0989f9a3-9029-4f7a-b9d6-01aaafcecc88","method":"PUT"} []
[2021-01-12T08:54:53.145546+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:53.145557+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.145581+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.145895+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.149060+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:53.149603+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.149630+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.149636+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.153650+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["0989f9a3-9029-4f7a-b9d6-01 [...]"] []
[2021-01-12T08:54:53.158261+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:53.158508+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:53.314495+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T08:54:53.314871+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:53.314881+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.314903+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.315233+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.318611+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:53.319412+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.319442+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.319449+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:53.322855+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:53.323092+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.081188+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"ae34eebf-a90b-4fde-a0b4-e411c18748c2"},"request_uri":"http://localhost/api/users/ae34eebf-a90b-4fde-a0b4-e411c18748c2","method":"DELETE"} []
[2021-01-12T08:54:54.081673+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:54.081683+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.081707+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.082025+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.085470+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:54.086075+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.086103+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.086110+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.087407+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["ae34eebf-a90b-4fde-a0b4-e4 [...]"] []
[2021-01-12T08:54:54.090256+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.090508+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.665131+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"68f1c21a-a844-4f1d-9f56-0e8411fc3524"},"request_uri":"http://localhost/api/users/68f1c21a-a844-4f1d-9f56-0e8411fc3524","method":"GET"} []
[2021-01-12T08:54:54.665620+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:54.665631+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.665655+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.665970+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.669361+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:54.670181+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.670211+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.670218+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.671624+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["68f1c21a-a844-4f1d-9f56-0e [...]"] []
[2021-01-12T08:54:54.674617+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.681104+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.707053+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T08:54:54.707698+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:54.707711+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.707738+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.708079+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.711339+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:54.711987+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.712015+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.712022+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:54.715167+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:54.715416+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:55.556591+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"b7f76310-9e82-4f75-a890-a0ebca948043"},"request_uri":"http://localhost/api/users/b7f76310-9e82-4f75-a890-a0ebca948043","method":"PUT"} []
[2021-01-12T08:54:55.557054+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T08:54:55.557066+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.557091+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.557477+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.560623+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T08:54:55.561154+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.561180+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.561187+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T08:54:55.562333+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["b7f76310-9e82-4f75-a890-a0 [...]"] []
[2021-01-12T08:54:55.564853+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T08:54:55.565138+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:31.368186+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T09:32:31.368437+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:31.368449+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.368477+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.368885+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.369022+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:31.369745+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.369775+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.369782+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:31.374713+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:31.375622+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:32.034018+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"40a1e6c9-33f6-4f30-9db9-237198c2978e"},"request_uri":"http://localhost/api/products/40a1e6c9-33f6-4f30-9db9-237198c2978e","method":"DELETE"} []
[2021-01-12T09:32:32.034445+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:32.034456+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.034482+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.034808+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.039534+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:32.040114+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.040142+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.040149+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:32.042441+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["40a1e6c9-33f6-4f30-9db9-23 [...]"] []
[2021-01-12T09:32:32.052272+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:32.052579+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:33.016321+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T09:32:33.016865+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:33.016877+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.016905+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.017364+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.021849+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:33.022852+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.022884+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.022891+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.026792+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["2311d509-c59c-4ff6-8ff8-30 [...]"] []
[2021-01-12T09:32:33.032152+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:33.032429+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:33.994793+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"9d653951-840a-4fb3-9d12-3b9c3271685e"},"request_uri":"http://localhost/api/services/9d653951-840a-4fb3-9d12-3b9c3271685e","method":"DELETE"} []
[2021-01-12T09:32:33.995216+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:33.995226+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.995251+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.995579+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.999278+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:33.999955+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.999992+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:33.999999+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.005401+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9d653951-840a-4fb3-9d12-3b [...]"] []
[2021-01-12T09:32:34.011708+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:34.012011+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:34.954151+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"ccc69873-b41b-4f0b-bad0-4654a731d3c1"},"request_uri":"http://localhost/api/services/ccc69873-b41b-4f0b-bad0-4654a731d3c1","method":"PUT"} []
[2021-01-12T09:32:34.954717+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:34.954730+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.954761+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.955168+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.959032+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:34.959609+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.959641+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.959648+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:34.963147+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["ccc69873-b41b-4f0b-bad0-46 [...]"] []
[2021-01-12T09:32:34.967556+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:34.967865+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:35.282772+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T09:32:35.283205+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:35.283216+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.283240+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.283572+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.287344+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:35.288244+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.288278+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.288285+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:35.292400+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:35.292647+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.123023+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"ba5cf1a9-e7f3-4f40-9443-55656b993938"},"request_uri":"http://localhost/api/users/ba5cf1a9-e7f3-4f40-9443-55656b993938","method":"DELETE"} []
[2021-01-12T09:32:36.123708+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:36.123725+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.123762+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.124183+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.127995+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:36.128688+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.128721+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.128730+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.130077+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["ba5cf1a9-e7f3-4f40-9443-55 [...]"] []
[2021-01-12T09:32:36.132914+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.133311+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.758359+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"4d41612b-82d1-4fd5-a33e-61048d4a0ed1"},"request_uri":"http://localhost/api/users/4d41612b-82d1-4fd5-a33e-61048d4a0ed1","method":"GET"} []
[2021-01-12T09:32:36.758802+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:36.758812+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.758836+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.759166+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.762604+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:36.763203+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.763231+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.763237+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.764459+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4d41612b-82d1-4fd5-a33e-61 [...]"] []
[2021-01-12T09:32:36.767092+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.767329+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.800082+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T09:32:36.800588+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:36.800599+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.800623+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.800958+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.804845+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:36.805667+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.805698+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.805705+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:36.809194+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:36.809488+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:37.664981+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"f8208d8c-c47c-4fc0-852e-6b6585b21f8c"},"request_uri":"http://localhost/api/users/f8208d8c-c47c-4fc0-852e-6b6585b21f8c","method":"PUT"} []
[2021-01-12T09:32:37.665386+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:32:37.665396+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.665420+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.665733+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.668982+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:32:37.669703+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.669735+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.669742+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:32:37.676761+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["f8208d8c-c47c-4fc0-852e-6b [...]"] []
[2021-01-12T09:32:37.679532+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:32:37.679769+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:37:45.661426+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T09:37:45.662719+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:37:45.664128+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:37:45.664897+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:37:45.665511+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T09:37:45.666966+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:37:45.667692+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:37:45.668898+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:37:45.669743+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T09:37:45.671244+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:37:45.672018+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:37:45.672746+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:37:45.673409+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T09:37:45.674701+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:37:45.675496+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:37:45.676299+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:37:45.676874+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T09:37:45.678219+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:37:45.679009+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:37:45.679715+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:37:45.680309+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T09:37:45.681496+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T09:37:45.686614+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T09:37:45.691810+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T09:37:45.696487+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T09:37:45.700622+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T09:37:45.706248+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T09:37:45.711000+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T09:37:45.717813+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T09:37:45.725063+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:37:45.743217+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:37:45.755264+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:37:45.766008+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:37:45.778806+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:37:45.788911+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T09:37:45.811094+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T09:37:45.834129+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T09:37:45.864597+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T09:37:45.867660+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T09:37:45.868206+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T09:37:45.869215+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T09:37:45.883679+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T09:37:45.896169+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T09:37:45.908184+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T09:37:45.923009+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T09:37:45.936755+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T09:37:45.961124+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T09:37:45.978248+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T09:37:45.978648+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T09:37:45.980193+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T09:37:45.984077+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"c184ae98-9f2a-4ff7-b007-9c [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T09:37:45+00:00","7":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.985689+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"4f22e77c-2a56-4ff2-95da-15 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T09:37:45+00:00","7":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.986151+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"b59df7b2-1039-4f36-8f53-bd [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T09:37:45+00:00","7":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.986550+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"75bf8747-affe-4f5a-8f23-4e [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T09:37:45+00:00","5":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.987753+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"38b0830d-6190-4f9c-aaac-f3 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T09:37:45+00:00","5":"2021-01-12T09:37:45+00:00","6":"75bf8747-affe-4f5a-8f23-4e [...]"} []
[2021-01-12T09:37:45.988676+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"b5473a7d-b7f8-4f8d-933a-f1 [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T09:37:45+00:00","5":"2021-01-12T09:37:45+00:00","6":"75bf8747-affe-4f5a-8f23-4e [...]"} []
[2021-01-12T09:37:45.989245+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"9e2150fc-5e03-4fb1-816e-1f [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T09:37:45+00:00","6":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.989908+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"c6babd7d-9b58-4f3a-8ccb-5e [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T09:37:45+00:00","6":"2021-01-12T09:37:45+00:00"} []
[2021-01-12T09:37:45.990052+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T09:37:45.991251+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T09:37:45.991258+00:00] app.INFO: Done. [] []
[2021-01-12T09:37:45.991267+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T09:37:45.993389+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T09:37:46.006449+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:37:46.012868+00:00] doctrine.DEBUG: SELECT id FROM incident WHERE name = "TestIncidentBaja" [] []
[2021-01-12T09:37:46.023774+00:00] request.INFO: Matched route "api_incidents_put_item". {"route":"api_incidents_put_item","route_parameters":{"_route":"api_incidents_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"put","id":"c184ae98-9f2a-4ff7-b007-9c9494d349cf"},"request_uri":"http://localhost/api/incidents/c184ae98-9f2a-4ff7-b007-9c9494d349cf","method":"PUT"} []
[2021-01-12T09:37:46.027276+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:37:46.027291+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.027322+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.029579+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.030913+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T09:37:46.031896+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.032068+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.032076+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:37:46.048491+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["c184ae98-9f2a-4ff7-b007-9c [...]"] []
[2021-01-12T09:37:46.058000+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2021-01-12T09:39:33.768820+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T09:39:33.770750+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:33.772461+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:33.773450+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:33.774204+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T09:39:33.775790+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:33.776420+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:33.777220+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:33.778038+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T09:39:33.779592+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:33.780278+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:33.780893+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:33.781412+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T09:39:33.782728+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:33.783476+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:33.784425+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:33.785419+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T09:39:33.787324+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:33.788375+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:33.789075+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:33.789662+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T09:39:33.791175+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T09:39:33.796077+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T09:39:33.801016+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T09:39:33.806512+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T09:39:33.811249+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T09:39:33.815287+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T09:39:33.820610+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T09:39:33.825782+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T09:39:33.832007+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:33.842422+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:33.853071+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:33.862923+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:33.872655+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:33.881195+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T09:39:33.903389+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T09:39:33.924502+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T09:39:33.953338+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T09:39:33.956464+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T09:39:33.956909+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T09:39:33.957637+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T09:39:33.970752+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T09:39:33.981378+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T09:39:33.992439+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T09:39:34.006367+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T09:39:34.016731+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T09:39:34.041893+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T09:39:34.059297+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T09:39:34.059712+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T09:39:34.061135+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T09:39:34.065327+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"3c896f29-0192-4ffc-90f0-40 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T09:39:34+00:00","7":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.066493+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"2131321a-6041-4f53-8c2d-0a [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T09:39:34+00:00","7":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.066811+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"ce41cd2f-84a8-4f76-8d43-96 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T09:39:34+00:00","7":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.067786+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"5005959c-f36c-4f82-911e-dc [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T09:39:34+00:00","5":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.069084+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"46cd8b94-259a-4f83-892f-35 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T09:39:34+00:00","5":"2021-01-12T09:39:34+00:00","6":"5005959c-f36c-4f82-911e-dc [...]"} []
[2021-01-12T09:39:34.069757+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"19852297-b951-4f94-b78e-23 [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T09:39:34+00:00","5":"2021-01-12T09:39:34+00:00","6":"5005959c-f36c-4f82-911e-dc [...]"} []
[2021-01-12T09:39:34.070007+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"a31b13e8-5423-4f78-a6b2-c5 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T09:39:34+00:00","6":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.070562+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"38c7abbc-d7c1-4f28-acb6-fe [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T09:39:34+00:00","6":"2021-01-12T09:39:34+00:00"} []
[2021-01-12T09:39:34.070693+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T09:39:34.192487+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T09:39:34.192521+00:00] app.INFO: Done. [] []
[2021-01-12T09:39:34.192547+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T09:39:34.195854+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T09:39:34.209701+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:39:34.216356+00:00] doctrine.DEBUG: SELECT id FROM incident WHERE name = "TestIncidentBaja" [] []
[2021-01-12T09:39:34.227194+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"3c896f29-0192-4ffc-90f0-4004b382d513"},"request_uri":"http://localhost/api/incidents/3c896f29-0192-4ffc-90f0-4004b382d513","method":"DELETE"} []
[2021-01-12T09:39:34.230995+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:39:34.231010+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.231041+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.233545+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.235246+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:39:34.236127+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.236295+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.236303+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:34.252969+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["3c896f29-0192-4ffc-90f0-40 [...]"] []
[2021-01-12T09:39:34.260201+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:39:34.262229+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:39:42.302673+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T09:39:42.303803+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:42.305374+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:42.306201+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:42.306954+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T09:39:42.308482+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:42.309104+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:42.309946+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:42.310647+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T09:39:42.312140+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:42.312898+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:42.313608+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:42.314179+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T09:39:42.315568+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:42.316334+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:42.317090+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:42.317815+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T09:39:42.319492+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T09:39:42.320539+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T09:39:42.321453+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T09:39:42.322164+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T09:39:42.323695+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T09:39:42.328515+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T09:39:42.332813+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T09:39:42.338594+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T09:39:42.343449+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T09:39:42.347532+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T09:39:42.352283+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T09:39:42.356699+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T09:39:42.364572+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:42.375599+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:42.386613+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:42.396340+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:42.407109+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T09:39:42.415464+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T09:39:42.436511+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T09:39:42.456681+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T09:39:42.485624+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T09:39:42.488738+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T09:39:42.489193+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T09:39:42.489905+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T09:39:42.502706+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T09:39:42.514442+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T09:39:42.525975+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T09:39:42.538575+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T09:39:42.549003+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T09:39:42.573105+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T09:39:42.590739+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T09:39:42.591139+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T09:39:42.592413+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T09:39:42.596237+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"39dc936d-7660-4f2b-8755-52 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T09:39:42+00:00","7":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.597281+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"02c4e44d-8118-4ff2-aef2-a5 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T09:39:42+00:00","7":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.597570+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"a2b9debe-cdf5-4fe7-8f8a-1d [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T09:39:42+00:00","7":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.597924+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"01aa214c-4e39-4f7c-8479-ee [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T09:39:42+00:00","5":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.598819+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"efe2584d-6479-4fdb-bd0f-54 [...]","2":"TestService","3":"Funcional","4":"2021-01-12T09:39:42+00:00","5":"2021-01-12T09:39:42+00:00","6":"01aa214c-4e39-4f7c-8479-ee [...]"} []
[2021-01-12T09:39:42.599598+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"aef900e7-cc8e-4ff5-9742-9d [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T09:39:42+00:00","5":"2021-01-12T09:39:42+00:00","6":"01aa214c-4e39-4f7c-8479-ee [...]"} []
[2021-01-12T09:39:42.599989+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"07159957-f9c8-4f02-9733-d1 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T09:39:42+00:00","6":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.601120+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"983930fc-f213-4f26-b70d-87 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T09:39:42+00:00","6":"2021-01-12T09:39:42+00:00"} []
[2021-01-12T09:39:42.601346+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T09:39:42.602908+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T09:39:42.602915+00:00] app.INFO: Done. [] []
[2021-01-12T09:39:42.602924+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T09:39:42.605082+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T09:39:42.618174+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:39:42.625066+00:00] doctrine.DEBUG: SELECT id FROM incident WHERE name = "TestIncidentBaja" [] []
[2021-01-12T09:39:42.635796+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"39dc936d-7660-4f2b-8755-52f0e985f82c"},"request_uri":"http://localhost/api/incidents/39dc936d-7660-4f2b-8755-52f0e985f82c","method":"DELETE"} []
[2021-01-12T09:39:42.639271+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:39:42.639285+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.639311+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.641437+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.642653+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:39:42.643491+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.643638+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.643646+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:39:42.660516+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["39dc936d-7660-4f2b-8755-52 [...]"] []
[2021-01-12T09:39:42.668363+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:39:42.670218+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:37.159454+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"8af0b549-613b-4ff1-bfef-0e60cf815656"},"request_uri":"http://localhost/api/incidents/8af0b549-613b-4ff1-bfef-0e60cf815656","method":"DELETE"} []
[2021-01-12T09:51:37.159730+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:37.159741+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.159767+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.160147+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.160252+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:37.161058+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.161085+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.161091+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:37.161695+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["8af0b549-613b-4ff1-bfef-0e [...]"] []
[2021-01-12T09:51:37.164159+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:37.164875+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:41.001218+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T09:51:41.001609+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:41.001619+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.001640+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.001927+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.004917+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:41.005528+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.005552+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.005558+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.009168+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:41.009433+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:41.650054+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"7292b4a5-13df-4f0f-8ae0-fb67b57e8f41"},"request_uri":"http://localhost/api/products/7292b4a5-13df-4f0f-8ae0-fb67b57e8f41","method":"DELETE"} []
[2021-01-12T09:51:41.650528+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:41.650539+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.650563+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.650895+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.654184+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:41.654747+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.654814+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.654820+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:41.657013+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["7292b4a5-13df-4f0f-8ae0-fb [...]"] []
[2021-01-12T09:51:41.661424+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:41.661682+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:42.579141+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T09:51:42.579699+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:42.579711+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.579735+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.580075+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.583417+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:42.583981+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.584008+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.584014+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:42.586894+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["58aacdaa-e74a-4f97-81ba-a5 [...]"] []
[2021-01-12T09:51:42.590846+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:42.591250+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:43.512770+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"9f3d36ae-3e8d-4f88-a180-e14b9ea940c2"},"request_uri":"http://localhost/api/services/9f3d36ae-3e8d-4f88-a180-e14b9ea940c2","method":"DELETE"} []
[2021-01-12T09:51:43.513238+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:43.513252+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.513276+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.513615+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.522765+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:43.523301+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.523327+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.523333+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:43.527254+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9f3d36ae-3e8d-4f88-a180-e1 [...]"] []
[2021-01-12T09:51:43.531650+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:43.531899+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:45.202390+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"72e039c5-ace6-4f9b-bb46-78bf75ae89e6"},"request_uri":"http://localhost/api/services/72e039c5-ace6-4f9b-bb46-78bf75ae89e6","method":"PUT"} []
[2021-01-12T09:51:45.202785+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:45.202795+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.202817+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.203112+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.206151+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:45.206708+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.206734+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.206740+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.210246+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["72e039c5-ace6-4f9b-bb46-78 [...]"] []
[2021-01-12T09:51:45.215077+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:45.215312+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:45.394816+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T09:51:45.395269+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:45.395279+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.395302+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.395611+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.399167+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:45.399724+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.399750+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.399756+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:45.403405+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:45.403845+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.151289+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"2142a99b-be0f-4f01-bd36-09f219a7f5fb"},"request_uri":"http://localhost/api/users/2142a99b-be0f-4f01-bd36-09f219a7f5fb","method":"DELETE"} []
[2021-01-12T09:51:46.151715+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:46.151725+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.151749+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.152090+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.155295+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:46.155791+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.155817+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.155823+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.156988+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["2142a99b-be0f-4f01-bd36-09 [...]"] []
[2021-01-12T09:51:46.160222+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.160488+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.798339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"a726af09-910a-4fa0-ac9c-ca481b8c75ab"},"request_uri":"http://localhost/api/users/a726af09-910a-4fa0-ac9c-ca481b8c75ab","method":"GET"} []
[2021-01-12T09:51:46.798787+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:46.798798+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.798821+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.799160+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.802762+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:46.803293+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.803320+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.803326+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.804547+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["a726af09-910a-4fa0-ac9c-ca [...]"] []
[2021-01-12T09:51:46.807267+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.807515+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.834738+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T09:51:46.835400+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:46.835411+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.835436+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.835764+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.839182+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:46.839721+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.839747+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.839753+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:46.842805+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:46.843082+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:47.726858+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"259fc107-9dd0-4f23-956c-eaf6345e050d"},"request_uri":"http://localhost/api/users/259fc107-9dd0-4f23-956c-eaf6345e050d","method":"PUT"} []
[2021-01-12T09:51:47.727303+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T09:51:47.727313+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.727339+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.727677+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.730893+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T09:51:47.731473+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.731503+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.731509+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T09:51:47.732656+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["259fc107-9dd0-4f23-956c-ea [...]"] []
[2021-01-12T09:51:47.735315+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T09:51:47.735558+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:03:28.880283+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-01-12T10:03:28.881591+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T10:03:28.883185+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident' */ WHERE k.table_name = 'incident' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T10:03:28.883861+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T10:03:28.884377+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident' [] []
[2021-01-12T10:03:28.886014+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'incident_service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T10:03:28.887028+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'incident_service' */ WHERE k.table_name = 'incident_service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T10:03:28.887853+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'incident_service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T10:03:28.888642+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'incident_service' [] []
[2021-01-12T10:03:28.890194+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T10:03:28.890955+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T10:03:28.891620+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T10:03:28.892176+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2021-01-12T10:03:28.893175+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'service' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T10:03:28.894011+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'service' */ WHERE k.table_name = 'service' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T10:03:28.894794+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'service' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T10:03:28.895405+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'service' [] []
[2021-01-12T10:03:28.896643+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'nodriza-status_db_test' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2021-01-12T10:03:28.897502+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'nodriza-status_db_test' /*!50116 AND c.constraint_schema = 'nodriza-status_db_test' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-01-12T10:03:28.898226+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'nodriza-status_db_test' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-01-12T10:03:28.898860+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2021-01-12T10:03:28.900230+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800F59E53FB9 [] []
[2021-01-12T10:03:28.905716+00:00] doctrine.DEBUG: ALTER TABLE incident_service DROP FOREIGN KEY FK_4657800FED5CA9E6 [] []
[2021-01-12T10:03:28.911275+00:00] doctrine.DEBUG: ALTER TABLE service DROP FOREIGN KEY FK_E19D9AD24584665A [] []
[2021-01-12T10:03:28.917073+00:00] doctrine.DEBUG: DROP TABLE incident [] []
[2021-01-12T10:03:28.922681+00:00] doctrine.DEBUG: DROP TABLE incident_service [] []
[2021-01-12T10:03:28.927575+00:00] doctrine.DEBUG: DROP TABLE product [] []
[2021-01-12T10:03:28.934235+00:00] doctrine.DEBUG: DROP TABLE service [] []
[2021-01-12T10:03:28.938925+00:00] doctrine.DEBUG: DROP TABLE user [] []
[2021-01-12T10:03:28.946104+00:00] doctrine.DEBUG: CREATE TABLE `user` (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D6495E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T10:03:28.956858+00:00] doctrine.DEBUG: CREATE TABLE service (id VARCHAR(255) NOT NULL, product_id VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_E19D9AD25E237E06 (name), INDEX IDX_E19D9AD24584665A (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T10:03:28.970444+00:00] doctrine.DEBUG: CREATE TABLE incident (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, information VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, gravity VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_3D03A11A5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T10:03:28.980343+00:00] doctrine.DEBUG: CREATE TABLE incident_service (incident_id VARCHAR(255) NOT NULL, service_id VARCHAR(255) NOT NULL, INDEX IDX_4657800F59E53FB9 (incident_id), INDEX IDX_4657800FED5CA9E6 (service_id), PRIMARY KEY(incident_id, service_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T10:03:28.991211+00:00] doctrine.DEBUG: CREATE TABLE product (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, state VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_D34A04AD5E237E06 (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-01-12T10:03:29.000770+00:00] doctrine.DEBUG: ALTER TABLE service ADD CONSTRAINT FK_E19D9AD24584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2021-01-12T10:03:29.023036+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800F59E53FB9 FOREIGN KEY (incident_id) REFERENCES incident (id) ON DELETE CASCADE [] []
[2021-01-12T10:03:29.044111+00:00] doctrine.DEBUG: ALTER TABLE incident_service ADD CONSTRAINT FK_4657800FED5CA9E6 FOREIGN KEY (service_id) REFERENCES service (id) ON DELETE CASCADE [] []
[2021-01-12T10:03:29.074477+00:00] app.INFO: fixtures found {"files":["/home/sergio/Sites/NODRIZAstatus/fixtures/Incident.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Product.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/Service.yaml","/home/sergio/Sites/NODRIZAstatus/fixtures/User.yaml"]} []
[2021-01-12T10:03:29.077756+00:00] app.INFO: Purging database with purge mode "TRUNCATE_MODE". [] []
[2021-01-12T10:03:29.078221+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 0; [] []
[2021-01-12T10:03:29.078931+00:00] doctrine.DEBUG: TRUNCATE incident_service [] []
[2021-01-12T10:03:29.091819+00:00] doctrine.DEBUG: TRUNCATE `user` [] []
[2021-01-12T10:03:29.102920+00:00] doctrine.DEBUG: TRUNCATE incident [] []
[2021-01-12T10:03:29.115354+00:00] doctrine.DEBUG: TRUNCATE service [] []
[2021-01-12T10:03:29.130489+00:00] doctrine.DEBUG: TRUNCATE product [] []
[2021-01-12T10:03:29.143793+00:00] doctrine.DEBUG: SET FOREIGN_KEY_CHECKS = 1; [] []
[2021-01-12T10:03:29.173406+00:00] app.INFO: Loading fixtures. [] []
[2021-01-12T10:03:29.193067+00:00] app.INFO: Pre-processing objects. [] []
[2021-01-12T10:03:29.193574+00:00] app.INFO: Flushing objects. [] []
[2021-01-12T10:03:29.194896+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-01-12T10:03:29.198632+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"3d44d0df-2732-4f60-aca2-13 [...]","2":"TestIncidentBaja","3":"Información","4":"En Investigación","5":"Baja","6":"2021-01-12T10:03:29+00:00","7":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.199625+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"fb940fa2-1a46-4fa1-98e6-c9 [...]","2":"TestIncidentMedia","3":"Información","4":"En Investigación","5":"Media","6":"2021-01-12T10:03:29+00:00","7":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.199830+00:00] doctrine.DEBUG: INSERT INTO incident (id, name, information, state, gravity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"d0f8220a-5698-4fb9-a4c3-63 [...]","2":"TestIncidentCrítica","3":"Información","4":"En Investigación","5":"Crítica","6":"2021-01-12T10:03:29+00:00","7":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.200149+00:00] doctrine.DEBUG: INSERT INTO product (id, name, state, created_at, updated_at) VALUES (?, ?, ?, ?, ?) {"1":"37eb680e-204b-4f85-97a3-29 [...]","2":"TestProduct","3":"Funcional","4":"2021-01-12T10:03:29+00:00","5":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.201251+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"198247a1-84d0-4f02-80dd-6b [...]","2":"TestService","3":"Funcional","4":"2021-01-12T10:03:29+00:00","5":"2021-01-12T10:03:29+00:00","6":"37eb680e-204b-4f85-97a3-29 [...]"} []
[2021-01-12T10:03:29.202116+00:00] doctrine.DEBUG: INSERT INTO service (id, name, state, created_at, updated_at, product_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"554b14ba-3a98-4fc3-a952-f4 [...]","2":"TestService2","3":"Funcional","4":"2021-01-12T10:03:29+00:00","5":"2021-01-12T10:03:29+00:00","6":"37eb680e-204b-4f85-97a3-29 [...]"} []
[2021-01-12T10:03:29.202435+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"fb7c256e-c178-4fe6-9044-e0 [...]","2":"Peter","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_ADMIN"],"5":"2021-01-12T10:03:29+00:00","6":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.203074+00:00] doctrine.DEBUG: INSERT INTO `user` (id, name, password, roles, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?) {"1":"61a0467d-ccaf-4f52-8663-53 [...]","2":"Brian","3":"$argon2i$v=19$m=16,t=2,p=1 [...]","4":["ROLE_EMPRESA_TUUP"],"5":"2021-01-12T10:03:29+00:00","6":"2021-01-12T10:03:29+00:00"} []
[2021-01-12T10:03:29.203252+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-01-12T10:03:29.204560+00:00] app.INFO: Post-processing objects. [] []
[2021-01-12T10:03:29.204578+00:00] app.INFO: Done. [] []
[2021-01-12T10:03:29.204644+00:00] app.INFO: fixtures loaded [] []
[2021-01-12T10:03:29.207140+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T10:03:29.220924+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:03:29.227856+00:00] doctrine.DEBUG: SELECT id FROM product WHERE name = "TestProduct" [] []
[2021-01-12T10:03:29.239034+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:03:29.243474+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:03:29.243491+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.243527+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.245974+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.247412+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Peter"] []
[2021-01-12T10:03:29.248355+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Peter\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.248523+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.248531+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:03:29.261892+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Invalid IRI "37eb680e-204b-4f85-97a3-2913bdbf17ba"." at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 431 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Invalid IRI \"37eb680e-204b-4f85-97a3-2913bdbf17ba\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:431)\n[previous exception] [object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): No route matches \"37eb680e-204b-4f85-97a3-2913bdbf17ba\". at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:77)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/37eb680e-204b-4f85-97a3-2913bdbf17ba/\". at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-01-12T10:21:22.062991+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"09b97f24-b48a-4fc1-8319-dd7008071726"},"request_uri":"http://localhost/api/incidents/09b97f24-b48a-4fc1-8319-dd7008071726","method":"DELETE"} []
[2021-01-12T10:21:22.063231+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:22.063243+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.063271+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.063688+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.063808+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:22.064714+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.064748+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.064759+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:22.065518+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["09b97f24-b48a-4fc1-8319-dd [...]"] []
[2021-01-12T10:21:22.068632+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:22.069502+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:26.317910+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:21:26.318351+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:26.318361+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.318385+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.318714+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.322302+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:26.322918+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.322945+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.322952+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.326461+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:26.326719+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:26.950789+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"d8e4cf02-2372-4ff6-affa-73ec8dc3c6f0"},"request_uri":"http://localhost/api/products/d8e4cf02-2372-4ff6-affa-73ec8dc3c6f0","method":"DELETE"} []
[2021-01-12T10:21:26.951219+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:26.951231+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.951255+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.951580+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.954885+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:26.955382+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.955407+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.955413+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:26.957920+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["d8e4cf02-2372-4ff6-affa-73 [...]"] []
[2021-01-12T10:21:26.962257+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:26.969660+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:27.986292+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:21:27.986700+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:27.986710+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.986737+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.987058+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.990263+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:27.990788+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.990823+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.990830+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:27.993622+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["fd15c14e-c128-4f86-89b4-17 [...]"] []
[2021-01-12T10:21:27.998103+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:27.998399+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:28.946591+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"4e69ed49-48fa-4fd9-bc9f-8132a9c8ad40"},"request_uri":"http://localhost/api/services/4e69ed49-48fa-4fd9-bc9f-8132a9c8ad40","method":"DELETE"} []
[2021-01-12T10:21:28.947118+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:28.947131+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.947159+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.947531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.950908+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:28.951436+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.951467+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.951474+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:28.954984+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["4e69ed49-48fa-4fd9-bc9f-81 [...]"] []
[2021-01-12T10:21:28.959216+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:28.959502+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:30.596498+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"afbd1bec-857b-4f1b-ae0a-02c122df201a"},"request_uri":"http://localhost/api/services/afbd1bec-857b-4f1b-ae0a-02c122df201a","method":"PUT"} []
[2021-01-12T10:21:30.596997+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:30.597010+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.597071+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.597514+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.601169+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:30.601764+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.601792+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.601799+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.605412+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["afbd1bec-857b-4f1b-ae0a-02 [...]"] []
[2021-01-12T10:21:30.609494+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:30.609729+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:30.756702+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:21:30.757118+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:30.757128+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.757152+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.757466+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.760581+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:30.761125+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.761148+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.761154+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:30.764509+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:30.764802+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:31.590064+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"b431a92d-3476-4f3a-8a35-b1e0eb7293cd"},"request_uri":"http://localhost/api/users/b431a92d-3476-4f3a-8a35-b1e0eb7293cd","method":"DELETE"} []
[2021-01-12T10:21:31.590468+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:31.590478+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.590501+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.590843+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.594035+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:31.594553+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.594580+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.594586+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:31.595826+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["b431a92d-3476-4f3a-8a35-b1 [...]"] []
[2021-01-12T10:21:31.598925+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:31.599211+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:32.185145+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"89e6bd12-b546-4f9b-8b1e-8a4b3986b387"},"request_uri":"http://localhost/api/users/89e6bd12-b546-4f9b-8b1e-8a4b3986b387","method":"GET"} []
[2021-01-12T10:21:32.185567+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:32.185577+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.185600+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.185913+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.189229+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:32.189841+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.189868+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.189875+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.191149+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["89e6bd12-b546-4f9b-8b1e-8a [...]"] []
[2021-01-12T10:21:32.193693+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:32.193934+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:32.221320+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:21:32.221852+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:32.221882+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.221904+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.222195+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.225604+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:32.226217+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.226243+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.226249+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:32.237670+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:32.238076+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:33.080053+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"111f629b-e27f-4fec-9f14-c071e0f95bcd"},"request_uri":"http://localhost/api/users/111f629b-e27f-4fec-9f14-c071e0f95bcd","method":"PUT"} []
[2021-01-12T10:21:33.080488+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:21:33.080499+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.080524+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.080868+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.084198+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:21:33.084757+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.084783+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.084789+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:21:33.086081+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["111f629b-e27f-4fec-9f14-c0 [...]"] []
[2021-01-12T10:21:33.088641+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:21:33.088882+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:40.365448+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"6e193694-f893-4ffe-8fb8-4e2e65addd21"},"request_uri":"http://localhost/api/incidents/6e193694-f893-4ffe-8fb8-4e2e65addd21","method":"DELETE"} []
[2021-01-12T10:24:40.365644+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:40.365654+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.365680+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.366037+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.366133+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:40.366664+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.366690+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.366696+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:40.367263+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["6e193694-f893-4ffe-8fb8-4e [...]"] []
[2021-01-12T10:24:40.369767+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:40.370436+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:44.482547+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:24:44.482958+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:44.482969+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.482992+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.483316+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.486601+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:44.487124+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.487151+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.487157+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:44.491492+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:44.491907+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:45.087840+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"c21f988e-243d-4f79-bbf7-ddf75fa2a998"},"request_uri":"http://localhost/api/products/c21f988e-243d-4f79-bbf7-ddf75fa2a998","method":"DELETE"} []
[2021-01-12T10:24:45.088241+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:45.088251+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.088274+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.088585+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.091896+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:45.092408+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.092434+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.092440+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:45.094958+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["c21f988e-243d-4f79-bbf7-dd [...]"] []
[2021-01-12T10:24:45.099621+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:45.107172+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:46.082152+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:24:46.082577+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:46.082589+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.082613+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.082937+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.086250+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:46.086802+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.086829+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.086835+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.089653+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["f0032a84-901f-4f3f-80f1-b9 [...]"] []
[2021-01-12T10:24:46.093477+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:46.093721+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:46.987999+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"9743c19a-398a-4fbf-a0ee-47f5372ef89a"},"request_uri":"http://localhost/api/services/9743c19a-398a-4fbf-a0ee-47f5372ef89a","method":"DELETE"} []
[2021-01-12T10:24:46.988407+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:46.988418+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.988443+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.988757+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.992019+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:46.992803+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.992842+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.992851+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:46.998143+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9743c19a-398a-4fbf-a0ee-47 [...]"] []
[2021-01-12T10:24:47.002939+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:47.003192+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:48.627798+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"e312bf19-f0ea-4fd2-acd8-33f4e0119910"},"request_uri":"http://localhost/api/services/e312bf19-f0ea-4fd2-acd8-33f4e0119910","method":"PUT"} []
[2021-01-12T10:24:48.628248+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:48.628260+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.628286+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.628656+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.632273+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:48.632800+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.632827+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.632834+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.636357+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["e312bf19-f0ea-4fd2-acd8-33 [...]"] []
[2021-01-12T10:24:48.640581+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:48.640841+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:48.787367+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:24:48.787777+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:48.787787+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.787808+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.788093+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.791386+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:48.791967+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.791991+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.791997+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:48.795319+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:48.795700+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:49.566409+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"4da1d865-30d3-4f67-be39-598aab60a06a"},"request_uri":"http://localhost/api/users/4da1d865-30d3-4f67-be39-598aab60a06a","method":"DELETE"} []
[2021-01-12T10:24:49.566824+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:49.566835+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.566859+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.567183+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.570651+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:49.571192+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.571225+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.571231+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:49.572407+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4da1d865-30d3-4f67-be39-59 [...]"] []
[2021-01-12T10:24:49.575038+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:49.575303+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:50.154651+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"19e00e1d-7bf8-4fa8-9db5-4c6f0ee5ab47"},"request_uri":"http://localhost/api/users/19e00e1d-7bf8-4fa8-9db5-4c6f0ee5ab47","method":"GET"} []
[2021-01-12T10:24:50.155088+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:50.155099+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.155123+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.155437+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.158836+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:50.159383+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.159410+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.159416+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.160755+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["19e00e1d-7bf8-4fa8-9db5-4c [...]"] []
[2021-01-12T10:24:50.164142+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:50.164447+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:50.191304+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:24:50.191737+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:50.191747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.191769+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.192096+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.195652+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:50.196327+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.196357+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.196365+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:50.207455+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:50.207832+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:51.038043+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"f487563d-8ade-4fc0-ba97-448885d2a45c"},"request_uri":"http://localhost/api/users/f487563d-8ade-4fc0-ba97-448885d2a45c","method":"PUT"} []
[2021-01-12T10:24:51.038442+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:24:51.038466+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.038490+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.038804+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.041890+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:24:51.042440+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.042479+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.042486+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:24:51.044077+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["f487563d-8ade-4fc0-ba97-44 [...]"] []
[2021-01-12T10:24:51.047320+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:24:51.047573+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:08.394157+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"e217e37a-def9-4f69-b74c-362d7dc159ed"},"request_uri":"http://localhost/api/incidents/e217e37a-def9-4f69-b74c-362d7dc159ed","method":"DELETE"} []
[2021-01-12T10:36:08.394358+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:08.394368+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.394394+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.394755+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.394854+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:08.395404+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.395430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.395436+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:08.396015+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["e217e37a-def9-4f69-b74c-36 [...]"] []
[2021-01-12T10:36:08.398412+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:08.399110+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:12.635210+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:36:12.635617+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:12.635627+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.635651+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.635975+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.639561+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:12.641377+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.641414+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.641421+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:12.645486+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:12.645730+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:13.295716+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"f1612149-50ff-4f4e-88f7-e0488cb9ba15"},"request_uri":"http://localhost/api/products/f1612149-50ff-4f4e-88f7-e0488cb9ba15","method":"DELETE"} []
[2021-01-12T10:36:13.296135+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:13.296145+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.296170+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.296498+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.299796+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:13.300340+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.300367+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.300373+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:13.302630+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["f1612149-50ff-4f4e-88f7-e0 [...]"] []
[2021-01-12T10:36:13.307319+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:13.307592+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:14.233669+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:36:14.234112+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:14.234123+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.234147+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.234468+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.237614+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:14.238150+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.238187+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.238194+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:14.241798+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["58def468-b564-4f71-a1f4-86 [...]"] []
[2021-01-12T10:36:14.246432+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:14.246697+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:15.179117+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"924d2e92-ed29-4fd9-ab59-c26ef406e783"},"request_uri":"http://localhost/api/services/924d2e92-ed29-4fd9-ab59-c26ef406e783","method":"DELETE"} []
[2021-01-12T10:36:15.179568+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:15.179580+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.179606+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.179946+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.183198+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:15.183699+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.183726+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.183732+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:15.187132+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["924d2e92-ed29-4fd9-ab59-c2 [...]"] []
[2021-01-12T10:36:15.191607+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:15.191918+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:16.923065+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"2e4cddcf-04fe-4fd3-9e39-71cd62afbe3e"},"request_uri":"http://localhost/api/services/2e4cddcf-04fe-4fd3-9e39-71cd62afbe3e","method":"PUT"} []
[2021-01-12T10:36:16.923543+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:16.923555+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.923585+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.923941+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.927631+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:16.928222+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.928253+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.928260+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:16.931763+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2e4cddcf-04fe-4fd3-9e39-71 [...]"] []
[2021-01-12T10:36:16.936875+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:16.937178+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:17.087657+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:36:17.088121+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:17.088133+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.088158+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.088497+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.092292+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:17.093007+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.093044+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.093052+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.096888+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:17.097235+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:17.895496+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"058326da-90fd-4fea-bf0b-18e5fddbc03a"},"request_uri":"http://localhost/api/users/058326da-90fd-4fea-bf0b-18e5fddbc03a","method":"DELETE"} []
[2021-01-12T10:36:17.896059+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:17.896078+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.896128+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.896537+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.900014+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:17.900542+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.900568+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.900574+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:17.901808+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["058326da-90fd-4fea-bf0b-18 [...]"] []
[2021-01-12T10:36:17.904377+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:17.904617+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:18.551517+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"b606b930-655a-4f16-b9ce-7fcc68ac2cc5"},"request_uri":"http://localhost/api/users/b606b930-655a-4f16-b9ce-7fcc68ac2cc5","method":"GET"} []
[2021-01-12T10:36:18.551986+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:18.551997+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.552022+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.552354+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.556109+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:18.557052+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.557093+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.557103+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.559035+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["b606b930-655a-4f16-b9ce-7f [...]"] []
[2021-01-12T10:36:18.562451+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:18.562714+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:18.592513+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:36:18.593199+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:18.593215+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.593249+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.593666+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.597391+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:18.598069+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.598100+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.598107+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:18.601424+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:18.601729+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:19.551137+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"5b6f4323-3a6a-4f69-8a66-9d8b981217b2"},"request_uri":"http://localhost/api/users/5b6f4323-3a6a-4f69-8a66-9d8b981217b2","method":"PUT"} []
[2021-01-12T10:36:19.551587+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:36:19.551598+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.551623+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.551950+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.555175+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:36:19.555784+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.555812+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.555818+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:36:19.557468+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["5b6f4323-3a6a-4f69-8a66-9d [...]"] []
[2021-01-12T10:36:19.560754+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:36:19.561069+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:06.436238+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"d3c40aa4-5ea2-4ff0-aaa5-2aaccac65293"},"request_uri":"http://localhost/api/incidents/d3c40aa4-5ea2-4ff0-aaa5-2aaccac65293","method":"DELETE"} []
[2021-01-12T10:37:06.436438+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:06.436448+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.436472+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.436826+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.436921+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:06.437456+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.437480+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.437486+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:06.438074+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["d3c40aa4-5ea2-4ff0-aaa5-2a [...]"] []
[2021-01-12T10:37:06.440985+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:06.442002+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:10.748835+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:37:10.749247+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:10.749258+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.749281+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.749589+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.753214+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:10.753810+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.753836+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.753842+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:10.757639+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:10.757994+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:11.395846+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"97c9158a-3446-4fb0-9431-ab2880e7af25"},"request_uri":"http://localhost/api/products/97c9158a-3446-4fb0-9431-ab2880e7af25","method":"DELETE"} []
[2021-01-12T10:37:11.396255+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:11.396266+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.396290+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.396609+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.399893+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:11.400393+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.400419+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.400425+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:11.402877+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["97c9158a-3446-4fb0-9431-ab [...]"] []
[2021-01-12T10:37:11.407452+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:11.407713+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:12.488104+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:37:12.488550+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:12.488561+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.488585+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.488924+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.492516+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:12.493125+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.493152+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.493158+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:12.496059+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["74f13481-4876-4fc8-98e2-6d [...]"] []
[2021-01-12T10:37:12.500140+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:12.500375+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:13.419174+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"dc3194fd-7580-4f6b-b94d-c23b6c3ba8cc"},"request_uri":"http://localhost/api/services/dc3194fd-7580-4f6b-b94d-c23b6c3ba8cc","method":"DELETE"} []
[2021-01-12T10:37:13.419731+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:13.419747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.419787+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.420186+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.423821+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:13.424526+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.424560+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.424567+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:13.429435+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["dc3194fd-7580-4f6b-b94d-c2 [...]"] []
[2021-01-12T10:37:13.434622+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:13.434927+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:15.092702+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"06d1b730-9f38-4fcb-8767-9290658ed57d"},"request_uri":"http://localhost/api/services/06d1b730-9f38-4fcb-8767-9290658ed57d","method":"PUT"} []
[2021-01-12T10:37:15.093248+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:15.093263+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.093292+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.093690+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.097269+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:15.097810+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.097839+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.097845+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.101319+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["06d1b730-9f38-4fcb-8767-92 [...]"] []
[2021-01-12T10:37:15.106019+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:15.106432+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:15.252358+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:37:15.252732+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:15.252742+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.252763+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.253130+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.256210+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:15.256979+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.257041+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.257049+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:15.261267+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:15.261512+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.064478+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"57572c5f-2607-4ff2-b4f7-86acef643142"},"request_uri":"http://localhost/api/users/57572c5f-2607-4ff2-b4f7-86acef643142","method":"DELETE"} []
[2021-01-12T10:37:16.064906+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:16.064916+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.064958+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.065326+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.068903+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:16.069682+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.069712+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.069718+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.071048+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["57572c5f-2607-4ff2-b4f7-86 [...]"] []
[2021-01-12T10:37:16.074687+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.074963+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.740885+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"2ce04f4d-d570-4fe3-a102-fd988c635098"},"request_uri":"http://localhost/api/users/2ce04f4d-d570-4fe3-a102-fd988c635098","method":"GET"} []
[2021-01-12T10:37:16.741361+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:16.741372+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.741397+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.741729+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.745105+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:16.745947+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.745974+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.745980+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.747128+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["2ce04f4d-d570-4fe3-a102-fd [...]"] []
[2021-01-12T10:37:16.749695+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.749937+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.776357+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:37:16.776956+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:16.776972+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.777000+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.777368+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.780925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:16.781684+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.781725+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.781732+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:16.784822+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:16.785152+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:17.704024+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"6738bf52-5f42-4ffd-8da8-6940bf89bd08"},"request_uri":"http://localhost/api/users/6738bf52-5f42-4ffd-8da8-6940bf89bd08","method":"PUT"} []
[2021-01-12T10:37:17.704569+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:17.704586+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.704624+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.705156+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.709836+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:17.710575+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.710603+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.710610+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:17.712297+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["6738bf52-5f42-4ffd-8da8-69 [...]"] []
[2021-01-12T10:37:17.715436+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:17.715697+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:34.427912+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"69c9a193-12ea-4f8b-849e-0e8c9c4605fd"},"request_uri":"http://localhost/api/incidents/69c9a193-12ea-4f8b-849e-0e8c9c4605fd","method":"DELETE"} []
[2021-01-12T10:37:34.428255+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:34.428268+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.428310+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.428732+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.428838+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:34.429620+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.429647+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.429653+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:34.430357+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["69c9a193-12ea-4f8b-849e-0e [...]"] []
[2021-01-12T10:37:34.433438+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:34.434427+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:38.623579+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:37:38.624271+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:38.624286+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.624314+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.624897+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.629285+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:38.630136+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.630165+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.630171+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:38.633670+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:38.633908+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:39.325285+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"0093e136-807e-4fb2-81a8-ff66abe008c4"},"request_uri":"http://localhost/api/products/0093e136-807e-4fb2-81a8-ff66abe008c4","method":"DELETE"} []
[2021-01-12T10:37:39.325818+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:39.325831+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.325859+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.326246+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.329683+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:39.330387+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.330416+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.330423+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:39.332748+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["0093e136-807e-4fb2-81a8-ff [...]"] []
[2021-01-12T10:37:39.336899+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:39.337175+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:40.264588+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:37:40.265069+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:40.265090+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.265116+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.265481+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.268793+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:40.269344+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.269371+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.269377+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:40.272703+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["86b6cd42-6308-4fe8-bbba-49 [...]"] []
[2021-01-12T10:37:40.277028+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:40.277398+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:41.244042+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"e249d0b6-a28d-4fa8-8827-65cbe39e8123"},"request_uri":"http://localhost/api/services/e249d0b6-a28d-4fa8-8827-65cbe39e8123","method":"DELETE"} []
[2021-01-12T10:37:41.244558+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:41.244569+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.244594+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.244924+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.248147+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:41.248660+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.248693+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.248699+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:41.252158+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["e249d0b6-a28d-4fa8-8827-65 [...]"] []
[2021-01-12T10:37:41.256680+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:41.257015+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:42.936009+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"135083d9-157e-4f59-b188-cf239818bdba"},"request_uri":"http://localhost/api/services/135083d9-157e-4f59-b188-cf239818bdba","method":"PUT"} []
[2021-01-12T10:37:42.936443+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:42.936454+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.936480+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.936854+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.941378+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:42.942069+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.942096+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.942103+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:42.946163+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["135083d9-157e-4f59-b188-cf [...]"] []
[2021-01-12T10:37:42.951094+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:42.951346+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:43.109796+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:37:43.110231+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:43.110243+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.110272+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.110622+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.114138+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:43.114755+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.114779+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.114785+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.118017+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:43.118254+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:43.921888+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"4d1313b1-99a9-4f7d-ae66-a5a301c988ac"},"request_uri":"http://localhost/api/users/4d1313b1-99a9-4f7d-ae66-a5a301c988ac","method":"DELETE"} []
[2021-01-12T10:37:43.922407+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:43.922425+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.922461+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.922959+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.927256+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:43.927826+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.927858+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.927869+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:43.929756+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4d1313b1-99a9-4f7d-ae66-a5 [...]"] []
[2021-01-12T10:37:43.934031+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:43.934446+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:44.573426+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"996f6f4b-66dc-4f0a-817c-a9e84a132eca"},"request_uri":"http://localhost/api/users/996f6f4b-66dc-4f0a-817c-a9e84a132eca","method":"GET"} []
[2021-01-12T10:37:44.573989+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:44.574001+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.574028+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.574391+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.578269+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:44.578958+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.578986+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.578992+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.580234+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["996f6f4b-66dc-4f0a-817c-a9 [...]"] []
[2021-01-12T10:37:44.582868+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:44.583144+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:44.613461+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:37:44.613966+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:44.613977+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.614002+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.614327+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.617727+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:44.618228+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.618254+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.618259+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:44.621328+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:44.621583+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:45.593022+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"3704ed0e-9504-4fd9-8ec7-c30221eabeb0"},"request_uri":"http://localhost/api/users/3704ed0e-9504-4fd9-8ec7-c30221eabeb0","method":"PUT"} []
[2021-01-12T10:37:45.593538+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:45.593582+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.593621+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.594095+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.597707+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:45.598318+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.598345+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.598351+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:45.599862+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["3704ed0e-9504-4fd9-8ec7-c3 [...]"] []
[2021-01-12T10:37:45.603116+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:45.603380+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:58.993797+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"9377b318-571f-4f6f-a012-e1e156fa1297"},"request_uri":"http://localhost/api/incidents/9377b318-571f-4f6f-a012-e1e156fa1297","method":"DELETE"} []
[2021-01-12T10:37:58.993999+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:37:58.994009+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.994055+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.994420+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.994518+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:37:58.995043+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.995070+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.995076+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:37:58.995675+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["9377b318-571f-4f6f-a012-e1 [...]"] []
[2021-01-12T10:37:58.998373+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:37:58.999152+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:03.532349+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:38:03.532967+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:03.532982+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.533012+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.533415+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.537395+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:03.538184+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.538222+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.538230+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:03.542983+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:03.543321+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:04.230755+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"4a3a5f69-9f14-4fb9-aa5e-40a696c2bb59"},"request_uri":"http://localhost/api/products/4a3a5f69-9f14-4fb9-aa5e-40a696c2bb59","method":"DELETE"} []
[2021-01-12T10:38:04.231342+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:04.231356+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.231388+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.231794+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.235620+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:04.236402+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.236439+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.236446+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:04.239493+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["4a3a5f69-9f14-4fb9-aa5e-40 [...]"] []
[2021-01-12T10:38:04.244554+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:04.244852+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:05.337866+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:38:05.338486+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:05.338498+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.338525+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.338919+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.342649+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:05.343229+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.343259+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.343266+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:05.346292+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["39772ca9-9fa3-4fa9-a3a3-3c [...]"] []
[2021-01-12T10:38:05.350688+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:05.350925+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:06.275379+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"37aad13f-0ccd-4fb1-bfad-6b6fa655e54d"},"request_uri":"http://localhost/api/services/37aad13f-0ccd-4fb1-bfad-6b6fa655e54d","method":"DELETE"} []
[2021-01-12T10:38:06.275975+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:06.275988+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.276037+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.276411+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.280210+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:06.280786+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.280813+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.280820+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:06.284785+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["37aad13f-0ccd-4fb1-bfad-6b [...]"] []
[2021-01-12T10:38:06.289637+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:06.290045+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:07.944436+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"a63afef1-93f3-4f8a-950a-48c419ca72ff"},"request_uri":"http://localhost/api/services/a63afef1-93f3-4f8a-950a-48c419ca72ff","method":"PUT"} []
[2021-01-12T10:38:07.944858+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:07.944869+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.944893+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.945376+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.948606+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:07.949154+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.949182+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.949189+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:07.952805+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["a63afef1-93f3-4f8a-950a-48 [...]"] []
[2021-01-12T10:38:07.957780+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:07.958116+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:08.107481+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:38:08.107948+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:08.107960+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.107988+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.108354+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.112070+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:08.112806+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.112838+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.112845+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.116423+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:08.116698+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:08.906134+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"4386eb60-aa58-4f59-9177-5458c7caac8f"},"request_uri":"http://localhost/api/users/4386eb60-aa58-4f59-9177-5458c7caac8f","method":"DELETE"} []
[2021-01-12T10:38:08.906638+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:08.906650+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.906676+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.907049+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.910649+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:08.911292+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.911321+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.911327+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:08.912815+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4386eb60-aa58-4f59-9177-54 [...]"] []
[2021-01-12T10:38:08.915957+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:08.916217+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:09.532509+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"47ba5468-8d7c-4f86-acd4-5df9c4273745"},"request_uri":"http://localhost/api/users/47ba5468-8d7c-4f86-acd4-5df9c4273745","method":"GET"} []
[2021-01-12T10:38:09.533073+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:09.533089+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.533136+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.533533+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.537359+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:09.538182+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.538219+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.538227+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.540321+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["47ba5468-8d7c-4f86-acd4-5d [...]"] []
[2021-01-12T10:38:09.543374+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:09.543645+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:09.570457+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:38:09.571012+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:09.571024+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.571052+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.571477+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.575496+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:09.576081+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.576110+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.576117+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:09.579283+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:09.579635+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:10.760732+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"e2c8f8c3-d065-4f66-bdd9-d6b30024cdbb"},"request_uri":"http://localhost/api/users/e2c8f8c3-d065-4f66-bdd9-d6b30024cdbb","method":"PUT"} []
[2021-01-12T10:38:10.761206+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:10.761218+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.761244+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.761588+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.765108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:10.765751+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.765780+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.765787+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:10.767088+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["e2c8f8c3-d065-4f66-bdd9-d6 [...]"] []
[2021-01-12T10:38:10.769760+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:10.769992+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:26.121116+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"cb59b4b7-ec72-4fba-bb6f-13101165bfaa"},"request_uri":"http://localhost/api/incidents/cb59b4b7-ec72-4fba-bb6f-13101165bfaa","method":"DELETE"} []
[2021-01-12T10:38:26.121331+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:26.121341+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.121366+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.121756+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.121857+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:26.122492+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.122519+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.122525+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:26.123167+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["cb59b4b7-ec72-4fba-bb6f-13 [...]"] []
[2021-01-12T10:38:26.126055+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:26.126820+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:30.640754+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:38:30.641375+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:30.641397+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.641433+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.641897+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.645658+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:30.646282+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.646311+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.646318+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:30.650094+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:30.650344+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:31.322901+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"dd62155d-d0f3-4f30-aa96-aa60d00bebbb"},"request_uri":"http://localhost/api/products/dd62155d-d0f3-4f30-aa96-aa60d00bebbb","method":"DELETE"} []
[2021-01-12T10:38:31.323473+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:31.323487+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.323515+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.323923+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.327776+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:31.328415+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.328443+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.328450+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:31.331205+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["dd62155d-d0f3-4f30-aa96-aa [...]"] []
[2021-01-12T10:38:31.335214+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:31.335475+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:32.326421+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:38:32.326893+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:32.326904+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.326929+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.327261+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.330493+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:32.331055+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.331081+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.331088+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:32.334008+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["264d18a2-605d-4f6b-b405-c7 [...]"] []
[2021-01-12T10:38:32.338210+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:32.338532+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:33.344600+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"34454af3-632d-4f0d-a123-1c9c63ac56ee"},"request_uri":"http://localhost/api/services/34454af3-632d-4f0d-a123-1c9c63ac56ee","method":"DELETE"} []
[2021-01-12T10:38:33.345071+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:33.345082+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.345107+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.345478+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.348637+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:33.349153+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.349179+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.349186+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:33.352617+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["34454af3-632d-4f0d-a123-1c [...]"] []
[2021-01-12T10:38:33.357726+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:33.358145+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:35.030894+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"536a81ba-7df3-4f70-b8fa-d62151a0e06c"},"request_uri":"http://localhost/api/services/536a81ba-7df3-4f70-b8fa-d62151a0e06c","method":"PUT"} []
[2021-01-12T10:38:35.031353+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:35.031365+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.031401+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.031764+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.035263+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:35.035806+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.035834+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.035845+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.040643+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["536a81ba-7df3-4f70-b8fa-d6 [...]"] []
[2021-01-12T10:38:35.045148+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:35.045464+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:35.200815+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:38:35.201250+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:35.201260+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.201284+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.201612+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.205029+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:35.205959+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.205992+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.206001+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:35.209373+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:35.209712+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.052066+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"a213a213-4180-4f1b-9891-7fdf0c1ab299"},"request_uri":"http://localhost/api/users/a213a213-4180-4f1b-9891-7fdf0c1ab299","method":"DELETE"} []
[2021-01-12T10:38:36.052485+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:36.052496+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.052519+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.052903+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.056377+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:36.057103+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.057132+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.057139+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.058615+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["a213a213-4180-4f1b-9891-7f [...]"] []
[2021-01-12T10:38:36.061527+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.061787+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.730281+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"ce7ea5a7-807a-4f93-abac-455bb3740d03"},"request_uri":"http://localhost/api/users/ce7ea5a7-807a-4f93-abac-455bb3740d03","method":"GET"} []
[2021-01-12T10:38:36.730764+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:36.730775+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.730800+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.731155+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.734677+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:36.735319+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.735346+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.735352+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.736639+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["ce7ea5a7-807a-4f93-abac-45 [...]"] []
[2021-01-12T10:38:36.740214+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.740467+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.768370+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:38:36.769008+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:36.769019+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.769044+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.769381+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.773299+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:36.773934+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.773965+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.773972+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:36.777200+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:36.777494+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:37.618213+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"98dd596c-61bd-4fcb-b554-4a367833a636"},"request_uri":"http://localhost/api/users/98dd596c-61bd-4fcb-b554-4a367833a636","method":"PUT"} []
[2021-01-12T10:38:37.618624+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:37.618634+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.618660+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.618977+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.622163+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:37.622821+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.622850+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.622863+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:37.624343+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["98dd596c-61bd-4fcb-b554-4a [...]"] []
[2021-01-12T10:38:37.627591+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:37.627848+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:53.900348+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"780a60bc-d12d-4fcf-9b80-3b85e89654f0"},"request_uri":"http://localhost/api/incidents/780a60bc-d12d-4fcf-9b80-3b85e89654f0","method":"DELETE"} []
[2021-01-12T10:38:53.900548+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:53.900559+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.900585+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.900961+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.901050+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:53.901538+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.901564+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.901570+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:53.902130+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["780a60bc-d12d-4fcf-9b80-3b [...]"] []
[2021-01-12T10:38:53.904589+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:53.905468+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:58.291688+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:38:58.292210+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:58.292221+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.292247+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.292608+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.296149+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:58.296697+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.296730+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.296736+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.300669+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:58.300950+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:58.947473+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"442df25d-6c01-4f70-b146-6bfc32dd8d9a"},"request_uri":"http://localhost/api/products/442df25d-6c01-4f70-b146-6bfc32dd8d9a","method":"DELETE"} []
[2021-01-12T10:38:58.947878+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:58.947891+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.947917+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.948231+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.951283+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:58.951792+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.951819+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.951826+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:58.954125+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["442df25d-6c01-4f70-b146-6b [...]"] []
[2021-01-12T10:38:58.958685+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:58.958964+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:59.911843+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:38:59.912247+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:38:59.912257+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.912280+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.912593+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.915748+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:38:59.916305+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.916332+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.916338+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:38:59.919133+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["3e53f252-b88d-4f7b-90df-3f [...]"] []
[2021-01-12T10:38:59.923376+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:38:59.923651+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:00.931031+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"7a48dc09-f576-4fa3-bf94-8c00370a788c"},"request_uri":"http://localhost/api/services/7a48dc09-f576-4fa3-bf94-8c00370a788c","method":"DELETE"} []
[2021-01-12T10:39:00.931601+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:00.931625+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.931652+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.932019+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.935534+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:00.936171+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.936199+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.936205+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:00.940421+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["7a48dc09-f576-4fa3-bf94-8c [...]"] []
[2021-01-12T10:39:00.945199+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:00.945458+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:02.702515+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"4c4dd568-2596-4f1c-b88f-b5593cf56307"},"request_uri":"http://localhost/api/services/4c4dd568-2596-4f1c-b88f-b5593cf56307","method":"PUT"} []
[2021-01-12T10:39:02.702926+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:02.702936+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.702959+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.703280+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.707129+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:02.707697+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.707724+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.707731+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.711367+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["4c4dd568-2596-4f1c-b88f-b5 [...]"] []
[2021-01-12T10:39:02.715893+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:02.716138+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:02.869635+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:39:02.870001+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:02.870010+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.870031+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.870440+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.874510+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:02.875004+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.875028+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.875034+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:02.878230+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:02.878493+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:03.675259+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"ef18becb-61cd-4faf-ae83-4d1d59c13fc6"},"request_uri":"http://localhost/api/users/ef18becb-61cd-4faf-ae83-4d1d59c13fc6","method":"DELETE"} []
[2021-01-12T10:39:03.675777+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:03.675789+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.675819+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.676228+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.679872+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:03.680430+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.680457+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.680464+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:03.681729+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["ef18becb-61cd-4faf-ae83-4d [...]"] []
[2021-01-12T10:39:03.684867+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:03.685237+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:04.299873+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"8d43fde7-723f-4f8f-9a13-4119873dea63"},"request_uri":"http://localhost/api/users/8d43fde7-723f-4f8f-9a13-4119873dea63","method":"GET"} []
[2021-01-12T10:39:04.300335+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:04.300346+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.300371+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.300707+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.304346+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:04.305589+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.305627+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.305635+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.307098+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["8d43fde7-723f-4f8f-9a13-41 [...]"] []
[2021-01-12T10:39:04.310190+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:04.310454+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:04.341173+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:39:04.341774+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:04.341786+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.341812+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.342160+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.345693+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:04.346416+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.346454+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.346463+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:04.350612+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:04.350983+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:05.308766+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"c01c2f75-91fa-4fc7-9e50-1fa672b7269e"},"request_uri":"http://localhost/api/users/c01c2f75-91fa-4fc7-9e50-1fa672b7269e","method":"PUT"} []
[2021-01-12T10:39:05.309256+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:05.309267+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.309291+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.309659+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.312797+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:05.313349+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.313376+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.313382+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:05.314637+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c01c2f75-91fa-4fc7-9e50-1f [...]"] []
[2021-01-12T10:39:05.317277+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:05.317504+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:28.918336+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"7c3f218c-4f58-4f12-a9bb-aaf31219fa72"},"request_uri":"http://localhost/api/incidents/7c3f218c-4f58-4f12-a9bb-aaf31219fa72","method":"DELETE"} []
[2021-01-12T10:39:28.918526+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:39:28.918536+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.918560+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.918908+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.918995+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:39:28.919458+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.919483+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.919489+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:39:28.920041+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["7c3f218c-4f58-4f12-a9bb-aa [...]"] []
[2021-01-12T10:39:28.922869+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:39:28.923791+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:49.856969+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"14fa03eb-f1ca-4f44-96dd-59e3cb530a02"},"request_uri":"http://localhost/api/incidents/14fa03eb-f1ca-4f44-96dd-59e3cb530a02","method":"DELETE"} []
[2021-01-12T10:42:49.857224+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:49.857236+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.857262+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.857628+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.857729+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:49.858419+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.858445+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.858451+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:49.859029+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["14fa03eb-f1ca-4f44-96dd-59 [...]"] []
[2021-01-12T10:42:49.861623+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:49.862399+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:54.271847+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:42:54.272515+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:54.272532+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.272567+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.272974+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.276498+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:54.277176+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.277208+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.277215+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.281606+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:54.281861+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:54.950490+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"5171e5be-fe88-4f20-b54c-13337abf6ee2"},"request_uri":"http://localhost/api/products/5171e5be-fe88-4f20-b54c-13337abf6ee2","method":"DELETE"} []
[2021-01-12T10:42:54.950897+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:54.950908+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.950932+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.951248+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.954620+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:54.955337+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.955366+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.955373+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:54.958039+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["5171e5be-fe88-4f20-b54c-13 [...]"] []
[2021-01-12T10:42:54.962277+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:54.962506+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:55.981649+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:42:55.982066+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:55.982077+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.982100+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.982414+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.985633+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:55.986157+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.986184+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.986190+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:55.989389+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["7db65d1b-76d6-4fc7-b9dd-77 [...]"] []
[2021-01-12T10:42:55.993937+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:55.994184+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:57.006364+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"522e4441-3fae-4fba-a46e-b355a7631a43"},"request_uri":"http://localhost/api/services/522e4441-3fae-4fba-a46e-b355a7631a43","method":"DELETE"} []
[2021-01-12T10:42:57.006897+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:57.006915+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.006952+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.007317+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.011518+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:57.012221+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.012250+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.012257+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:57.016027+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["522e4441-3fae-4fba-a46e-b3 [...]"] []
[2021-01-12T10:42:57.020709+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:57.021006+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:58.774382+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"b2f64527-bdf6-4f98-b111-4d4975298731"},"request_uri":"http://localhost/api/services/b2f64527-bdf6-4f98-b111-4d4975298731","method":"PUT"} []
[2021-01-12T10:42:58.775072+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:58.775093+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.775136+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.775639+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.783255+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:58.783984+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.784014+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.784021+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.789360+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["b2f64527-bdf6-4f98-b111-4d [...]"] []
[2021-01-12T10:42:58.795525+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:58.795854+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:58.966085+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:42:58.966619+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:58.966631+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.966657+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.967020+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.971058+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:58.971655+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.971684+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.971690+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:58.975213+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:58.975469+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:59.843126+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"4bc59abb-c3c5-4f97-b556-5cc5a64464ab"},"request_uri":"http://localhost/api/users/4bc59abb-c3c5-4f97-b556-5cc5a64464ab","method":"DELETE"} []
[2021-01-12T10:42:59.843574+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:42:59.843584+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.843608+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.843932+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.847438+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:42:59.847959+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.847985+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.847992+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:42:59.849372+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4bc59abb-c3c5-4f97-b556-5c [...]"] []
[2021-01-12T10:42:59.851991+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:42:59.852238+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:00.504436+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"efb7f9bd-76ba-4f04-871b-991373f16826"},"request_uri":"http://localhost/api/users/efb7f9bd-76ba-4f04-871b-991373f16826","method":"GET"} []
[2021-01-12T10:43:00.504898+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:43:00.504909+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.504944+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.505347+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.508740+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:43:00.509347+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.509374+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.509380+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.510772+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["efb7f9bd-76ba-4f04-871b-99 [...]"] []
[2021-01-12T10:43:00.513405+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:00.513651+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:00.541321+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:43:00.541813+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:43:00.541824+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.541848+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.542175+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.545407+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:43:00.545965+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.545990+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.545997+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:00.549008+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:00.549250+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:01.502358+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"6e964f4e-d681-4f6d-b904-1f1e7b9e0cac"},"request_uri":"http://localhost/api/users/6e964f4e-d681-4f6d-b904-1f1e7b9e0cac","method":"PUT"} []
[2021-01-12T10:43:01.503208+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:43:01.503242+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.503271+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.503823+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.507561+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:43:01.508182+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.508210+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.508217+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:43:01.509584+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["6e964f4e-d681-4f6d-b904-1f [...]"] []
[2021-01-12T10:43:01.512227+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:43:01.512549+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:23.026863+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"e5aa10ad-d859-4fb0-9bc2-e655d06eedd4"},"request_uri":"http://localhost/api/incidents/e5aa10ad-d859-4fb0-9bc2-e655d06eedd4","method":"DELETE"} []
[2021-01-12T10:46:23.027062+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:23.027072+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.027096+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.027445+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.027532+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:23.028029+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.028055+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.028061+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:23.028615+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["e5aa10ad-d859-4fb0-9bc2-e6 [...]"] []
[2021-01-12T10:46:23.031046+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:23.031721+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:27.276974+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:46:27.277509+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:27.277520+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.277545+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.277875+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.281050+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:27.281558+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.281583+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.281589+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.285108+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:27.285388+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:27.909744+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"203a1138-f4d4-4fc7-b5fd-494b0ecf99c2"},"request_uri":"http://localhost/api/products/203a1138-f4d4-4fc7-b5fd-494b0ecf99c2","method":"DELETE"} []
[2021-01-12T10:46:27.910148+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:27.910158+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.910181+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.910496+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.913815+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:27.914340+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.914363+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.914369+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:27.916489+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["203a1138-f4d4-4fc7-b5fd-49 [...]"] []
[2021-01-12T10:46:27.920764+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:27.921121+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:28.854271+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:46:28.854967+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:28.854982+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.855010+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.855449+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.859406+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:28.859962+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.859989+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.859995+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:28.862811+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["f8fd3eb3-451d-4ffd-b58f-45 [...]"] []
[2021-01-12T10:46:28.867344+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:28.867763+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:29.782131+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"55e861cc-9df1-4ffc-9526-5a52eddb7dd8"},"request_uri":"http://localhost/api/services/55e861cc-9df1-4ffc-9526-5a52eddb7dd8","method":"DELETE"} []
[2021-01-12T10:46:29.782534+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:29.782545+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.782571+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.782884+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.786113+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:29.786801+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.786831+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.786838+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:29.790695+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["55e861cc-9df1-4ffc-9526-5a [...]"] []
[2021-01-12T10:46:29.795040+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:29.795289+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:31.399955+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"603f9c42-a192-4f85-a205-9da76fe2e684"},"request_uri":"http://localhost/api/services/603f9c42-a192-4f85-a205-9da76fe2e684","method":"PUT"} []
[2021-01-12T10:46:31.400413+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:31.400423+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.400446+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.400809+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.404547+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:31.405112+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.405139+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.405146+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.408613+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["603f9c42-a192-4f85-a205-9d [...]"] []
[2021-01-12T10:46:31.412766+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:31.413059+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:31.819003+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:46:31.819529+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:31.819543+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.819573+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.819950+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.823961+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:31.824623+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.824655+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.824664+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:31.827975+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:31.828233+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:32.576238+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"14b4d53d-b259-4f99-a117-3dfdf552f2f0"},"request_uri":"http://localhost/api/users/14b4d53d-b259-4f99-a117-3dfdf552f2f0","method":"DELETE"} []
[2021-01-12T10:46:32.576684+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:32.576695+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.576719+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.577059+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.581464+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:32.581982+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.582008+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.582014+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:32.583238+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["14b4d53d-b259-4f99-a117-3d [...]"] []
[2021-01-12T10:46:32.586166+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:32.586445+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:33.198095+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"dac6a88a-1efa-4f1f-8848-714e2ab26dbe"},"request_uri":"http://localhost/api/users/dac6a88a-1efa-4f1f-8848-714e2ab26dbe","method":"GET"} []
[2021-01-12T10:46:33.198513+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:33.198523+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.198547+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.198862+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.202549+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:33.203176+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.203205+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.203211+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.204485+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["dac6a88a-1efa-4f1f-8848-71 [...]"] []
[2021-01-12T10:46:33.207125+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:33.207396+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:33.232433+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:46:33.232927+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:33.232945+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.232999+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.233318+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.237305+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:33.238048+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.238092+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.238099+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:33.241166+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:33.241417+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:34.142354+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"877ebbd0-9934-4f87-a06e-24139653bb36"},"request_uri":"http://localhost/api/users/877ebbd0-9934-4f87-a06e-24139653bb36","method":"PUT"} []
[2021-01-12T10:46:34.142765+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:46:34.142775+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.142799+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.143112+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.146240+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:46:34.146800+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.146827+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.146833+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:46:34.148026+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["877ebbd0-9934-4f87-a06e-24 [...]"] []
[2021-01-12T10:46:34.150583+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:46:34.150826+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:08.627123+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"b66023bc-58c5-4f8a-8702-1e5e263ce971"},"request_uri":"http://localhost/api/incidents/b66023bc-58c5-4f8a-8702-1e5e263ce971","method":"DELETE"} []
[2021-01-12T10:47:08.627325+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:08.627336+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.627361+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.627728+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.627831+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:08.628370+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.628399+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.628405+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:08.629208+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["b66023bc-58c5-4f8a-8702-1e [...]"] []
[2021-01-12T10:47:08.631717+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:08.632390+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:13.039035+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:47:13.039463+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:13.039474+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.039498+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.039827+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.043259+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:13.043874+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.043905+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.043913+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.047536+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:13.047785+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:13.708599+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"de7c84f6-aed0-4f56-883b-4f2281137e1f"},"request_uri":"http://localhost/api/products/de7c84f6-aed0-4f56-883b-4f2281137e1f","method":"DELETE"} []
[2021-01-12T10:47:13.709029+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:13.709040+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.709064+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.709378+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.712445+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:13.712969+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.712995+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.713028+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:13.715354+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["de7c84f6-aed0-4f56-883b-4f [...]"] []
[2021-01-12T10:47:13.719533+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:13.719840+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:14.768582+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:47:14.769105+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:14.769117+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.769144+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.769498+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.772811+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:14.773567+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.773597+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.773603+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:14.776786+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["8c9225e0-8399-4f89-bdc2-c9 [...]"] []
[2021-01-12T10:47:14.781425+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:14.781677+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:15.710121+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"2c1eb155-f9f2-4ff1-941b-5fd06333ce16"},"request_uri":"http://localhost/api/services/2c1eb155-f9f2-4ff1-941b-5fd06333ce16","method":"DELETE"} []
[2021-01-12T10:47:15.710623+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:15.710634+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.710658+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.710977+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.714230+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:15.714769+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.714796+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.714802+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:15.718338+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2c1eb155-f9f2-4ff1-941b-5f [...]"] []
[2021-01-12T10:47:15.723424+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:15.723685+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:17.333428+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"34c2aa86-3879-4fa0-8bac-39b4650d0611"},"request_uri":"http://localhost/api/services/34c2aa86-3879-4fa0-8bac-39b4650d0611","method":"PUT"} []
[2021-01-12T10:47:17.333922+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:17.333933+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.333965+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.334371+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.338087+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:17.338660+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.338687+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.338694+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.342232+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["34c2aa86-3879-4fa0-8bac-39 [...]"] []
[2021-01-12T10:47:17.346457+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:17.346699+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:17.494014+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:47:17.494423+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:17.494433+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.494457+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.494786+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.498270+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:17.498788+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.498812+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.498825+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:17.502729+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:17.503003+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.254172+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"e04416d8-a293-4ffb-bcc0-0b541a9628cf"},"request_uri":"http://localhost/api/users/e04416d8-a293-4ffb-bcc0-0b541a9628cf","method":"DELETE"} []
[2021-01-12T10:47:18.254675+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:18.254687+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.254715+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.255100+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.258451+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:18.259012+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.259038+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.259045+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.260245+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["e04416d8-a293-4ffb-bcc0-0b [...]"] []
[2021-01-12T10:47:18.262991+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.263233+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.866137+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"4880a5d6-511f-4f3f-ac4e-f5dfa2215c77"},"request_uri":"http://localhost/api/users/4880a5d6-511f-4f3f-ac4e-f5dfa2215c77","method":"GET"} []
[2021-01-12T10:47:18.866582+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:18.866593+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.866618+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.867020+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.870803+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:18.871365+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.871396+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.871403+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.872603+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["4880a5d6-511f-4f3f-ac4e-f5 [...]"] []
[2021-01-12T10:47:18.875331+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.875578+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.902426+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:47:18.902942+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:18.902953+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.902979+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.903313+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.906833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:18.907539+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.907567+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.907574+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:18.910629+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:18.910866+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:19.758810+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"64d0c043-12b1-4f2f-ac0c-292a90fca21a"},"request_uri":"http://localhost/api/users/64d0c043-12b1-4f2f-ac0c-292a90fca21a","method":"PUT"} []
[2021-01-12T10:47:19.759286+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:19.759297+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.759323+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.759656+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.763062+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:19.763572+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.763597+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.763603+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:19.764797+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["64d0c043-12b1-4f2f-ac0c-29 [...]"] []
[2021-01-12T10:47:19.767625+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:19.767932+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:34.272915+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"ec13faa6-ab96-4f09-8ee6-5b9f06e00440"},"request_uri":"http://localhost/api/incidents/ec13faa6-ab96-4f09-8ee6-5b9f06e00440","method":"DELETE"} []
[2021-01-12T10:47:34.273207+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:34.273219+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.273245+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.273661+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.273763+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:34.274436+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.274462+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.274468+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:34.275065+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["ec13faa6-ab96-4f09-8ee6-5b [...]"] []
[2021-01-12T10:47:34.277551+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:34.278248+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:38.532191+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:47:38.532685+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:38.532697+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.532723+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.533090+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.537112+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:38.537954+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.537987+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.537995+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:38.542427+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:38.542764+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:39.193928+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"a571bb25-88f4-4fb3-a219-1c2976e91b26"},"request_uri":"http://localhost/api/products/a571bb25-88f4-4fb3-a219-1c2976e91b26","method":"DELETE"} []
[2021-01-12T10:47:39.194336+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:39.194347+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.194370+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.194685+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.197843+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:39.198381+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.198412+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.198419+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:39.201025+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["a571bb25-88f4-4fb3-a219-1c [...]"] []
[2021-01-12T10:47:39.205529+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:39.205784+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:40.161806+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:47:40.162214+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:40.162224+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.162248+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.162580+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.165670+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:40.166166+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.166191+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.166197+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:40.169706+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["b82f3c60-e027-4fbe-ab18-ac [...]"] []
[2021-01-12T10:47:40.174060+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:40.174311+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:41.143242+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"14a887d2-411a-4f4a-8ea2-65fa7c0cbea3"},"request_uri":"http://localhost/api/services/14a887d2-411a-4f4a-8ea2-65fa7c0cbea3","method":"DELETE"} []
[2021-01-12T10:47:41.143645+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:41.143655+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.143678+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.143993+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.147135+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:41.147625+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.147667+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.147673+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:41.151226+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["14a887d2-411a-4f4a-8ea2-65 [...]"] []
[2021-01-12T10:47:41.156040+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:41.156286+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:42.791722+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"2c259fc8-5616-4f07-8d01-2406638a0698"},"request_uri":"http://localhost/api/services/2c259fc8-5616-4f07-8d01-2406638a0698","method":"PUT"} []
[2021-01-12T10:47:42.792181+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:42.792192+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.792216+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.792545+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.795838+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:42.796395+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.796428+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.796435+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.799992+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["2c259fc8-5616-4f07-8d01-24 [...]"] []
[2021-01-12T10:47:42.804934+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:42.805279+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:42.954244+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:47:42.954714+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:42.954726+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.954752+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.955156+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.958778+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:42.959425+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.959450+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.959456+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:42.962836+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:42.963099+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:43.768218+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"1c308c81-9654-4f53-84d8-f260339149ee"},"request_uri":"http://localhost/api/users/1c308c81-9654-4f53-84d8-f260339149ee","method":"DELETE"} []
[2021-01-12T10:47:43.768726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:43.768737+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.768767+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.769158+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.772486+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:43.773093+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.773121+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.773129+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:43.774365+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["1c308c81-9654-4f53-84d8-f2 [...]"] []
[2021-01-12T10:47:43.776925+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:43.777204+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:44.341707+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"6a6ccbc8-b9f6-4f93-a9e9-e2f028d9f641"},"request_uri":"http://localhost/api/users/6a6ccbc8-b9f6-4f93-a9e9-e2f028d9f641","method":"GET"} []
[2021-01-12T10:47:44.342135+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:44.342145+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.342169+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.342487+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.345609+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:44.346182+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.346208+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.346215+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.347448+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["6a6ccbc8-b9f6-4f93-a9e9-e2 [...]"] []
[2021-01-12T10:47:44.350044+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:44.350274+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:44.377073+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:47:44.377607+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:44.377617+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.377640+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.377961+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.381057+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:44.381631+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.381658+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.381664+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:44.384646+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:44.384917+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:45.262627+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"b3f723d4-ac63-4fca-9804-a372a6aa7b5e"},"request_uri":"http://localhost/api/users/b3f723d4-ac63-4fca-9804-a372a6aa7b5e","method":"PUT"} []
[2021-01-12T10:47:45.263029+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:47:45.263040+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.263064+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.263377+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.266709+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:47:45.267569+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.267596+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.267615+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:47:45.269249+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["b3f723d4-ac63-4fca-9804-a3 [...]"] []
[2021-01-12T10:47:45.272060+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:47:45.272301+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:01.529436+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"256403fd-1b89-4fa0-9cc5-92a55d4128ec"},"request_uri":"http://localhost/api/incidents/256403fd-1b89-4fa0-9cc5-92a55d4128ec","method":"DELETE"} []
[2021-01-12T10:54:01.529700+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:01.529710+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.529738+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.530342+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.530562+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:01.531761+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.531788+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.531794+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:01.532510+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["256403fd-1b89-4fa0-9cc5-92 [...]"] []
[2021-01-12T10:54:01.535074+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:01.535798+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:05.894985+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:54:05.895436+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:05.895449+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.895480+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.895841+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.900164+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:05.900719+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.900747+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.900753+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:05.904190+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:05.904452+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:06.520277+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"f5861d1e-4f29-4ffa-8d79-8e4e221dafaa"},"request_uri":"http://localhost/api/products/f5861d1e-4f29-4ffa-8d79-8e4e221dafaa","method":"DELETE"} []
[2021-01-12T10:54:06.520702+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:06.520713+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.520738+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.521076+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.524412+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:06.525036+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.525065+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.525082+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:06.527428+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["f5861d1e-4f29-4ffa-8d79-8e [...]"] []
[2021-01-12T10:54:06.532016+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:06.532288+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:07.536821+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:54:07.537326+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:07.537337+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.537361+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.537709+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.540991+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:07.541591+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.541619+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.541625+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:07.544429+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["feea8d4f-acb6-4fed-bdcd-16 [...]"] []
[2021-01-12T10:54:07.548561+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:07.548866+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:08.551727+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"e168dd33-61de-4f40-ae17-0198d126cba8"},"request_uri":"http://localhost/api/services/e168dd33-61de-4f40-ae17-0198d126cba8","method":"DELETE"} []
[2021-01-12T10:54:08.552162+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:08.552174+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.552198+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.552531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.555875+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:08.556453+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.556480+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.556487+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:08.560095+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["e168dd33-61de-4f40-ae17-01 [...]"] []
[2021-01-12T10:54:08.565012+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:08.565410+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:10.210550+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"8b42044a-2334-4f49-a5e6-bc660dcf8cfc"},"request_uri":"http://localhost/api/services/8b42044a-2334-4f49-a5e6-bc660dcf8cfc","method":"PUT"} []
[2021-01-12T10:54:10.211198+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:10.211213+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.211244+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.211641+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.215449+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:10.216187+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.216220+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.216232+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.220047+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["8b42044a-2334-4f49-a5e6-bc [...]"] []
[2021-01-12T10:54:10.224563+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:10.224839+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:10.475247+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:54:10.475657+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:10.475667+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.475691+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.476005+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.479184+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:10.479701+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.479731+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.479737+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:10.483848+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:10.484184+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:11.476708+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"23e7d9ed-6510-4f12-843d-fc25e3fcb728"},"request_uri":"http://localhost/api/users/23e7d9ed-6510-4f12-843d-fc25e3fcb728","method":"DELETE"} []
[2021-01-12T10:54:11.477134+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:11.477144+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.477168+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.477480+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.480768+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:11.481424+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.481452+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.481459+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:11.482947+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["23e7d9ed-6510-4f12-843d-fc [...]"] []
[2021-01-12T10:54:11.486231+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:11.486494+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:12.146996+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"02f165b8-9dab-4f0c-a0a8-a320be3c2389"},"request_uri":"http://localhost/api/users/02f165b8-9dab-4f0c-a0a8-a320be3c2389","method":"GET"} []
[2021-01-12T10:54:12.147486+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:12.147499+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.147526+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.147887+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.151950+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:12.152585+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.152613+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.152619+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.153953+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["02f165b8-9dab-4f0c-a0a8-a3 [...]"] []
[2021-01-12T10:54:12.157281+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:12.157614+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:12.187781+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:54:12.188480+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:12.188495+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.188533+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.189039+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.192957+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:12.193674+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.193705+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.193712+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:12.197910+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:12.198281+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:13.201261+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"c95a9b5b-1f0c-4fe4-b2de-2167c1552815"},"request_uri":"http://localhost/api/users/c95a9b5b-1f0c-4fe4-b2de-2167c1552815","method":"PUT"} []
[2021-01-12T10:54:13.201686+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:13.201697+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.201721+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.202048+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.205548+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:13.206077+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.206108+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.206115+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:13.207357+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["c95a9b5b-1f0c-4fe4-b2de-21 [...]"] []
[2021-01-12T10:54:13.210196+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:13.210450+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:37.633893+00:00] request.INFO: Matched route "api_incidents_delete_item". {"route":"api_incidents_delete_item","route_parameters":{"_route":"api_incidents_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Incident","_api_item_operation_name":"delete","id":"7159b322-9d68-4ff3-aec4-e8c0767a6d4c"},"request_uri":"http://localhost/api/incidents/7159b322-9d68-4ff3-aec4-e8c0767a6d4c","method":"DELETE"} []
[2021-01-12T10:54:37.634097+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:37.634108+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.634133+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.634512+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.634614+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:37.635189+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.635214+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.635220+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:37.635816+00:00] doctrine.DEBUG: SELECT i0_.id AS id_0, i0_.name AS name_1, i0_.information AS information_2, i0_.state AS state_3, i0_.gravity AS gravity_4, i0_.created_at AS created_at_5, i0_.updated_at AS updated_at_6 FROM incident i0_ WHERE i0_.id = ? ["7159b322-9d68-4ff3-aec4-e8 [...]"] []
[2021-01-12T10:54:37.638470+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:37.639189+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an Incident" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an Incident at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:42.172645+00:00] request.INFO: Matched route "api_products_register_collection". {"route":"api_products_register_collection","route_parameters":{"_route":"api_products_register_collection","_controller":"App\\Controller\\Action\\Product\\CreateProduct","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/products/create","method":"POST"} []
[2021-01-12T10:54:42.173092+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:42.173103+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.173128+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.173448+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.176802+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:42.177691+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.177731+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.177736+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.182850+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:42.183309+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:42.811686+00:00] request.INFO: Matched route "api_products_delete_item". {"route":"api_products_delete_item","route_parameters":{"_route":"api_products_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Product","_api_item_operation_name":"delete","id":"10c61a14-ea4c-4f66-8466-90eb02564890"},"request_uri":"http://localhost/api/products/10c61a14-ea4c-4f66-8466-90eb02564890","method":"DELETE"} []
[2021-01-12T10:54:42.812084+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:42.812094+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.812117+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.812432+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.815814+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:42.816431+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.816461+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.816467+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:42.819027+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["10c61a14-ea4c-4f66-8466-90 [...]"] []
[2021-01-12T10:54:42.823013+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:42.823290+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Product" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Product at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:43.850741+00:00] request.INFO: Matched route "api_services_register_collection". {"route":"api_services_register_collection","route_parameters":{"_route":"api_services_register_collection","_controller":"App\\Controller\\Action\\Service\\CreateService","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/services/create","method":"POST"} []
[2021-01-12T10:54:43.851209+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:43.851220+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.851245+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.851589+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.854831+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:43.855377+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.855403+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.855409+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:43.858251+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.state AS state_2, p0_.created_at AS created_at_3, p0_.updated_at AS updated_at_4 FROM product p0_ WHERE p0_.id = ? ["376fec53-b25c-4f93-9ea5-f4 [...]"] []
[2021-01-12T10:54:43.862284+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:43.862649+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not create a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not create a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:44.783169+00:00] request.INFO: Matched route "api_services_delete_item". {"route":"api_services_delete_item","route_parameters":{"_route":"api_services_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"delete","id":"fe61b7b1-420a-4f16-9408-3028d19ba738"},"request_uri":"http://localhost/api/services/fe61b7b1-420a-4f16-9408-3028d19ba738","method":"DELETE"} []
[2021-01-12T10:54:44.783672+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:44.783684+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.783712+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.784110+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.787400+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:44.787939+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.787965+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.787972+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:44.791611+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["fe61b7b1-420a-4f16-9408-30 [...]"] []
[2021-01-12T10:54:44.795965+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:44.796292+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:46.405979+00:00] request.INFO: Matched route "api_services_put_item". {"route":"api_services_put_item","route_parameters":{"_route":"api_services_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Service","_api_item_operation_name":"put","id":"9cfe381b-5a4e-4f59-ba08-f01431a20f5c"},"request_uri":"http://localhost/api/services/9cfe381b-5a4e-4f59-ba08-f01431a20f5c","method":"PUT"} []
[2021-01-12T10:54:46.406399+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:46.406410+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.406435+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.406753+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.409889+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:46.410423+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.410449+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.410455+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:46.414810+00:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.state AS state_2, s0_.created_at AS created_at_3, s0_.updated_at AS updated_at_4, s0_.product_id AS product_id_5 FROM service s0_ WHERE s0_.id = ? ["9cfe381b-5a4e-4f59-ba08-f0 [...]"] []
[2021-01-12T10:54:46.419910+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:46.420173+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update a Service" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update a Service at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:47.052308+00:00] request.INFO: Matched route "api_users_register_collection". {"route":"api_users_register_collection","route_parameters":{"_route":"api_users_register_collection","_controller":"App\\Controller\\Action\\User\\CreateUser","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"register"},"request_uri":"http://localhost/api/users/create","method":"POST"} []
[2021-01-12T10:54:47.052724+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:47.052736+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.052760+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.053230+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.056456+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:47.057079+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.057126+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.057133+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.060268+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:47.060500+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not register an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not register an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:47.875549+00:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"996c89bc-b25a-4feb-a137-6453796447fd"},"request_uri":"http://localhost/api/users/996c89bc-b25a-4feb-a137-6453796447fd","method":"DELETE"} []
[2021-01-12T10:54:47.875951+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:47.875962+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.875985+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.876295+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.879516+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:47.880171+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.880201+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.880207+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:47.881615+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["996c89bc-b25a-4feb-a137-64 [...]"] []
[2021-01-12T10:54:47.885084+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:47.885359+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not delete an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not delete an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:48.482512+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"get","id":"a20364e4-8184-4f54-975c-8130ce2442d3"},"request_uri":"http://localhost/api/users/a20364e4-8184-4f54-975c-8130ce2442d3","method":"GET"} []
[2021-01-12T10:54:48.483121+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:48.483134+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.483162+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.483531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.486900+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:48.487408+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.487434+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.487440+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.488603+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["a20364e4-8184-4f54-975c-81 [...]"] []
[2021-01-12T10:54:48.491137+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:48.491360+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:48.518736+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost/api/users","method":"GET"} []
[2021-01-12T10:54:48.519303+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:48.519315+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.519340+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.519685+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.523248+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:48.523750+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.523773+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.523779+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:48.526726+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:48.526947+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not get the Users" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not get the Users at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:49.374809+00:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"1ffaf4e0-a93d-4fb0-9268-51999e62e538"},"request_uri":"http://localhost/api/users/1ffaf4e0-a93d-4fb0-9268-51999e62e538","method":"PUT"} []
[2021-01-12T10:54:49.375213+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-01-12T10:54:49.375224+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.375247+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.375571+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.378675+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.password AS password_3, t0.roles AS roles_4, t0.created_at AS created_at_5, t0.updated_at AS updated_at_6 FROM `user` t0 WHERE t0.name = ? LIMIT 1 ["Brian"] []
[2021-01-12T10:54:49.379172+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"Brian\", authenticated=true, roles=\"ROLE_EMPRESA_TUUP\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.379197+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.379204+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-01-12T10:54:49.380399+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.password AS password_2, u0_.roles AS roles_3, u0_.created_at AS created_at_4, u0_.updated_at AS updated_at_5 FROM `user` u0_ WHERE u0_.id = ? ["1ffaf4e0-a93d-4fb0-9268-51 [...]"] []
[2021-01-12T10:54:49.383661+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2021-01-12T10:54:49.383945+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Wrong Permissions, You can not update an User" at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Wrong Permissions, You can not update an User at /home/sergio/Sites/NODRIZAstatus/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
